//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApiExt.Generated.Storage;
using System.Collections.Generic;


namespace Substrate.NetApiExt.Generated
{
    
    
    /// <summary>
    /// >> Substrate Client Extension, including all Storage classes direct access.
    /// </summary>
    public sealed class SubstrateClientExt : Substrate.NetApi.SubstrateClient
    {
        
        /// <summary>
        /// StorageKeyDict for key definition informations.
        /// </summary>
        public System.Collections.Generic.Dictionary<System.Tuple<string, string>, System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>> StorageKeyDict;
        
        /// <summary>
        /// SystemStorage storage calls.
        /// </summary>
        public SystemStorage SystemStorage;
        
        /// <summary>
        /// TimestampStorage storage calls.
        /// </summary>
        public TimestampStorage TimestampStorage;
        
        /// <summary>
        /// EnvironmentStorage storage calls.
        /// </summary>
        public EnvironmentStorage EnvironmentStorage;
        
        /// <summary>
        /// FlipStorage storage calls.
        /// </summary>
        public FlipStorage FlipStorage;
        
        /// <summary>
        /// EmissionsStorage storage calls.
        /// </summary>
        public EmissionsStorage EmissionsStorage;
        
        /// <summary>
        /// FundingStorage storage calls.
        /// </summary>
        public FundingStorage FundingStorage;
        
        /// <summary>
        /// AccountRolesStorage storage calls.
        /// </summary>
        public AccountRolesStorage AccountRolesStorage;
        
        /// <summary>
        /// TransactionPaymentStorage storage calls.
        /// </summary>
        public TransactionPaymentStorage TransactionPaymentStorage;
        
        /// <summary>
        /// WitnesserStorage storage calls.
        /// </summary>
        public WitnesserStorage WitnesserStorage;
        
        /// <summary>
        /// ValidatorStorage storage calls.
        /// </summary>
        public ValidatorStorage ValidatorStorage;
        
        /// <summary>
        /// SessionStorage storage calls.
        /// </summary>
        public SessionStorage SessionStorage;
        
        /// <summary>
        /// HistoricalStorage storage calls.
        /// </summary>
        public HistoricalStorage HistoricalStorage;
        
        /// <summary>
        /// AuraStorage storage calls.
        /// </summary>
        public AuraStorage AuraStorage;
        
        /// <summary>
        /// AuthorshipStorage storage calls.
        /// </summary>
        public AuthorshipStorage AuthorshipStorage;
        
        /// <summary>
        /// GrandpaStorage storage calls.
        /// </summary>
        public GrandpaStorage GrandpaStorage;
        
        /// <summary>
        /// GovernanceStorage storage calls.
        /// </summary>
        public GovernanceStorage GovernanceStorage;
        
        /// <summary>
        /// TokenholderGovernanceStorage storage calls.
        /// </summary>
        public TokenholderGovernanceStorage TokenholderGovernanceStorage;
        
        /// <summary>
        /// ReputationStorage storage calls.
        /// </summary>
        public ReputationStorage ReputationStorage;
        
        /// <summary>
        /// EthereumChainTrackingStorage storage calls.
        /// </summary>
        public EthereumChainTrackingStorage EthereumChainTrackingStorage;
        
        /// <summary>
        /// PolkadotChainTrackingStorage storage calls.
        /// </summary>
        public PolkadotChainTrackingStorage PolkadotChainTrackingStorage;
        
        /// <summary>
        /// BitcoinChainTrackingStorage storage calls.
        /// </summary>
        public BitcoinChainTrackingStorage BitcoinChainTrackingStorage;
        
        /// <summary>
        /// EthereumVaultStorage storage calls.
        /// </summary>
        public EthereumVaultStorage EthereumVaultStorage;
        
        /// <summary>
        /// PolkadotVaultStorage storage calls.
        /// </summary>
        public PolkadotVaultStorage PolkadotVaultStorage;
        
        /// <summary>
        /// BitcoinVaultStorage storage calls.
        /// </summary>
        public BitcoinVaultStorage BitcoinVaultStorage;
        
        /// <summary>
        /// EvmThresholdSignerStorage storage calls.
        /// </summary>
        public EvmThresholdSignerStorage EvmThresholdSignerStorage;
        
        /// <summary>
        /// PolkadotThresholdSignerStorage storage calls.
        /// </summary>
        public PolkadotThresholdSignerStorage PolkadotThresholdSignerStorage;
        
        /// <summary>
        /// BitcoinThresholdSignerStorage storage calls.
        /// </summary>
        public BitcoinThresholdSignerStorage BitcoinThresholdSignerStorage;
        
        /// <summary>
        /// EthereumBroadcasterStorage storage calls.
        /// </summary>
        public EthereumBroadcasterStorage EthereumBroadcasterStorage;
        
        /// <summary>
        /// PolkadotBroadcasterStorage storage calls.
        /// </summary>
        public PolkadotBroadcasterStorage PolkadotBroadcasterStorage;
        
        /// <summary>
        /// BitcoinBroadcasterStorage storage calls.
        /// </summary>
        public BitcoinBroadcasterStorage BitcoinBroadcasterStorage;
        
        /// <summary>
        /// SwappingStorage storage calls.
        /// </summary>
        public SwappingStorage SwappingStorage;
        
        /// <summary>
        /// LiquidityProviderStorage storage calls.
        /// </summary>
        public LiquidityProviderStorage LiquidityProviderStorage;
        
        /// <summary>
        /// EthereumIngressEgressStorage storage calls.
        /// </summary>
        public EthereumIngressEgressStorage EthereumIngressEgressStorage;
        
        /// <summary>
        /// PolkadotIngressEgressStorage storage calls.
        /// </summary>
        public PolkadotIngressEgressStorage PolkadotIngressEgressStorage;
        
        /// <summary>
        /// BitcoinIngressEgressStorage storage calls.
        /// </summary>
        public BitcoinIngressEgressStorage BitcoinIngressEgressStorage;
        
        /// <summary>
        /// LiquidityPoolsStorage storage calls.
        /// </summary>
        public LiquidityPoolsStorage LiquidityPoolsStorage;
        
        /// <summary>
        /// CfeInterfaceStorage storage calls.
        /// </summary>
        public CfeInterfaceStorage CfeInterfaceStorage;
        
        /// <summary>
        /// ArbitrumChainTrackingStorage storage calls.
        /// </summary>
        public ArbitrumChainTrackingStorage ArbitrumChainTrackingStorage;
        
        /// <summary>
        /// ArbitrumVaultStorage storage calls.
        /// </summary>
        public ArbitrumVaultStorage ArbitrumVaultStorage;
        
        /// <summary>
        /// ArbitrumBroadcasterStorage storage calls.
        /// </summary>
        public ArbitrumBroadcasterStorage ArbitrumBroadcasterStorage;
        
        /// <summary>
        /// ArbitrumIngressEgressStorage storage calls.
        /// </summary>
        public ArbitrumIngressEgressStorage ArbitrumIngressEgressStorage;
        
        public SubstrateClientExt(System.Uri uri, Substrate.NetApi.Model.Extrinsics.ChargeType chargeType) : 
                base(uri, chargeType)
        {
            StorageKeyDict = new System.Collections.Generic.Dictionary<System.Tuple<string, string>, System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>>();
            this.SystemStorage = new SystemStorage(this);
            this.TimestampStorage = new TimestampStorage(this);
            this.EnvironmentStorage = new EnvironmentStorage(this);
            this.FlipStorage = new FlipStorage(this);
            this.EmissionsStorage = new EmissionsStorage(this);
            this.FundingStorage = new FundingStorage(this);
            this.AccountRolesStorage = new AccountRolesStorage(this);
            this.TransactionPaymentStorage = new TransactionPaymentStorage(this);
            this.WitnesserStorage = new WitnesserStorage(this);
            this.ValidatorStorage = new ValidatorStorage(this);
            this.SessionStorage = new SessionStorage(this);
            this.HistoricalStorage = new HistoricalStorage(this);
            this.AuraStorage = new AuraStorage(this);
            this.AuthorshipStorage = new AuthorshipStorage(this);
            this.GrandpaStorage = new GrandpaStorage(this);
            this.GovernanceStorage = new GovernanceStorage(this);
            this.TokenholderGovernanceStorage = new TokenholderGovernanceStorage(this);
            this.ReputationStorage = new ReputationStorage(this);
            this.EthereumChainTrackingStorage = new EthereumChainTrackingStorage(this);
            this.PolkadotChainTrackingStorage = new PolkadotChainTrackingStorage(this);
            this.BitcoinChainTrackingStorage = new BitcoinChainTrackingStorage(this);
            this.EthereumVaultStorage = new EthereumVaultStorage(this);
            this.PolkadotVaultStorage = new PolkadotVaultStorage(this);
            this.BitcoinVaultStorage = new BitcoinVaultStorage(this);
            this.EvmThresholdSignerStorage = new EvmThresholdSignerStorage(this);
            this.PolkadotThresholdSignerStorage = new PolkadotThresholdSignerStorage(this);
            this.BitcoinThresholdSignerStorage = new BitcoinThresholdSignerStorage(this);
            this.EthereumBroadcasterStorage = new EthereumBroadcasterStorage(this);
            this.PolkadotBroadcasterStorage = new PolkadotBroadcasterStorage(this);
            this.BitcoinBroadcasterStorage = new BitcoinBroadcasterStorage(this);
            this.SwappingStorage = new SwappingStorage(this);
            this.LiquidityProviderStorage = new LiquidityProviderStorage(this);
            this.EthereumIngressEgressStorage = new EthereumIngressEgressStorage(this);
            this.PolkadotIngressEgressStorage = new PolkadotIngressEgressStorage(this);
            this.BitcoinIngressEgressStorage = new BitcoinIngressEgressStorage(this);
            this.LiquidityPoolsStorage = new LiquidityPoolsStorage(this);
            this.CfeInterfaceStorage = new CfeInterfaceStorage(this);
            this.ArbitrumChainTrackingStorage = new ArbitrumChainTrackingStorage(this);
            this.ArbitrumVaultStorage = new ArbitrumVaultStorage(this);
            this.ArbitrumBroadcasterStorage = new ArbitrumBroadcasterStorage(this);
            this.ArbitrumIngressEgressStorage = new ArbitrumIngressEgressStorage(this);
        }
    }
}
