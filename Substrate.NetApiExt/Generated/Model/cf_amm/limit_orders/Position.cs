//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.NetApiExt.Generated.Model.cf_amm.limit_orders
{
    
    
    /// <summary>
    /// >> 514 - Composite[cf_amm.limit_orders.Position]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class Position : BaseType
    {
        
        /// <summary>
        /// >> pool_instance
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 PoolInstance { get; set; }
        /// <summary>
        /// >> amount
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.primitive_types.U256 Amount { get; set; }
        /// <summary>
        /// >> last_percent_remaining
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.cf_amm.limit_orders.FloatBetweenZeroAndOne LastPercentRemaining { get; set; }
        /// <summary>
        /// >> accumulative_fees
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.primitive_types.U256 AccumulativeFees { get; set; }
        /// <summary>
        /// >> original_amount
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.primitive_types.U256 OriginalAmount { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "Position";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(PoolInstance.Encode());
            result.AddRange(Amount.Encode());
            result.AddRange(LastPercentRemaining.Encode());
            result.AddRange(AccumulativeFees.Encode());
            result.AddRange(OriginalAmount.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            PoolInstance = new Substrate.NetApi.Model.Types.Primitive.U128();
            PoolInstance.Decode(byteArray, ref p);
            Amount = new Substrate.NetApiExt.Generated.Model.primitive_types.U256();
            Amount.Decode(byteArray, ref p);
            LastPercentRemaining = new Substrate.NetApiExt.Generated.Model.cf_amm.limit_orders.FloatBetweenZeroAndOne();
            LastPercentRemaining.Decode(byteArray, ref p);
            AccumulativeFees = new Substrate.NetApiExt.Generated.Model.primitive_types.U256();
            AccumulativeFees.Decode(byteArray, ref p);
            OriginalAmount = new Substrate.NetApiExt.Generated.Model.primitive_types.U256();
            OriginalAmount.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
