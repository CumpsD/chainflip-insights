//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.NetApiExt.Generated.Model.cf_amm.limit_orders
{
    
    
    /// <summary>
    /// >> 504 - Composite[cf_amm.limit_orders.PoolState]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class PoolState : BaseType
    {
        
        /// <summary>
        /// >> fee_hundredth_pips
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 FeeHundredthPips { get; set; }
        /// <summary>
        /// >> next_pool_instance
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 NextPoolInstance { get; set; }
        /// <summary>
        /// >> fixed_pools
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT1 FixedPools { get; set; }
        /// <summary>
        /// >> positions
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT2 Positions { get; set; }
        /// <summary>
        /// >> total_fees_earned
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT3 TotalFeesEarned { get; set; }
        /// <summary>
        /// >> total_swap_inputs
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT3 TotalSwapInputs { get; set; }
        /// <summary>
        /// >> total_swap_outputs
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT3 TotalSwapOutputs { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "PoolState";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(FeeHundredthPips.Encode());
            result.AddRange(NextPoolInstance.Encode());
            result.AddRange(FixedPools.Encode());
            result.AddRange(Positions.Encode());
            result.AddRange(TotalFeesEarned.Encode());
            result.AddRange(TotalSwapInputs.Encode());
            result.AddRange(TotalSwapOutputs.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            FeeHundredthPips = new Substrate.NetApi.Model.Types.Primitive.U32();
            FeeHundredthPips.Decode(byteArray, ref p);
            NextPoolInstance = new Substrate.NetApi.Model.Types.Primitive.U128();
            NextPoolInstance.Decode(byteArray, ref p);
            FixedPools = new Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT1();
            FixedPools.Decode(byteArray, ref p);
            Positions = new Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT2();
            Positions.Decode(byteArray, ref p);
            TotalFeesEarned = new Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT3();
            TotalFeesEarned.Decode(byteArray, ref p);
            TotalSwapInputs = new Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT3();
            TotalSwapInputs.Decode(byteArray, ref p);
            TotalSwapOutputs = new Substrate.NetApiExt.Generated.Model.cf_amm.common.SideMapT3();
            TotalSwapOutputs.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
