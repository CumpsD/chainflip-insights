//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.NetApiExt.Generated.Model.cf_chains.btc
{
    
    
    /// <summary>
    /// >> 208 - Composite[cf_chains.btc.BitcoinTransaction]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class BitcoinTransaction : BaseType
    {
        
        /// <summary>
        /// >> inputs
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApiExt.Generated.Model.cf_chains.btc.Utxo> Inputs { get; set; }
        /// <summary>
        /// >> outputs
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApiExt.Generated.Model.cf_chains.btc.BitcoinOutput> Outputs { get; set; }
        /// <summary>
        /// >> signatures
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApiExt.Generated.Types.Base.Arr64U8> Signatures { get; set; }
        /// <summary>
        /// >> transaction_bytes
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> TransactionBytes { get; set; }
        /// <summary>
        /// >> old_utxo_input_indices
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U32> OldUtxoInputIndices { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "BitcoinTransaction";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Inputs.Encode());
            result.AddRange(Outputs.Encode());
            result.AddRange(Signatures.Encode());
            result.AddRange(TransactionBytes.Encode());
            result.AddRange(OldUtxoInputIndices.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Inputs = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApiExt.Generated.Model.cf_chains.btc.Utxo>();
            Inputs.Decode(byteArray, ref p);
            Outputs = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApiExt.Generated.Model.cf_chains.btc.BitcoinOutput>();
            Outputs.Decode(byteArray, ref p);
            Signatures = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApiExt.Generated.Types.Base.Arr64U8>();
            Signatures.Decode(byteArray, ref p);
            TransactionBytes = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>();
            TransactionBytes.Decode(byteArray, ref p);
            OldUtxoInputIndices = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U32>();
            OldUtxoInputIndices.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
