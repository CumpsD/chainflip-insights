//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.NetApiExt.Generated.Model.cf_chains.evm.api
{
    
    
    /// <summary>
    /// >> 176 - Composite[cf_chains.evm.api.EvmReplayProtection]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class EvmReplayProtection : BaseType
    {
        
        /// <summary>
        /// >> nonce
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 Nonce { get; set; }
        /// <summary>
        /// >> chain_id
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 ChainId { get; set; }
        /// <summary>
        /// >> key_manager_address
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.primitive_types.H160 KeyManagerAddress { get; set; }
        /// <summary>
        /// >> contract_address
        /// </summary>
        public Substrate.NetApiExt.Generated.Model.primitive_types.H160 ContractAddress { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "EvmReplayProtection";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Nonce.Encode());
            result.AddRange(ChainId.Encode());
            result.AddRange(KeyManagerAddress.Encode());
            result.AddRange(ContractAddress.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Nonce = new Substrate.NetApi.Model.Types.Primitive.U64();
            Nonce.Decode(byteArray, ref p);
            ChainId = new Substrate.NetApi.Model.Types.Primitive.U64();
            ChainId.Decode(byteArray, ref p);
            KeyManagerAddress = new Substrate.NetApiExt.Generated.Model.primitive_types.H160();
            KeyManagerAddress.Decode(byteArray, ref p);
            ContractAddress = new Substrate.NetApiExt.Generated.Model.primitive_types.H160();
            ContractAddress.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
