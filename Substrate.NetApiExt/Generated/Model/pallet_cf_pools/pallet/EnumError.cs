//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.NetApiExt.Generated.Model.pallet_cf_pools.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// The `Error` enum of this pallet.
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> ZeroBuyIntervalNotAllowed
        /// Setting the buy interval to zero is not allowed.
        /// </summary>
        ZeroBuyIntervalNotAllowed = 0,
        
        /// <summary>
        /// >> PoolAlreadyExists
        /// The specified exchange pool already exists.
        /// </summary>
        PoolAlreadyExists = 1,
        
        /// <summary>
        /// >> PoolDoesNotExist
        /// The specified exchange pool does not exist.
        /// </summary>
        PoolDoesNotExist = 2,
        
        /// <summary>
        /// >> UnspecifiedOrderPrice
        /// For previously unused order ids, you must specific a tick/tick range for the order,
        /// thereby specifying the order price associated with that order id
        /// </summary>
        UnspecifiedOrderPrice = 3,
        
        /// <summary>
        /// >> PoolDisabled
        /// The exchange pool is currently disabled.
        /// </summary>
        PoolDisabled = 4,
        
        /// <summary>
        /// >> InvalidFeeAmount
        /// the Fee BIPs must be within the allowed range.
        /// </summary>
        InvalidFeeAmount = 5,
        
        /// <summary>
        /// >> InvalidInitialPrice
        /// the initial price must be within the allowed range.
        /// </summary>
        InvalidInitialPrice = 6,
        
        /// <summary>
        /// >> InvalidTickRange
        /// The Upper or Lower tick is invalid.
        /// </summary>
        InvalidTickRange = 7,
        
        /// <summary>
        /// >> InvalidTick
        /// The tick is invalid.
        /// </summary>
        InvalidTick = 8,
        
        /// <summary>
        /// >> MaximumGrossLiquidity
        /// One of the referenced ticks reached its maximum gross liquidity
        /// </summary>
        MaximumGrossLiquidity = 9,
        
        /// <summary>
        /// >> OrderDoesNotExist
        /// The user's order does not exist.
        /// </summary>
        OrderDoesNotExist = 10,
        
        /// <summary>
        /// >> MaximumPoolInstances
        /// It is no longer possible to mint limit orders due to reaching the maximum pool
        /// instances, other than for ticks where a fixed pool currently exists.
        /// </summary>
        MaximumPoolInstances = 11,
        
        /// <summary>
        /// >> InsufficientLiquidity
        /// The pool does not have enough liquidity left to process the swap.
        /// </summary>
        InsufficientLiquidity = 12,
        
        /// <summary>
        /// >> OutputOverflow
        /// The swap output is past the maximum allowed amount.
        /// </summary>
        OutputOverflow = 13,
        
        /// <summary>
        /// >> AssetRatioUnachieveable
        /// There are no amounts between the specified maximum and minimum that match the required
        /// ratio of assets
        /// </summary>
        AssetRatioUnachieveable = 14,
        
        /// <summary>
        /// >> UpdatingLimitOrdersDisabled
        /// Updating Limit Orders is disabled.
        /// </summary>
        UpdatingLimitOrdersDisabled = 15,
        
        /// <summary>
        /// >> UpdatingRangeOrdersDisabled
        /// Updating Range Orders is disabled.
        /// </summary>
        UpdatingRangeOrdersDisabled = 16,
        
        /// <summary>
        /// >> UnsupportedCall
        /// Unsupported call.
        /// </summary>
        UnsupportedCall = 17,
        
        /// <summary>
        /// >> LimitOrderUpdateExpired
        /// The update can't be scheduled because it has expired (dispatch_at is in the past).
        /// </summary>
        LimitOrderUpdateExpired = 18,
    }
    
    /// <summary>
    /// >> 642 - Variant[pallet_cf_pools.pallet.Error]
    /// The `Error` enum of this pallet.
    /// </summary>
    public sealed class EnumError : BaseEnum<Error>
    {
    }
}
