[
  1635018093,
  {
    "V15": {
      "types": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 1,
            "type": {
              "def": {
                "array": {
                  "len": 32,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 2,
            "type": {
              "def": {
                "primitive": "u8"
              }
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce"
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 4,
            "type": {
              "def": {
                "primitive": "u32"
              }
            }
          },
          {
            "id": 5,
            "type": {
              "def": {
                "tuple": []
              }
            }
          },
          {
            "id": 6,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 7
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 7,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 7,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 7,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "sp_weights",
                "weight_v2",
                "Weight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ref_time",
                      "type": 8,
                      "typeName": "u64"
                    },
                    {
                      "name": "proof_size",
                      "type": 8,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 8,
            "type": {
              "def": {
                "compact": {
                  "type": 9
                }
              }
            }
          },
          {
            "id": 9,
            "type": {
              "def": {
                "primitive": "u64"
              }
            }
          },
          {
            "id": 10,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 11,
            "type": {
              "def": {
                "sequence": {
                  "type": 2
                }
              }
            }
          },
          {
            "id": 12,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 13,
                      "typeName": "Vec<DigestItem>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 13,
            "type": {
              "def": {
                "sequence": {
                  "type": 14
                }
              }
            }
          },
          {
            "id": 14,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "type": 15,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "type": 15,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "type": 15,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 15,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 16,
            "type": {
              "def": {
                "sequence": {
                  "type": 17
                }
              }
            }
          },
          {
            "id": 17,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 18
                },
                {
                  "name": "T",
                  "type": 10
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 366,
                      "typeName": "Phase"
                    },
                    {
                      "name": "event",
                      "type": 18,
                      "typeName": "E"
                    },
                    {
                      "name": "topics",
                      "type": 367,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 18,
            "type": {
              "path": [
                "state_chain_runtime",
                "RuntimeEvent"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 19,
                          "typeName": "frame_system::Event<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Environment",
                      "fields": [
                        {
                          "type": 29,
                          "typeName": "pallet_cf_environment::Event<Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Flip",
                      "fields": [
                        {
                          "type": 67,
                          "typeName": "pallet_cf_flip::Event<Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Emissions",
                      "fields": [
                        {
                          "type": 72,
                          "typeName": "pallet_cf_emissions::Event<Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Funding",
                      "fields": [
                        {
                          "type": 75,
                          "typeName": "pallet_cf_funding::Event<Runtime>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "AccountRoles",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "pallet_cf_account_roles::Event<Runtime>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "type": 79,
                          "typeName": "pallet_transaction_payment::Event<Runtime>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Witnesser",
                      "fields": [
                        {
                          "type": 80,
                          "typeName": "pallet_cf_witnesser::Event<Runtime>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Validator",
                      "fields": [
                        {
                          "type": 307,
                          "typeName": "pallet_cf_validator::Event<Runtime>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 310,
                          "typeName": "pallet_session::Event"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "type": 311,
                          "typeName": "pallet_grandpa::Event"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Governance",
                      "fields": [
                        {
                          "type": 314,
                          "typeName": "pallet_cf_governance::Event<Runtime>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "TokenholderGovernance",
                      "fields": [
                        {
                          "type": 315,
                          "typeName": "pallet_cf_tokenholder_governance::Event<Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Reputation",
                      "fields": [
                        {
                          "type": 316,
                          "typeName": "pallet_cf_reputation::Event<Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "EthereumChainTracking",
                      "fields": [
                        {
                          "type": 317,
                          "typeName": "pallet_cf_chain_tracking::Event<Runtime, pallet_cf_chain_tracking::\nInstance1>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "PolkadotChainTracking",
                      "fields": [
                        {
                          "type": 318,
                          "typeName": "pallet_cf_chain_tracking::Event<Runtime, pallet_cf_chain_tracking::\nInstance2>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "BitcoinChainTracking",
                      "fields": [
                        {
                          "type": 319,
                          "typeName": "pallet_cf_chain_tracking::Event<Runtime, pallet_cf_chain_tracking::\nInstance3>"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "EthereumVault",
                      "fields": [
                        {
                          "type": 320,
                          "typeName": "pallet_cf_vaults::Event<Runtime, pallet_cf_vaults::Instance1>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "PolkadotVault",
                      "fields": [
                        {
                          "type": 321,
                          "typeName": "pallet_cf_vaults::Event<Runtime, pallet_cf_vaults::Instance2>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "BitcoinVault",
                      "fields": [
                        {
                          "type": 322,
                          "typeName": "pallet_cf_vaults::Event<Runtime, pallet_cf_vaults::Instance3>"
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "EvmThresholdSigner",
                      "fields": [
                        {
                          "type": 323,
                          "typeName": "pallet_cf_threshold_signature::Event<Runtime,\npallet_cf_threshold_signature::Instance16>"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "PolkadotThresholdSigner",
                      "fields": [
                        {
                          "type": 325,
                          "typeName": "pallet_cf_threshold_signature::Event<Runtime,\npallet_cf_threshold_signature::Instance2>"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "BitcoinThresholdSigner",
                      "fields": [
                        {
                          "type": 326,
                          "typeName": "pallet_cf_threshold_signature::Event<Runtime,\npallet_cf_threshold_signature::Instance3>"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "EthereumBroadcaster",
                      "fields": [
                        {
                          "type": 327,
                          "typeName": "pallet_cf_broadcast::Event<Runtime, pallet_cf_broadcast::Instance1>"
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "PolkadotBroadcaster",
                      "fields": [
                        {
                          "type": 329,
                          "typeName": "pallet_cf_broadcast::Event<Runtime, pallet_cf_broadcast::Instance2>"
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "BitcoinBroadcaster",
                      "fields": [
                        {
                          "type": 331,
                          "typeName": "pallet_cf_broadcast::Event<Runtime, pallet_cf_broadcast::Instance3>"
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Swapping",
                      "fields": [
                        {
                          "type": 333,
                          "typeName": "pallet_cf_swapping::Event<Runtime>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "LiquidityProvider",
                      "fields": [
                        {
                          "type": 339,
                          "typeName": "pallet_cf_lp::Event<Runtime>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "EthereumIngressEgress",
                      "fields": [
                        {
                          "type": 340,
                          "typeName": "pallet_cf_ingress_egress::Event<Runtime, pallet_cf_ingress_egress::\nInstance1>"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "PolkadotIngressEgress",
                      "fields": [
                        {
                          "type": 350,
                          "typeName": "pallet_cf_ingress_egress::Event<Runtime, pallet_cf_ingress_egress::\nInstance2>"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "BitcoinIngressEgress",
                      "fields": [
                        {
                          "type": 351,
                          "typeName": "pallet_cf_ingress_egress::Event<Runtime, pallet_cf_ingress_egress::\nInstance3>"
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "LiquidityPools",
                      "fields": [
                        {
                          "type": 355,
                          "typeName": "pallet_cf_pools::Event<Runtime>"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "ArbitrumChainTracking",
                      "fields": [
                        {
                          "type": 362,
                          "typeName": "pallet_cf_chain_tracking::Event<Runtime, pallet_cf_chain_tracking::\nInstance4>"
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "ArbitrumVault",
                      "fields": [
                        {
                          "type": 363,
                          "typeName": "pallet_cf_vaults::Event<Runtime, pallet_cf_vaults::Instance4>"
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "ArbitrumBroadcaster",
                      "fields": [
                        {
                          "type": 364,
                          "typeName": "pallet_cf_broadcast::Event<Runtime, pallet_cf_broadcast::Instance4>"
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "ArbitrumIngressEgress",
                      "fields": [
                        {
                          "type": 365,
                          "typeName": "pallet_cf_ingress_egress::Event<Runtime, pallet_cf_ingress_egress::\nInstance4>"
                        }
                      ],
                      "index": 40
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 19,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 20,
                          "typeName": "DispatchInfo"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 23,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "dispatch_info",
                          "type": 20,
                          "typeName": "DispatchInfo"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "hash",
                          "type": 10,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    },
                    {
                      "name": "UpgradeAuthorized",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 10,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "check_version",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An upgrade was authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 7,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 21,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "pays_fee",
                      "type": 22,
                      "typeName": "Pays"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchClass"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "index": 0
                    },
                    {
                      "name": "Operational",
                      "index": 1
                    },
                    {
                      "name": "Mandatory",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "Pays"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "index": 0
                    },
                    {
                      "name": "No",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "index": 0
                    },
                    {
                      "name": "CannotLookup",
                      "index": 1
                    },
                    {
                      "name": "BadOrigin",
                      "index": 2
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "type": 24,
                          "typeName": "ModuleError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ConsumerRemaining",
                      "index": 4
                    },
                    {
                      "name": "NoProviders",
                      "index": 5
                    },
                    {
                      "name": "TooManyConsumers",
                      "index": 6
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "type": 25,
                          "typeName": "TokenError"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "type": 26,
                          "typeName": "ArithmeticError"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "type": 27,
                          "typeName": "TransactionalError"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Exhausted",
                      "index": 10
                    },
                    {
                      "name": "Corruption",
                      "index": 11
                    },
                    {
                      "name": "Unavailable",
                      "index": 12
                    },
                    {
                      "name": "RootNotAllowed",
                      "index": 13
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "error",
                      "type": 15,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FundsUnavailable",
                      "index": 0
                    },
                    {
                      "name": "OnlyProvider",
                      "index": 1
                    },
                    {
                      "name": "BelowMinimum",
                      "index": 2
                    },
                    {
                      "name": "CannotCreate",
                      "index": 3
                    },
                    {
                      "name": "UnknownAsset",
                      "index": 4
                    },
                    {
                      "name": "Frozen",
                      "index": 5
                    },
                    {
                      "name": "Unsupported",
                      "index": 6
                    },
                    {
                      "name": "CannotCreateHold",
                      "index": 7
                    },
                    {
                      "name": "NotExpendable",
                      "index": 8
                    },
                    {
                      "name": "Blocked",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_arithmetic",
                "ArithmeticError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "index": 0
                    },
                    {
                      "name": "Overflow",
                      "index": 1
                    },
                    {
                      "name": "DivisionByZero",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "index": 0
                    },
                    {
                      "name": "NoLayer",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 28,
            "type": {
              "def": {
                "primitive": "bool"
              }
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "pallet_cf_environment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AddedNewEthAsset",
                      "fields": [
                        {
                          "type": 30,
                          "typeName": "EthAsset"
                        },
                        {
                          "type": 31,
                          "typeName": "EvmAddress"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new supported ETH asset was added"
                      ]
                    },
                    {
                      "name": "UpdatedEthAsset",
                      "fields": [
                        {
                          "type": 30,
                          "typeName": "EthAsset"
                        },
                        {
                          "type": 31,
                          "typeName": "EvmAddress"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The address of an supported ETH asset was updated"
                      ]
                    },
                    {
                      "name": "AddedNewArbAsset",
                      "fields": [
                        {
                          "type": 33,
                          "typeName": "ArbAsset"
                        },
                        {
                          "type": 31,
                          "typeName": "EvmAddress"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A new supported ARB asset was added"
                      ]
                    },
                    {
                      "name": "UpdatedArbAsset",
                      "fields": [
                        {
                          "type": 33,
                          "typeName": "ArbAsset"
                        },
                        {
                          "type": 31,
                          "typeName": "EvmAddress"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The address of an supported ARB asset was updated"
                      ]
                    },
                    {
                      "name": "PolkadotVaultAccountSet",
                      "fields": [
                        {
                          "name": "polkadot_vault_account_id",
                          "type": 34,
                          "typeName": "PolkadotAccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Polkadot Vault Account is successfully set"
                      ]
                    },
                    {
                      "name": "BitcoinBlockNumberSetForVault",
                      "fields": [
                        {
                          "name": "block_number",
                          "type": 9,
                          "typeName": "cf_chains::btc::BlockNumber"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The starting block number for the new Bitcoin vault was set"
                      ]
                    },
                    {
                      "name": "RuntimeSafeModeUpdated",
                      "fields": [
                        {
                          "name": "safe_mode",
                          "type": 35,
                          "typeName": "SafeModeUpdate<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The Safe Mode settings for the chain has been updated"
                      ]
                    },
                    {
                      "name": "UtxoConsolidationParametersUpdated",
                      "fields": [
                        {
                          "name": "params",
                          "type": 57,
                          "typeName": "utxo_selection::ConsolidationParameters"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Utxo consolidation parameters has been updated"
                      ]
                    },
                    {
                      "name": "ArbitrumInitialized",
                      "index": 8,
                      "docs": [
                        "Arbitrum Initialized: contract addresses have been set, first key activated"
                      ]
                    },
                    {
                      "name": "StaleUtxosDiscarded",
                      "fields": [
                        {
                          "name": "utxos",
                          "type": 58,
                          "typeName": "Vec<Utxo>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some unspendable Utxos are discarded from storage."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 30,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "eth",
                "Asset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Eth",
                      "index": 0
                    },
                    {
                      "name": "Flip",
                      "index": 1
                    },
                    {
                      "name": "Usdc",
                      "index": 2
                    },
                    {
                      "name": "Usdt",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "primitive_types",
                "H160"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 32,
                      "typeName": "[u8; 20]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 32,
            "type": {
              "def": {
                "array": {
                  "len": 20,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "arb",
                "Asset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ArbEth",
                      "index": 0
                    },
                    {
                      "name": "ArbUsdc",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotAccountId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 35,
            "type": {
              "path": [
                "pallet_cf_environment",
                "SafeModeUpdate"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CodeRed",
                      "index": 0
                    },
                    {
                      "name": "CodeGreen",
                      "index": 1
                    },
                    {
                      "name": "CodeAmber",
                      "fields": [
                        {
                          "type": 36,
                          "typeName": "T::RuntimeSafeMode"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 36,
            "type": {
              "path": [
                "state_chain_runtime",
                "safe_mode",
                "__inner",
                "RuntimeSafeMode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "emissions",
                      "type": 37,
                      "typeName": "pallet_cf_emissions::PalletSafeMode"
                    },
                    {
                      "name": "funding",
                      "type": 38,
                      "typeName": "pallet_cf_funding::PalletSafeMode"
                    },
                    {
                      "name": "swapping",
                      "type": 39,
                      "typeName": "pallet_cf_swapping::PalletSafeMode"
                    },
                    {
                      "name": "liquidity_provider",
                      "type": 40,
                      "typeName": "pallet_cf_lp::PalletSafeMode"
                    },
                    {
                      "name": "validator",
                      "type": 41,
                      "typeName": "pallet_cf_validator::PalletSafeMode"
                    },
                    {
                      "name": "pools",
                      "type": 42,
                      "typeName": "pallet_cf_pools::PalletSafeMode"
                    },
                    {
                      "name": "reputation",
                      "type": 43,
                      "typeName": "pallet_cf_reputation::PalletSafeMode"
                    },
                    {
                      "name": "threshold_signature_evm",
                      "type": 44,
                      "typeName": "pallet_cf_threshold_signature::PalletSafeMode<Instance16>"
                    },
                    {
                      "name": "threshold_signature_bitcoin",
                      "type": 45,
                      "typeName": "pallet_cf_threshold_signature::PalletSafeMode<Instance3>"
                    },
                    {
                      "name": "threshold_signature_polkadot",
                      "type": 46,
                      "typeName": "pallet_cf_threshold_signature::PalletSafeMode<Instance2>"
                    },
                    {
                      "name": "broadcast_ethereum",
                      "type": 47,
                      "typeName": "pallet_cf_broadcast::PalletSafeMode<Instance1>"
                    },
                    {
                      "name": "broadcast_bitcoin",
                      "type": 48,
                      "typeName": "pallet_cf_broadcast::PalletSafeMode<Instance3>"
                    },
                    {
                      "name": "broadcast_polkadot",
                      "type": 49,
                      "typeName": "pallet_cf_broadcast::PalletSafeMode<Instance2>"
                    },
                    {
                      "name": "broadcast_arbitrum",
                      "type": 50,
                      "typeName": "pallet_cf_broadcast::PalletSafeMode<Instance4>"
                    },
                    {
                      "name": "witnesser",
                      "type": 51,
                      "typeName": "pallet_cf_witnesser::PalletSafeMode<WitnesserCallPermission>"
                    },
                    {
                      "name": "ingress_egress_ethereum",
                      "type": 53,
                      "typeName": "pallet_cf_ingress_egress::PalletSafeMode<Instance1>"
                    },
                    {
                      "name": "ingress_egress_bitcoin",
                      "type": 54,
                      "typeName": "pallet_cf_ingress_egress::PalletSafeMode<Instance3>"
                    },
                    {
                      "name": "ingress_egress_polkadot",
                      "type": 55,
                      "typeName": "pallet_cf_ingress_egress::PalletSafeMode<Instance2>"
                    },
                    {
                      "name": "ingress_egress_arbitrum",
                      "type": 56,
                      "typeName": "pallet_cf_ingress_egress::PalletSafeMode<Instance4>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 37,
            "type": {
              "path": [
                "pallet_cf_emissions",
                "PalletSafeMode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "emissions_sync_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 38,
            "type": {
              "path": [
                "pallet_cf_funding",
                "PalletSafeMode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "redeem_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 39,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "PalletSafeMode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "swaps_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "withdrawals_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "broker_registration_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 40,
            "type": {
              "path": [
                "pallet_cf_lp",
                "PalletSafeMode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "withdrawal_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "pallet_cf_validator",
                "PalletSafeMode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "authority_rotation_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "start_bidding_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "stop_bidding_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 42,
            "type": {
              "path": [
                "pallet_cf_pools",
                "PalletSafeMode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "range_order_update_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "limit_order_update_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 43,
            "type": {
              "path": [
                "pallet_cf_reputation",
                "PalletSafeMode"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "reporting_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 44,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "slashing_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 45,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "slashing_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 46,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "slashing_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 47,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "retry_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 48,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "retry_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 49,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "retry_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 50,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "retry_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 51,
            "type": {
              "path": [
                "pallet_cf_witnesser",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "CallPermission",
                  "type": 52
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CodeGreen",
                      "index": 0
                    },
                    {
                      "name": "CodeRed",
                      "index": 1
                    },
                    {
                      "name": "CodeAmber",
                      "fields": [
                        {
                          "type": 52,
                          "typeName": "CallPermission"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 52,
            "type": {
              "path": [
                "state_chain_runtime",
                "safe_mode",
                "WitnesserCallPermission"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "governance",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "funding",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "swapping",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "ethereum_broadcast",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "ethereum_chain_tracking",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "ethereum_ingress_egress",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "ethereum_vault",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "polkadot_broadcast",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "polkadot_chain_tracking",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "polkadot_ingress_egress",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "polkadot_vault",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "bitcoin_broadcast",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "bitcoin_chain_tracking",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "bitcoin_ingress_egress",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "bitcoin_vault",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "arbitrum_broadcast",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "arbitrum_chain_tracking",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "arbitrum_ingress_egress",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "arbitrum_vault",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "boost_deposits_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "add_boost_funds_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "stop_boosting_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "deposits_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "boost_deposits_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "add_boost_funds_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "stop_boosting_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "deposits_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 55,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "boost_deposits_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "add_boost_funds_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "stop_boosting_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "deposits_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 56,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PalletSafeMode"
              ],
              "params": [
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "boost_deposits_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "add_boost_funds_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "stop_boosting_enabled",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "deposits_enabled",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 57,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "utxo_selection",
                "ConsolidationParameters"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "consolidation_threshold",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "consolidation_size",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 58,
            "type": {
              "def": {
                "sequence": {
                  "type": 59
                }
              }
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "Utxo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 60,
                      "typeName": "UtxoId"
                    },
                    {
                      "name": "amount",
                      "type": 9,
                      "typeName": "BtcAmount"
                    },
                    {
                      "name": "deposit_address",
                      "type": 61,
                      "typeName": "DepositAddress"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 60,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "UtxoId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "tx_id",
                      "type": 10,
                      "typeName": "Hash"
                    },
                    {
                      "name": "vout",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 61,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "deposit_address",
                "DepositAddress"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pubkey_x",
                      "type": 1,
                      "typeName": "[u8; 32]"
                    },
                    {
                      "name": "script_path",
                      "type": 62,
                      "typeName": "Option<TapscriptPath>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 62,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 63
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 63
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 63,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "deposit_address",
                "TapscriptPath"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "salt",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "tweaked_pubkey_bytes",
                      "type": 64,
                      "typeName": "[u8; 33]"
                    },
                    {
                      "name": "tapleaf_hash",
                      "type": 1,
                      "typeName": "[u8; 32]"
                    },
                    {
                      "name": "unlock_script",
                      "type": 65,
                      "typeName": "BitcoinScript"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 64,
            "type": {
              "def": {
                "array": {
                  "len": 33,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 65,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "BitcoinScript"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bytes",
                      "type": 66,
                      "typeName": "BoundedVec<u8, ConstU32<MAX_BITCOIN_SCRIPT_LENGTH>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 66,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 67,
            "type": {
              "path": [
                "pallet_cf_flip",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RemainingImbalance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 68,
                          "typeName": "ImbalanceSource<T::AccountId>"
                        },
                        {
                          "name": "remaining_imbalance",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Some imbalance could not be settled and the remainder will be reverted."
                      ]
                    },
                    {
                      "name": "SlashingPerformed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "AccountReaped",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "dust_burned",
                          "type": 70,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "SlashingRateUpdated",
                      "fields": [
                        {
                          "name": "slashing_rate",
                          "type": 71,
                          "typeName": "Permill"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 68,
            "type": {
              "path": [
                "pallet_cf_flip",
                "imbalances",
                "ImbalanceSource"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "External",
                      "index": 0
                    },
                    {
                      "name": "Internal",
                      "fields": [
                        {
                          "type": 69,
                          "typeName": "InternalSource<AccountId>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Emissions",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 69,
            "type": {
              "path": [
                "pallet_cf_flip",
                "imbalances",
                "InternalSource"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Account",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Reserve",
                      "fields": [
                        {
                          "type": 15,
                          "typeName": "ReserveId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "PendingRedemption",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 70,
            "type": {
              "def": {
                "primitive": "u128"
              }
            }
          },
          {
            "id": 71,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Permill"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 72,
            "type": {
              "path": [
                "pallet_cf_emissions",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SupplyUpdateBroadcastRequested",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Supply Update has been Broadcasted [block_number]"
                      ]
                    },
                    {
                      "name": "CurrentAuthorityInflationEmissionsUpdated",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Current authority inflation emission has been updated \\[new\\]"
                      ]
                    },
                    {
                      "name": "BackupNodeInflationEmissionsUpdated",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Backup node inflation emission has been updated \\[new\\]"
                      ]
                    },
                    {
                      "name": "SupplyUpdateIntervalUpdated",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "SupplyUpdateInterval has been updated [block_number]"
                      ]
                    },
                    {
                      "name": "BackupRewardsDistributed",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "T::FlipBalance"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Rewards have been distributed to [account_id] \\[amount\\]"
                      ]
                    },
                    {
                      "name": "NetworkFeeBurned",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The Flip that was bought using the network fee has been burned."
                      ]
                    },
                    {
                      "name": "FlipBurnSkipped",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The Flip burn was skipped."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 73,
            "type": {
              "def": {
                "tuple": [
                  74,
                  9
                ]
              }
            }
          },
          {
            "id": 74,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "ForeignChain"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ethereum",
                      "index": 1
                    },
                    {
                      "name": "Polkadot",
                      "index": 2
                    },
                    {
                      "name": "Bitcoin",
                      "index": 3
                    },
                    {
                      "name": "Arbitrum",
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 75,
            "type": {
              "path": [
                "pallet_cf_funding",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Funded",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "name": "tx_hash",
                          "type": 1,
                          "typeName": "EthTransactionHash"
                        },
                        {
                          "name": "funds_added",
                          "type": 70,
                          "typeName": "FlipBalance<T>"
                        },
                        {
                          "name": "total_balance",
                          "type": 70,
                          "typeName": "FlipBalance<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account has been funded with some FLIP."
                      ]
                    },
                    {
                      "name": "RedemptionRequested",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "FlipBalance<T>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "expiry_time",
                          "type": 9,
                          "typeName": "u64"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "RedemptionSettled",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "type": 70,
                          "typeName": "FlipBalance<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A node has redeemed their FLIP on the Ethereum chain. \\[account_id,",
                        "redeemed_amount\\]"
                      ]
                    },
                    {
                      "name": "RedemptionExpired",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A redemption has expired without being executed."
                      ]
                    },
                    {
                      "name": "AddedRestrictedAddress",
                      "fields": [
                        {
                          "name": "address",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A new restricted address has been added"
                      ]
                    },
                    {
                      "name": "RemovedRestrictedAddress",
                      "fields": [
                        {
                          "name": "address",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A restricted address has been removed"
                      ]
                    },
                    {
                      "name": "FailedFundingAttempt",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "name": "withdrawal_address",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "FlipBalance<T>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A funding attempt has failed."
                      ]
                    },
                    {
                      "name": "MinimumFundingUpdated",
                      "fields": [
                        {
                          "name": "new_minimum",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The minimum funding amount has been updated."
                      ]
                    },
                    {
                      "name": "RedemptionTaxAmountUpdated",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The Withdrawal Tax has been updated."
                      ]
                    },
                    {
                      "name": "RedemptionAmountZero",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "The redemption amount was zero, so no redemption was made. The tax was still levied."
                      ]
                    },
                    {
                      "name": "BoundRedeemAddress",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "name": "address",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "An account has been bound to an address."
                      ]
                    },
                    {
                      "name": "BoundExecutorAddress",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "name": "address",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "An account has been bound to an executor address."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 76,
            "type": {
              "path": [
                "pallet_cf_account_roles",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AccountRoleRegistered",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "role",
                          "type": 77,
                          "typeName": "AccountRole"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AccountRoleDeregistered",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "role",
                          "type": 77,
                          "typeName": "AccountRole"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "VanityNameSet",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "name",
                          "type": 78,
                          "typeName": "VanityName"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Vanity Name for a node has been set."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 77,
            "type": {
              "path": [
                "cf_primitives",
                "AccountRole"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unregistered",
                      "index": 0
                    },
                    {
                      "name": "Validator",
                      "index": 1
                    },
                    {
                      "name": "LiquidityProvider",
                      "index": 2
                    },
                    {
                      "name": "Broker",
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 78,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 79,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "actual_fee",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "tip",
                          "type": 70,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 80,
            "type": {
              "path": [
                "pallet_cf_witnesser",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WitnessExecutionFailed",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 81,
                          "typeName": "CallHash"
                        },
                        {
                          "name": "error",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A witness call has failed."
                      ]
                    },
                    {
                      "name": "Prewitnessed",
                      "fields": [
                        {
                          "name": "call",
                          "type": 82,
                          "typeName": "<T as Config>::RuntimeCall"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A an external event has been pre-witnessed."
                      ]
                    },
                    {
                      "name": "PrewitnessExecutionFailed",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 81,
                          "typeName": "CallHash"
                        },
                        {
                          "name": "error",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A witness call has failed."
                      ]
                    },
                    {
                      "name": "ReportedWitnessingFailures",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 81,
                          "typeName": "CallHash"
                        },
                        {
                          "name": "block_number",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "accounts",
                          "type": 128,
                          "typeName": "Vec<<T as Chainflip>::ValidatorId>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "One or more node(s) has been reported for the offence of \"FailedToWitnessInTime\"."
                      ]
                    },
                    {
                      "name": "CallDispatched",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 81,
                          "typeName": "CallHash"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A witnessed call has been dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 81,
            "type": {
              "path": [
                "pallet_cf_witnesser",
                "pallet",
                "CallHash"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 82,
            "type": {
              "path": [
                "state_chain_runtime",
                "RuntimeCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 83,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "type": 87,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Environment",
                      "fields": [
                        {
                          "type": 88,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Environment, Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Flip",
                      "fields": [
                        {
                          "type": 92,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Flip, Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Emissions",
                      "fields": [
                        {
                          "type": 93,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Emissions, Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Funding",
                      "fields": [
                        {
                          "type": 94,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Funding, Runtime>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "AccountRoles",
                      "fields": [
                        {
                          "type": 98,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AccountRoles, Runtime>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Witnesser",
                      "fields": [
                        {
                          "type": 99,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Witnesser, Runtime>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Validator",
                      "fields": [
                        {
                          "type": 100,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Validator, Runtime>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 113,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "type": 114,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Governance",
                      "fields": [
                        {
                          "type": 125,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Governance, Runtime>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "TokenholderGovernance",
                      "fields": [
                        {
                          "type": 131,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TokenholderGovernance, Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Reputation",
                      "fields": [
                        {
                          "type": 133,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Reputation, Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "EthereumChainTracking",
                      "fields": [
                        {
                          "type": 137,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EthereumChainTracking, Runtime>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "PolkadotChainTracking",
                      "fields": [
                        {
                          "type": 142,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotChainTracking, Runtime>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "BitcoinChainTracking",
                      "fields": [
                        {
                          "type": 147,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BitcoinChainTracking, Runtime>"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "EthereumVault",
                      "fields": [
                        {
                          "type": 152,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EthereumVault, Runtime>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "PolkadotVault",
                      "fields": [
                        {
                          "type": 155,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotVault, Runtime>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "BitcoinVault",
                      "fields": [
                        {
                          "type": 156,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BitcoinVault, Runtime>"
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "EvmThresholdSigner",
                      "fields": [
                        {
                          "type": 157,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EvmThresholdSigner, Runtime>"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "PolkadotThresholdSigner",
                      "fields": [
                        {
                          "type": 160,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotThresholdSigner, Runtime>"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "BitcoinThresholdSigner",
                      "fields": [
                        {
                          "type": 164,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BitcoinThresholdSigner, Runtime>"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "EthereumBroadcaster",
                      "fields": [
                        {
                          "type": 167,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EthereumBroadcaster, Runtime>"
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "PolkadotBroadcaster",
                      "fields": [
                        {
                          "type": 201,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotBroadcaster, Runtime>"
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "BitcoinBroadcaster",
                      "fields": [
                        {
                          "type": 220,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BitcoinBroadcaster, Runtime>"
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Swapping",
                      "fields": [
                        {
                          "type": 232,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Swapping, Runtime>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "LiquidityProvider",
                      "fields": [
                        {
                          "type": 249,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<LiquidityProvider, Runtime>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "EthereumIngressEgress",
                      "fields": [
                        {
                          "type": 250,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EthereumIngressEgress, Runtime>"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "PolkadotIngressEgress",
                      "fields": [
                        {
                          "type": 258,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotIngressEgress, Runtime>"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "BitcoinIngressEgress",
                      "fields": [
                        {
                          "type": 268,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BitcoinIngressEgress, Runtime>"
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "LiquidityPools",
                      "fields": [
                        {
                          "type": 278,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<LiquidityPools, Runtime>"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "ArbitrumChainTracking",
                      "fields": [
                        {
                          "type": 291,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ArbitrumChainTracking, Runtime>"
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "ArbitrumVault",
                      "fields": [
                        {
                          "type": 296,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ArbitrumVault, Runtime>"
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "ArbitrumBroadcaster",
                      "fields": [
                        {
                          "type": 297,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ArbitrumBroadcaster, Runtime>"
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "ArbitrumIngressEgress",
                      "fields": [
                        {
                          "type": 299,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ArbitrumIngressEgress, Runtime>"
                        }
                      ],
                      "index": 40
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 83,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::remark`]."
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 9,
                          "typeName": "u64"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_heap_pages`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_code_without_checks`]."
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 84,
                          "typeName": "Vec<KeyValue>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_storage`]."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 86,
                          "typeName": "Vec<Key>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_storage`]."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 11,
                          "typeName": "Key"
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::kill_prefix`]."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remark_with_event`]."
                      ]
                    },
                    {
                      "name": "authorize_upgrade",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 10,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::authorize_upgrade`]."
                      ]
                    },
                    {
                      "name": "authorize_upgrade_without_checks",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 10,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::authorize_upgrade_without_checks`]."
                      ]
                    },
                    {
                      "name": "apply_authorized_upgrade",
                      "fields": [
                        {
                          "name": "code",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::apply_authorized_upgrade`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 84,
            "type": {
              "def": {
                "sequence": {
                  "type": 85
                }
              }
            }
          },
          {
            "id": 85,
            "type": {
              "def": {
                "tuple": [
                  11,
                  11
                ]
              }
            }
          },
          {
            "id": 86,
            "type": {
              "def": {
                "sequence": {
                  "type": 11
                }
              }
            }
          },
          {
            "id": 87,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 8,
                          "typeName": "T::Moment"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 88,
            "type": {
              "path": [
                "pallet_cf_environment",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "witness_polkadot_vault_creation",
                      "fields": [
                        {
                          "name": "dot_pure_proxy_vault_key",
                          "type": 34,
                          "typeName": "PolkadotAccountId"
                        },
                        {
                          "name": "tx_id",
                          "type": 89,
                          "typeName": "TxId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::witness_polkadot_vault_creation`]."
                      ]
                    },
                    {
                      "name": "witness_current_bitcoin_block_number_for_key",
                      "fields": [
                        {
                          "name": "block_number",
                          "type": 9,
                          "typeName": "cf_chains::btc::BlockNumber"
                        },
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "cf_chains::btc::AggKey"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::witness_current_bitcoin_block_number_for_key`]."
                      ]
                    },
                    {
                      "name": "update_safe_mode",
                      "fields": [
                        {
                          "name": "update",
                          "type": 35,
                          "typeName": "SafeModeUpdate<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::update_safe_mode`]."
                      ]
                    },
                    {
                      "name": "update_consolidation_parameters",
                      "fields": [
                        {
                          "name": "params",
                          "type": 57,
                          "typeName": "utxo_selection::ConsolidationParameters"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::update_consolidation_parameters`]."
                      ]
                    },
                    {
                      "name": "witness_initialize_arbitrum_vault",
                      "fields": [
                        {
                          "name": "block_number",
                          "type": 9,
                          "typeName": "u64"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::witness_initialize_arbitrum_vault`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 89,
            "type": {
              "path": [
                "cf_primitives",
                "TxId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_number",
                      "type": 4,
                      "typeName": "PolkadotBlockNumber"
                    },
                    {
                      "name": "extrinsic_index",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 90,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "AggKey"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "previous",
                      "type": 91,
                      "typeName": "Option<[u8; 32]>"
                    },
                    {
                      "name": "current",
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 91,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 1
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 1
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 92,
            "type": {
              "path": [
                "pallet_cf_flip",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_slashing_rate",
                      "fields": [
                        {
                          "name": "slashing_rate",
                          "type": 71,
                          "typeName": "Permill"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_slashing_rate`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 93,
            "type": {
              "path": [
                "pallet_cf_emissions",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_current_authority_emission_inflation",
                      "fields": [
                        {
                          "name": "inflation",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_current_authority_emission_inflation`]."
                      ]
                    },
                    {
                      "name": "update_backup_node_emission_inflation",
                      "fields": [
                        {
                          "name": "inflation",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update_backup_node_emission_inflation`]."
                      ]
                    },
                    {
                      "name": "update_supply_update_interval",
                      "fields": [
                        {
                          "name": "value",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::update_supply_update_interval`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "pallet_cf_funding",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "funded",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "FlipBalance<T>"
                        },
                        {
                          "name": "funder",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        },
                        {
                          "name": "tx_hash",
                          "type": 1,
                          "typeName": "EthTransactionHash"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::funded`]."
                      ]
                    },
                    {
                      "name": "redeem",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 95,
                          "typeName": "RedemptionAmount<FlipBalance<T>>"
                        },
                        {
                          "name": "address",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        },
                        {
                          "name": "executor",
                          "type": 96,
                          "typeName": "Option<EthereumAddress>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::redeem`]."
                      ]
                    },
                    {
                      "name": "redeemed",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "name": "redeemed_amount",
                          "type": 70,
                          "typeName": "FlipBalance<T>"
                        },
                        {
                          "name": "tx_hash",
                          "type": 1,
                          "typeName": "EthTransactionHash"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::redeemed`]."
                      ]
                    },
                    {
                      "name": "redemption_expired",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "AccountId<T>"
                        },
                        {
                          "name": "block_number",
                          "type": 9,
                          "typeName": "u64"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::redemption_expired`]."
                      ]
                    },
                    {
                      "name": "stop_bidding",
                      "index": 4,
                      "docs": [
                        "See [`Pallet::stop_bidding`]."
                      ]
                    },
                    {
                      "name": "start_bidding",
                      "index": 5,
                      "docs": [
                        "See [`Pallet::start_bidding`]."
                      ]
                    },
                    {
                      "name": "update_minimum_funding",
                      "fields": [
                        {
                          "name": "minimum_funding",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::update_minimum_funding`]."
                      ]
                    },
                    {
                      "name": "update_restricted_addresses",
                      "fields": [
                        {
                          "name": "addresses_to_add",
                          "type": 97,
                          "typeName": "Vec<EthereumAddress>"
                        },
                        {
                          "name": "addresses_to_remove",
                          "type": 97,
                          "typeName": "Vec<EthereumAddress>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::update_restricted_addresses`]."
                      ]
                    },
                    {
                      "name": "bind_redeem_address",
                      "fields": [
                        {
                          "name": "address",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::bind_redeem_address`]."
                      ]
                    },
                    {
                      "name": "update_redemption_tax",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::update_redemption_tax`]."
                      ]
                    },
                    {
                      "name": "bind_executor_address",
                      "fields": [
                        {
                          "name": "executor_address",
                          "type": 31,
                          "typeName": "EthereumAddress"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::bind_executor_address`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 95,
            "type": {
              "path": [
                "pallet_cf_funding",
                "pallet",
                "RedemptionAmount"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Max",
                      "index": 0
                    },
                    {
                      "name": "Exact",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "T"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 96,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 31
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 31
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 97,
            "type": {
              "def": {
                "sequence": {
                  "type": 31
                }
              }
            }
          },
          {
            "id": 98,
            "type": {
              "path": [
                "pallet_cf_account_roles",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_vanity_name",
                      "fields": [
                        {
                          "name": "name",
                          "type": 78,
                          "typeName": "VanityName"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_vanity_name`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 99,
            "type": {
              "path": [
                "pallet_cf_witnesser",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "witness_at_epoch",
                      "fields": [
                        {
                          "name": "call",
                          "type": 82,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::witness_at_epoch`]."
                      ]
                    },
                    {
                      "name": "force_witness",
                      "fields": [
                        {
                          "name": "call",
                          "type": 82,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_witness`]."
                      ]
                    },
                    {
                      "name": "prewitness",
                      "fields": [
                        {
                          "name": "call",
                          "type": 82,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::prewitness`]."
                      ]
                    },
                    {
                      "name": "prewitness_and_execute",
                      "fields": [
                        {
                          "name": "call",
                          "type": 82,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::prewitness_and_execute`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "pallet_cf_validator",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_pallet_config",
                      "fields": [
                        {
                          "name": "update",
                          "type": 101,
                          "typeName": "PalletConfigUpdate"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_pallet_config`]."
                      ]
                    },
                    {
                      "name": "force_rotation",
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_rotation`]."
                      ]
                    },
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 105,
                          "typeName": "T::Keys"
                        },
                        {
                          "name": "proof",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_keys`]."
                      ]
                    },
                    {
                      "name": "register_peer_id",
                      "fields": [
                        {
                          "name": "peer_id",
                          "type": 109,
                          "typeName": "Ed25519PublicKey"
                        },
                        {
                          "name": "port",
                          "type": 110,
                          "typeName": "Port"
                        },
                        {
                          "name": "ip_address",
                          "type": 70,
                          "typeName": "Ipv6Addr"
                        },
                        {
                          "name": "signature",
                          "type": 111,
                          "typeName": "Ed25519Signature"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::register_peer_id`]."
                      ]
                    },
                    {
                      "name": "cfe_version",
                      "fields": [
                        {
                          "name": "new_version",
                          "type": 104,
                          "typeName": "Version"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::cfe_version`]."
                      ]
                    },
                    {
                      "name": "register_as_validator",
                      "index": 6,
                      "docs": [
                        "See [`Pallet::register_as_validator`]."
                      ]
                    },
                    {
                      "name": "deregister_as_validator",
                      "index": 7,
                      "docs": [
                        "See [`Pallet::deregister_as_validator`]."
                      ]
                    },
                    {
                      "name": "start_bidding",
                      "index": 8,
                      "docs": [
                        "See [`Pallet::start_bidding`]."
                      ]
                    },
                    {
                      "name": "stop_bidding",
                      "index": 9,
                      "docs": [
                        "See [`Pallet::stop_bidding`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "pallet_cf_validator",
                "PalletConfigUpdate"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RegistrationBondPercentage",
                      "fields": [
                        {
                          "name": "percentage",
                          "type": 102,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AuctionBidCutoffPercentage",
                      "fields": [
                        {
                          "name": "percentage",
                          "type": 102,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "RedemptionPeriodAsPercentage",
                      "fields": [
                        {
                          "name": "percentage",
                          "type": 102,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "BackupRewardNodePercentage",
                      "fields": [
                        {
                          "name": "percentage",
                          "type": 102,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "EpochDuration",
                      "fields": [
                        {
                          "name": "blocks",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "AuthoritySetMinSize",
                      "fields": [
                        {
                          "name": "min_size",
                          "type": 4,
                          "typeName": "AuthorityCount"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "AuctionParameters",
                      "fields": [
                        {
                          "name": "parameters",
                          "type": 103,
                          "typeName": "SetSizeParameters"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "MinimumReportedCfeVersion",
                      "fields": [
                        {
                          "name": "version",
                          "type": 104,
                          "typeName": "SemVer"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "MaxAuthoritySetContractionPercentage",
                      "fields": [
                        {
                          "name": "percentage",
                          "type": 102,
                          "typeName": "Percent"
                        }
                      ],
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 102,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Percent"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 103,
            "type": {
              "path": [
                "pallet_cf_validator",
                "auction_resolver",
                "SetSizeParameters"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "min_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_size",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "max_expansion",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 104,
            "type": {
              "path": [
                "cf_primitives",
                "SemVer"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "major",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "minor",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "patch",
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 105,
            "type": {
              "path": [
                "state_chain_runtime",
                "opaque",
                "SessionKeys"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "aura",
                      "type": 106,
                      "typeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public"
                    },
                    {
                      "name": "grandpa",
                      "type": 108,
                      "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 106,
            "type": {
              "path": [
                "sp_consensus_aura",
                "sr25519",
                "app_sr25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 107,
                      "typeName": "sr25519::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 107,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 108,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 109,
                      "typeName": "ed25519::Public"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 109,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Public"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 110,
            "type": {
              "def": {
                "primitive": "u16"
              }
            }
          },
          {
            "id": 111,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 112,
                      "typeName": "[u8; 64]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 112,
            "type": {
              "def": {
                "array": {
                  "len": 64,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 113,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 105,
                          "typeName": "T::Keys"
                        },
                        {
                          "name": "proof",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_keys`]."
                      ]
                    },
                    {
                      "name": "purge_keys",
                      "index": 1,
                      "docs": [
                        "See [`Pallet::purge_keys`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 114,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_equivocation",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 115,
                          "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>"
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 124,
                          "typeName": "T::KeyOwnerProof"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_equivocation`]."
                      ]
                    },
                    {
                      "name": "report_equivocation_unsigned",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 115,
                          "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>"
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 124,
                          "typeName": "T::KeyOwnerProof"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_equivocation_unsigned`]."
                      ]
                    },
                    {
                      "name": "note_stalled",
                      "fields": [
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        },
                        {
                          "name": "best_finalized_block_number",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::note_stalled`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 115,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "EquivocationProof"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 10
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "set_id",
                      "type": 9,
                      "typeName": "SetId"
                    },
                    {
                      "name": "equivocation",
                      "type": 116,
                      "typeName": "Equivocation<H, N>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 116,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 10
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Prevote",
                      "fields": [
                        {
                          "type": 117,
                          "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Precommit",
                      "fields": [
                        {
                          "type": 121,
                          "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 117,
            "type": {
              "path": [
                "finality_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 108
                },
                {
                  "name": "V",
                  "type": 118
                },
                {
                  "name": "S",
                  "type": 119
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_number",
                      "type": 9,
                      "typeName": "u64"
                    },
                    {
                      "name": "identity",
                      "type": 108,
                      "typeName": "Id"
                    },
                    {
                      "name": "first",
                      "type": 120,
                      "typeName": "(V, S)"
                    },
                    {
                      "name": "second",
                      "type": 120,
                      "typeName": "(V, S)"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 118,
            "type": {
              "path": [
                "finality_grandpa",
                "Prevote"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 10
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 10,
                      "typeName": "H"
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 119,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 111,
                      "typeName": "ed25519::Signature"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 120,
            "type": {
              "def": {
                "tuple": [
                  118,
                  119
                ]
              }
            }
          },
          {
            "id": 121,
            "type": {
              "path": [
                "finality_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 108
                },
                {
                  "name": "V",
                  "type": 122
                },
                {
                  "name": "S",
                  "type": 119
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_number",
                      "type": 9,
                      "typeName": "u64"
                    },
                    {
                      "name": "identity",
                      "type": 108,
                      "typeName": "Id"
                    },
                    {
                      "name": "first",
                      "type": 123,
                      "typeName": "(V, S)"
                    },
                    {
                      "name": "second",
                      "type": 123,
                      "typeName": "(V, S)"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 122,
            "type": {
              "path": [
                "finality_grandpa",
                "Precommit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 10
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 10,
                      "typeName": "H"
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 123,
            "type": {
              "def": {
                "tuple": [
                  122,
                  119
                ]
              }
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "sp_session",
                "MembershipProof"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "session",
                      "type": 4,
                      "typeName": "SessionIndex"
                    },
                    {
                      "name": "trie_nodes",
                      "type": 86,
                      "typeName": "Vec<Vec<u8>>"
                    },
                    {
                      "name": "validator_count",
                      "type": 4,
                      "typeName": "ValidatorCount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 125,
            "type": {
              "path": [
                "pallet_cf_governance",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_governance_extrinsic",
                      "fields": [
                        {
                          "name": "call",
                          "type": 82,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "execution",
                          "type": 126,
                          "typeName": "ExecutionMode"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_governance_extrinsic`]."
                      ]
                    },
                    {
                      "name": "new_membership_set",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 127,
                          "typeName": "BTreeSet<T::AccountId>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::new_membership_set`]."
                      ]
                    },
                    {
                      "name": "chainflip_runtime_upgrade",
                      "fields": [
                        {
                          "name": "cfe_version_restriction",
                          "type": 129,
                          "typeName": "Option<(SemVer, Percent)>"
                        },
                        {
                          "name": "code",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::chainflip_runtime_upgrade`]."
                      ]
                    },
                    {
                      "name": "approve",
                      "fields": [
                        {
                          "name": "approved_id",
                          "type": 4,
                          "typeName": "ProposalId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::approve`]."
                      ]
                    },
                    {
                      "name": "call_as_sudo",
                      "fields": [
                        {
                          "name": "call",
                          "type": 82,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::call_as_sudo`]."
                      ]
                    },
                    {
                      "name": "set_whitelisted_call_hash",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "GovCallHash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_whitelisted_call_hash`]."
                      ]
                    },
                    {
                      "name": "submit_govkey_call",
                      "fields": [
                        {
                          "name": "call",
                          "type": 82,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::submit_govkey_call`]."
                      ]
                    },
                    {
                      "name": "dispatch_whitelisted_call",
                      "fields": [
                        {
                          "name": "approved_id",
                          "type": 4,
                          "typeName": "ProposalId"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::dispatch_whitelisted_call`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 126,
            "type": {
              "path": [
                "pallet_cf_governance",
                "pallet",
                "ExecutionMode"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Automatic",
                      "index": 0
                    },
                    {
                      "name": "Manual",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 127,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 128
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 128,
            "type": {
              "def": {
                "sequence": {
                  "type": 0
                }
              }
            }
          },
          {
            "id": 129,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 130
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 130
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 130,
            "type": {
              "def": {
                "tuple": [
                  104,
                  102
                ]
              }
            }
          },
          {
            "id": 131,
            "type": {
              "path": [
                "pallet_cf_tokenholder_governance",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "submit_proposal",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 132,
                          "typeName": "Proposal"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::submit_proposal`]."
                      ]
                    },
                    {
                      "name": "back_proposal",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 132,
                          "typeName": "Proposal"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::back_proposal`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 132,
            "type": {
              "path": [
                "pallet_cf_tokenholder_governance",
                "Proposal"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SetGovernanceKey",
                      "fields": [
                        {
                          "type": 74,
                          "typeName": "ForeignChain"
                        },
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "SetCommunityKey",
                      "fields": [
                        {
                          "type": 31,
                          "typeName": "Address"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 133,
            "type": {
              "path": [
                "pallet_cf_reputation",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_accrual_ratio",
                      "fields": [
                        {
                          "name": "reputation_points",
                          "type": 134,
                          "typeName": "ReputationPoints"
                        },
                        {
                          "name": "number_of_blocks",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_accrual_ratio`]."
                      ]
                    },
                    {
                      "name": "update_missed_heartbeat_penalty",
                      "fields": [
                        {
                          "name": "new_reputation_penalty",
                          "type": 134,
                          "typeName": "ReputationPoints"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update_missed_heartbeat_penalty`]."
                      ]
                    },
                    {
                      "name": "set_penalty",
                      "fields": [
                        {
                          "name": "offence",
                          "type": 135,
                          "typeName": "T::Offence"
                        },
                        {
                          "name": "new_penalty",
                          "type": 136,
                          "typeName": "Penalty<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_penalty`]."
                      ]
                    },
                    {
                      "name": "heartbeat",
                      "index": 3,
                      "docs": [
                        "See [`Pallet::heartbeat`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 134,
            "type": {
              "def": {
                "primitive": "i32"
              }
            }
          },
          {
            "id": 135,
            "type": {
              "path": [
                "state_chain_runtime",
                "chainflip",
                "offences",
                "Offence"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParticipateSigningFailed",
                      "index": 0
                    },
                    {
                      "name": "ParticipateKeygenFailed",
                      "index": 1
                    },
                    {
                      "name": "FailedToBroadcastTransaction",
                      "index": 2
                    },
                    {
                      "name": "MissedAuthorshipSlot",
                      "index": 3
                    },
                    {
                      "name": "MissedHeartbeat",
                      "index": 4
                    },
                    {
                      "name": "GrandpaEquivocation",
                      "index": 5
                    },
                    {
                      "name": "ParticipateKeyHandoverFailed",
                      "index": 6
                    },
                    {
                      "name": "FailedToWitnessInTime",
                      "index": 7
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 136,
            "type": {
              "path": [
                "pallet_cf_reputation",
                "Penalty"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "reputation",
                      "type": 134,
                      "typeName": "ReputationPoints"
                    },
                    {
                      "name": "suspension",
                      "type": 4,
                      "typeName": "BlockNumberFor<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 137,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_chain_state",
                      "fields": [
                        {
                          "name": "new_chain_state",
                          "type": 138,
                          "typeName": "ChainState<T::TargetChain>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_chain_state`]."
                      ]
                    },
                    {
                      "name": "update_fee_multiplier",
                      "fields": [
                        {
                          "name": "new_fee_multiplier",
                          "type": 141,
                          "typeName": "FixedU128"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update_fee_multiplier`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 138,
            "type": {
              "path": [
                "cf_chains",
                "ChainState"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_height",
                      "type": 9,
                      "typeName": "C::ChainBlockNumber"
                    },
                    {
                      "name": "tracked_data",
                      "type": 140,
                      "typeName": "C::TrackedData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 139,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "Ethereum"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 140,
            "type": {
              "path": [
                "cf_chains",
                "eth",
                "EthereumTrackedData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_fee",
                      "type": 70,
                      "typeName": "<Ethereum as Chain>::ChainAmount"
                    },
                    {
                      "name": "priority_fee",
                      "type": 70,
                      "typeName": "<Ethereum as Chain>::ChainAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 141,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 70,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 142,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_chain_state",
                      "fields": [
                        {
                          "name": "new_chain_state",
                          "type": 143,
                          "typeName": "ChainState<T::TargetChain>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_chain_state`]."
                      ]
                    },
                    {
                      "name": "update_fee_multiplier",
                      "fields": [
                        {
                          "name": "new_fee_multiplier",
                          "type": 141,
                          "typeName": "FixedU128"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update_fee_multiplier`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 143,
            "type": {
              "path": [
                "cf_chains",
                "ChainState"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_height",
                      "type": 4,
                      "typeName": "C::ChainBlockNumber"
                    },
                    {
                      "name": "tracked_data",
                      "type": 145,
                      "typeName": "C::TrackedData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 144,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "Polkadot"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 145,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotTrackedData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "median_tip",
                      "type": 70,
                      "typeName": "PolkadotBalance"
                    },
                    {
                      "name": "runtime_version",
                      "type": 146,
                      "typeName": "RuntimeVersion"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 146,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "RuntimeVersion"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "PolkadotSpecVersion"
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "PolkadotTransactionVersion"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 147,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_chain_state",
                      "fields": [
                        {
                          "name": "new_chain_state",
                          "type": 148,
                          "typeName": "ChainState<T::TargetChain>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_chain_state`]."
                      ]
                    },
                    {
                      "name": "update_fee_multiplier",
                      "fields": [
                        {
                          "name": "new_fee_multiplier",
                          "type": 141,
                          "typeName": "FixedU128"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update_fee_multiplier`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 148,
            "type": {
              "path": [
                "cf_chains",
                "ChainState"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_height",
                      "type": 9,
                      "typeName": "C::ChainBlockNumber"
                    },
                    {
                      "name": "tracked_data",
                      "type": 150,
                      "typeName": "C::TrackedData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 149,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "Bitcoin"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "BitcoinTrackedData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "btc_fee_info",
                      "type": 151,
                      "typeName": "BitcoinFeeInfo"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 151,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "BitcoinFeeInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sats_per_kilobyte",
                      "type": 9,
                      "typeName": "BtcAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 152,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vault_key_rotated_externally",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "block_number",
                          "type": 9,
                          "typeName": "ChainBlockNumberFor<T, I>"
                        },
                        {
                          "name": "tx_id",
                          "type": 10,
                          "typeName": "TransactionInIdFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vault_key_rotated_externally`]."
                      ]
                    },
                    {
                      "name": "initialize_chain",
                      "index": 5,
                      "docs": [
                        "See [`Pallet::initialize_chain`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 153,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "AggKey"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pub_key_x",
                      "type": 1,
                      "typeName": "[u8; 32]"
                    },
                    {
                      "name": "pub_key_y_parity",
                      "type": 154,
                      "typeName": "ParityBit"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 154,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "ParityBit"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Odd",
                      "index": 0
                    },
                    {
                      "name": "Even",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 155,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vault_key_rotated_externally",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "block_number",
                          "type": 4,
                          "typeName": "ChainBlockNumberFor<T, I>"
                        },
                        {
                          "name": "tx_id",
                          "type": 89,
                          "typeName": "TransactionInIdFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vault_key_rotated_externally`]."
                      ]
                    },
                    {
                      "name": "initialize_chain",
                      "index": 5,
                      "docs": [
                        "See [`Pallet::initialize_chain`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 156,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vault_key_rotated_externally",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "block_number",
                          "type": 9,
                          "typeName": "ChainBlockNumberFor<T, I>"
                        },
                        {
                          "name": "tx_id",
                          "type": 10,
                          "typeName": "TransactionInIdFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vault_key_rotated_externally`]."
                      ]
                    },
                    {
                      "name": "initialize_chain",
                      "index": 5,
                      "docs": [
                        "See [`Pallet::initialize_chain`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 157,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "signature_success",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "signature",
                          "type": 158,
                          "typeName": "SignatureFor<T, I>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::signature_success`]."
                      ]
                    },
                    {
                      "name": "report_signature_failed",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<<T as Chainflip>::ValidatorId>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_signature_failed`]."
                      ]
                    },
                    {
                      "name": "set_threshold_signature_timeout",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_threshold_signature_timeout`]."
                      ]
                    },
                    {
                      "name": "report_keygen_outcome",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reported_outcome",
                          "type": 159,
                          "typeName": "KeygenOutcomeFor<T, I>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::report_keygen_outcome`]."
                      ]
                    },
                    {
                      "name": "report_key_handover_outcome",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reported_outcome",
                          "type": 159,
                          "typeName": "KeygenOutcomeFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::report_key_handover_outcome`]."
                      ]
                    },
                    {
                      "name": "on_keygen_verification_result",
                      "fields": [
                        {
                          "name": "keygen_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::on_keygen_verification_result`]."
                      ]
                    },
                    {
                      "name": "on_handover_verification_result",
                      "fields": [
                        {
                          "name": "handover_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::on_handover_verification_result`]."
                      ]
                    },
                    {
                      "name": "set_keygen_response_timeout",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_keygen_response_timeout`]."
                      ]
                    },
                    {
                      "name": "set_keygen_slash_amount",
                      "fields": [
                        {
                          "name": "amount_to_slash",
                          "type": 70,
                          "typeName": "FlipBalance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_keygen_slash_amount`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 158,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "SchnorrVerificationComponents"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "s",
                      "type": 1,
                      "typeName": "[u8; 32]"
                    },
                    {
                      "name": "k_times_g_address",
                      "type": 32,
                      "typeName": "[u8; 20]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 159,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 153
                },
                {
                  "name": "E",
                  "type": 127
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 153
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 127
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 160,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "signature_success",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "signature",
                          "type": 161,
                          "typeName": "SignatureFor<T, I>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::signature_success`]."
                      ]
                    },
                    {
                      "name": "report_signature_failed",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<<T as Chainflip>::ValidatorId>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_signature_failed`]."
                      ]
                    },
                    {
                      "name": "set_threshold_signature_timeout",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_threshold_signature_timeout`]."
                      ]
                    },
                    {
                      "name": "report_keygen_outcome",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reported_outcome",
                          "type": 163,
                          "typeName": "KeygenOutcomeFor<T, I>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::report_keygen_outcome`]."
                      ]
                    },
                    {
                      "name": "report_key_handover_outcome",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reported_outcome",
                          "type": 163,
                          "typeName": "KeygenOutcomeFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::report_key_handover_outcome`]."
                      ]
                    },
                    {
                      "name": "on_keygen_verification_result",
                      "fields": [
                        {
                          "name": "keygen_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::on_keygen_verification_result`]."
                      ]
                    },
                    {
                      "name": "on_handover_verification_result",
                      "fields": [
                        {
                          "name": "handover_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::on_handover_verification_result`]."
                      ]
                    },
                    {
                      "name": "set_keygen_response_timeout",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_keygen_response_timeout`]."
                      ]
                    },
                    {
                      "name": "set_keygen_slash_amount",
                      "fields": [
                        {
                          "name": "amount_to_slash",
                          "type": 70,
                          "typeName": "FlipBalance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_keygen_slash_amount`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 161,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotSignature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 162,
                      "typeName": "sr25519::Signature"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 112,
                      "typeName": "[u8; 64]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 163,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 34
                },
                {
                  "name": "E",
                  "type": 127
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 34
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 127
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "signature_success",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "signature",
                          "type": 165,
                          "typeName": "SignatureFor<T, I>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::signature_success`]."
                      ]
                    },
                    {
                      "name": "report_signature_failed",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<<T as Chainflip>::ValidatorId>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_signature_failed`]."
                      ]
                    },
                    {
                      "name": "set_threshold_signature_timeout",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_threshold_signature_timeout`]."
                      ]
                    },
                    {
                      "name": "report_keygen_outcome",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reported_outcome",
                          "type": 166,
                          "typeName": "KeygenOutcomeFor<T, I>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::report_keygen_outcome`]."
                      ]
                    },
                    {
                      "name": "report_key_handover_outcome",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reported_outcome",
                          "type": 166,
                          "typeName": "KeygenOutcomeFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::report_key_handover_outcome`]."
                      ]
                    },
                    {
                      "name": "on_keygen_verification_result",
                      "fields": [
                        {
                          "name": "keygen_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::on_keygen_verification_result`]."
                      ]
                    },
                    {
                      "name": "on_handover_verification_result",
                      "fields": [
                        {
                          "name": "handover_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::on_handover_verification_result`]."
                      ]
                    },
                    {
                      "name": "set_keygen_response_timeout",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_keygen_response_timeout`]."
                      ]
                    },
                    {
                      "name": "set_keygen_slash_amount",
                      "fields": [
                        {
                          "name": "amount_to_slash",
                          "type": 70,
                          "typeName": "FlipBalance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_keygen_slash_amount`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 165,
            "type": {
              "def": {
                "sequence": {
                  "type": 112
                }
              }
            }
          },
          {
            "id": 166,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 90
                },
                {
                  "name": "E",
                  "type": 127
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 90
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 127
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 167,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transaction_signing_failure",
                      "fields": [
                        {
                          "name": "broadcast_attempt_id",
                          "type": 168,
                          "typeName": "(BroadcastId, AttemptCount)"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transaction_signing_failure`]."
                      ]
                    },
                    {
                      "name": "on_signature_ready",
                      "fields": [
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "ThresholdSignatureRequestId"
                        },
                        {
                          "name": "threshold_signature_payload",
                          "type": 10,
                          "typeName": "PayloadFor<T, I>"
                        },
                        {
                          "name": "api_call",
                          "type": 169,
                          "typeName": "Box<<T as Config<I>>::ApiCall>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "initiated_at",
                          "type": 9,
                          "typeName": "ChainBlockNumberFor<T, I>"
                        },
                        {
                          "name": "should_broadcast",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::on_signature_ready`]."
                      ]
                    },
                    {
                      "name": "transaction_succeeded",
                      "fields": [
                        {
                          "name": "tx_out_id",
                          "type": 158,
                          "typeName": "TransactionOutIdFor<T, I>"
                        },
                        {
                          "name": "signer_id",
                          "type": 31,
                          "typeName": "SignerIdFor<T, I>"
                        },
                        {
                          "name": "tx_fee",
                          "type": 198,
                          "typeName": "TransactionFeeFor<T, I>"
                        },
                        {
                          "name": "tx_metadata",
                          "type": 199,
                          "typeName": "TransactionMetadataFor<T, I>"
                        },
                        {
                          "name": "transaction_ref",
                          "type": 10,
                          "typeName": "TransactionRefFor<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::transaction_succeeded`]."
                      ]
                    },
                    {
                      "name": "stress_test",
                      "fields": [
                        {
                          "name": "how_many",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::stress_test`]."
                      ]
                    },
                    {
                      "name": "transaction_failed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transaction_failed`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 168,
            "type": {
              "def": {
                "tuple": [
                  4,
                  4
                ]
              }
            }
          },
          {
            "id": 169,
            "type": {
              "path": [
                "cf_chains",
                "eth",
                "api",
                "EthereumApi"
              ],
              "params": [
                {
                  "name": "Environment",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SetAggKeyWithAggKey",
                      "fields": [
                        {
                          "type": 170,
                          "typeName": "EvmTransactionBuilder<set_agg_key_with_agg_key::SetAggKeyWithAggKey>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "RegisterRedemption",
                      "fields": [
                        {
                          "type": 177,
                          "typeName": "EvmTransactionBuilder<register_redemption::RegisterRedemption>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "UpdateFlipSupply",
                      "fields": [
                        {
                          "type": 180,
                          "typeName": "EvmTransactionBuilder<update_flip_supply::UpdateFlipSupply>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "SetGovKeyWithAggKey",
                      "fields": [
                        {
                          "type": 182,
                          "typeName": "EvmTransactionBuilder<set_gov_key_with_agg_key::SetGovKeyWithAggKey>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "SetCommKeyWithAggKey",
                      "fields": [
                        {
                          "type": 184,
                          "typeName": "EvmTransactionBuilder<set_comm_key_with_agg_key::SetCommKeyWithAggKey>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "AllBatch",
                      "fields": [
                        {
                          "type": 186,
                          "typeName": "EvmTransactionBuilder<all_batch::AllBatch>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "ExecutexSwapAndCall",
                      "fields": [
                        {
                          "type": 194,
                          "typeName": "EvmTransactionBuilder<execute_x_swap_and_call::ExecutexSwapAndCall>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "TransferFallback",
                      "fields": [
                        {
                          "type": 196,
                          "typeName": "EvmTransactionBuilder<transfer_fallback::TransferFallback>"
                        }
                      ],
                      "index": 7
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 170,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmTransactionBuilder"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 171
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig_data",
                      "type": 172,
                      "typeName": "Option<SigData>"
                    },
                    {
                      "name": "replay_protection",
                      "type": 176,
                      "typeName": "EvmReplayProtection"
                    },
                    {
                      "name": "call",
                      "type": 171,
                      "typeName": "C"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 171,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "set_agg_key_with_agg_key",
                "SetAggKeyWithAggKey"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "new_key",
                      "type": 153,
                      "typeName": "AggKey"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 172,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 173
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 173
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 173,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "SigData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig",
                      "type": 174,
                      "typeName": "Uint"
                    },
                    {
                      "name": "nonce",
                      "type": 174,
                      "typeName": "Uint"
                    },
                    {
                      "name": "k_times_g_address",
                      "type": 31,
                      "typeName": "Address"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 174,
            "type": {
              "path": [
                "primitive_types",
                "U256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 175,
                      "typeName": "[u64; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 175,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 9
                }
              }
            }
          },
          {
            "id": 176,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmReplayProtection"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 9,
                      "typeName": "u64"
                    },
                    {
                      "name": "chain_id",
                      "type": 9,
                      "typeName": "EvmChainId"
                    },
                    {
                      "name": "key_manager_address",
                      "type": 31,
                      "typeName": "Address"
                    },
                    {
                      "name": "contract_address",
                      "type": 31,
                      "typeName": "Address"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 177,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmTransactionBuilder"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 178
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig_data",
                      "type": 172,
                      "typeName": "Option<SigData>"
                    },
                    {
                      "name": "replay_protection",
                      "type": 176,
                      "typeName": "EvmReplayProtection"
                    },
                    {
                      "name": "call",
                      "type": 178,
                      "typeName": "C"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 178,
            "type": {
              "path": [
                "cf_chains",
                "eth",
                "api",
                "register_redemption",
                "RegisterRedemption"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "node_id",
                      "type": 1,
                      "typeName": "[u8; 32]"
                    },
                    {
                      "name": "amount",
                      "type": 174,
                      "typeName": "Uint"
                    },
                    {
                      "name": "address",
                      "type": 31,
                      "typeName": "Address"
                    },
                    {
                      "name": "expiry",
                      "type": 174,
                      "typeName": "Uint"
                    },
                    {
                      "name": "executor",
                      "type": 179,
                      "typeName": "RedemptionExecutor"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 179,
            "type": {
              "path": [
                "cf_chains",
                "eth",
                "api",
                "register_redemption",
                "RedemptionExecutor"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AnyAddress",
                      "index": 0
                    },
                    {
                      "name": "OnlyAddress",
                      "fields": [
                        {
                          "type": 31,
                          "typeName": "Address"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 180,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmTransactionBuilder"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 181
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig_data",
                      "type": 172,
                      "typeName": "Option<SigData>"
                    },
                    {
                      "name": "replay_protection",
                      "type": 176,
                      "typeName": "EvmReplayProtection"
                    },
                    {
                      "name": "call",
                      "type": 181,
                      "typeName": "C"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 181,
            "type": {
              "path": [
                "cf_chains",
                "eth",
                "api",
                "update_flip_supply",
                "UpdateFlipSupply"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "new_total_supply",
                      "type": 174,
                      "typeName": "Uint"
                    },
                    {
                      "name": "state_chain_block_number",
                      "type": 174,
                      "typeName": "Uint"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 182,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmTransactionBuilder"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 183
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig_data",
                      "type": 172,
                      "typeName": "Option<SigData>"
                    },
                    {
                      "name": "replay_protection",
                      "type": 176,
                      "typeName": "EvmReplayProtection"
                    },
                    {
                      "name": "call",
                      "type": 183,
                      "typeName": "C"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 183,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "set_gov_key_with_agg_key",
                "SetGovKeyWithAggKey"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "new_gov_key",
                      "type": 31,
                      "typeName": "Address"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 184,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmTransactionBuilder"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 185
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig_data",
                      "type": 172,
                      "typeName": "Option<SigData>"
                    },
                    {
                      "name": "replay_protection",
                      "type": 176,
                      "typeName": "EvmReplayProtection"
                    },
                    {
                      "name": "call",
                      "type": 185,
                      "typeName": "C"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 185,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "set_comm_key_with_agg_key",
                "SetCommKeyWithAggKey"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "new_comm_key",
                      "type": 31,
                      "typeName": "Address"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 186,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmTransactionBuilder"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 187
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig_data",
                      "type": 172,
                      "typeName": "Option<SigData>"
                    },
                    {
                      "name": "replay_protection",
                      "type": 176,
                      "typeName": "EvmReplayProtection"
                    },
                    {
                      "name": "call",
                      "type": 187,
                      "typeName": "C"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 187,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "all_batch",
                "AllBatch"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "fetch_deploy_params",
                      "type": 188,
                      "typeName": "Vec<EncodableFetchDeployAssetParams>"
                    },
                    {
                      "name": "fetch_params",
                      "type": 190,
                      "typeName": "Vec<EncodableFetchAssetParams>"
                    },
                    {
                      "name": "transfer_params",
                      "type": 192,
                      "typeName": "Vec<EncodableTransferAssetParams>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 188,
            "type": {
              "def": {
                "sequence": {
                  "type": 189
                }
              }
            }
          },
          {
            "id": 189,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "common",
                "EncodableFetchDeployAssetParams"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "channel_id",
                      "type": 9,
                      "typeName": "ChannelId"
                    },
                    {
                      "name": "asset",
                      "type": 31,
                      "typeName": "Address"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 190,
            "type": {
              "def": {
                "sequence": {
                  "type": 191
                }
              }
            }
          },
          {
            "id": 191,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "common",
                "EncodableFetchAssetParams"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "contract_address",
                      "type": 31,
                      "typeName": "Address"
                    },
                    {
                      "name": "asset",
                      "type": 31,
                      "typeName": "Address"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 192,
            "type": {
              "def": {
                "sequence": {
                  "type": 193
                }
              }
            }
          },
          {
            "id": 193,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "common",
                "EncodableTransferAssetParams"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 31,
                      "typeName": "Address"
                    },
                    {
                      "name": "to",
                      "type": 31,
                      "typeName": "Address"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "AssetAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 194,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmTransactionBuilder"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 195
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig_data",
                      "type": 172,
                      "typeName": "Option<SigData>"
                    },
                    {
                      "name": "replay_protection",
                      "type": 176,
                      "typeName": "EvmReplayProtection"
                    },
                    {
                      "name": "call",
                      "type": 195,
                      "typeName": "C"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 195,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "execute_x_swap_and_call",
                "ExecutexSwapAndCall"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "transfer_param",
                      "type": 193,
                      "typeName": "EncodableTransferAssetParams"
                    },
                    {
                      "name": "source_chain",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "source_address",
                      "type": 11,
                      "typeName": "Vec<u8>"
                    },
                    {
                      "name": "gas_budget",
                      "type": 70,
                      "typeName": "<Ethereum as Chain>::ChainAmount"
                    },
                    {
                      "name": "message",
                      "type": 11,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 196,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "EvmTransactionBuilder"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 197
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sig_data",
                      "type": 172,
                      "typeName": "Option<SigData>"
                    },
                    {
                      "name": "replay_protection",
                      "type": 176,
                      "typeName": "EvmReplayProtection"
                    },
                    {
                      "name": "call",
                      "type": 197,
                      "typeName": "C"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 197,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "api",
                "transfer_fallback",
                "TransferFallback"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "transfer_param",
                      "type": 193,
                      "typeName": "EncodableTransferAssetParams"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 198,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "TransactionFee"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "effective_gas_price",
                      "type": 70,
                      "typeName": "EthAmount"
                    },
                    {
                      "name": "gas_used",
                      "type": 70,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 199,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "EvmTransactionMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_fee_per_gas",
                      "type": 200,
                      "typeName": "Option<Uint>"
                    },
                    {
                      "name": "max_priority_fee_per_gas",
                      "type": 200,
                      "typeName": "Option<Uint>"
                    },
                    {
                      "name": "contract",
                      "type": 31,
                      "typeName": "Address"
                    },
                    {
                      "name": "gas_limit",
                      "type": 200,
                      "typeName": "Option<Uint>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 200,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 174
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 174
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 201,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transaction_signing_failure",
                      "fields": [
                        {
                          "name": "broadcast_attempt_id",
                          "type": 168,
                          "typeName": "(BroadcastId, AttemptCount)"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transaction_signing_failure`]."
                      ]
                    },
                    {
                      "name": "on_signature_ready",
                      "fields": [
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "ThresholdSignatureRequestId"
                        },
                        {
                          "name": "threshold_signature_payload",
                          "type": 202,
                          "typeName": "PayloadFor<T, I>"
                        },
                        {
                          "name": "api_call",
                          "type": 203,
                          "typeName": "Box<<T as Config<I>>::ApiCall>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "initiated_at",
                          "type": 4,
                          "typeName": "ChainBlockNumberFor<T, I>"
                        },
                        {
                          "name": "should_broadcast",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::on_signature_ready`]."
                      ]
                    },
                    {
                      "name": "transaction_succeeded",
                      "fields": [
                        {
                          "name": "tx_out_id",
                          "type": 161,
                          "typeName": "TransactionOutIdFor<T, I>"
                        },
                        {
                          "name": "signer_id",
                          "type": 34,
                          "typeName": "SignerIdFor<T, I>"
                        },
                        {
                          "name": "tx_fee",
                          "type": 70,
                          "typeName": "TransactionFeeFor<T, I>"
                        },
                        {
                          "name": "tx_metadata",
                          "type": 5,
                          "typeName": "TransactionMetadataFor<T, I>"
                        },
                        {
                          "name": "transaction_ref",
                          "type": 219,
                          "typeName": "TransactionRefFor<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::transaction_succeeded`]."
                      ]
                    },
                    {
                      "name": "stress_test",
                      "fields": [
                        {
                          "name": "how_many",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::stress_test`]."
                      ]
                    },
                    {
                      "name": "transaction_failed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transaction_failed`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 202,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "EncodedPolkadotPayload"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 203,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "api",
                "PolkadotApi"
              ],
              "params": [
                {
                  "name": "Environment",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BatchFetchAndTransfer",
                      "fields": [
                        {
                          "type": 204,
                          "typeName": "PolkadotExtrinsicBuilder"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "RotateVaultProxy",
                      "fields": [
                        {
                          "type": 204,
                          "typeName": "PolkadotExtrinsicBuilder"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ChangeGovKey",
                      "fields": [
                        {
                          "type": 204,
                          "typeName": "PolkadotExtrinsicBuilder"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "ExecuteXSwapAndCall",
                      "fields": [
                        {
                          "type": 204,
                          "typeName": "PolkadotExtrinsicBuilder"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 204,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotExtrinsicBuilder"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "extrinsic_call",
                      "type": 205,
                      "typeName": "PolkadotRuntimeCall"
                    },
                    {
                      "name": "replay_protection",
                      "type": 217,
                      "typeName": "PolkadotReplayProtection"
                    },
                    {
                      "name": "signature",
                      "type": 218,
                      "typeName": "Option<PolkadotSignature>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 205,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotRuntimeCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 206,
                          "typeName": "SystemCall"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 207,
                          "typeName": "BalancesCall"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "type": 211,
                          "typeName": "UtilityCall"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "type": 213,
                          "typeName": "ProxyCall"
                        }
                      ],
                      "index": 29
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 206,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "SystemCall"
              ],
              "def": {
                "variant": {}
              }
            }
          },
          {
            "id": 207,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "BalancesCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer_allow_death",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "value",
                          "type": 210,
                          "typeName": "PolkadotBalance"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "keep_alive",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 208,
            "type": {
              "path": [
                "sp_runtime",
                "multiaddress",
                "MultiAddress"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 34
                },
                {
                  "name": "AccountIndex",
                  "type": 5
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Id",
                      "fields": [
                        {
                          "type": 34,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 209,
                          "typeName": "AccountIndex"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Raw",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Address32",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Address20",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 209,
            "type": {
              "def": {
                "compact": {
                  "type": 5
                }
              }
            }
          },
          {
            "id": 210,
            "type": {
              "def": {
                "compact": {
                  "type": 70
                }
              }
            }
          },
          {
            "id": 211,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "UtilityCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 212,
                          "typeName": "Vec<PolkadotRuntimeCall>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "as_derivative",
                      "fields": [
                        {
                          "name": "index",
                          "type": 110,
                          "typeName": "u16"
                        },
                        {
                          "name": "call",
                          "type": 205,
                          "typeName": "Box<PolkadotRuntimeCall>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "batch_all",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 212,
                          "typeName": "Vec<PolkadotRuntimeCall>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "force_batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 212,
                          "typeName": "Vec<PolkadotRuntimeCall>"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 212,
            "type": {
              "def": {
                "sequence": {
                  "type": 205
                }
              }
            }
          },
          {
            "id": 213,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "ProxyCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "proxy",
                      "fields": [
                        {
                          "name": "real",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 214,
                          "typeName": "Option<PolkadotProxyType>"
                        },
                        {
                          "name": "call",
                          "type": 205,
                          "typeName": "Box<PolkadotRuntimeCall>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "add_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "proxy_type",
                          "type": 215,
                          "typeName": "PolkadotProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "PolkadotBlockNumber"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "remove_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "proxy_type",
                          "type": 215,
                          "typeName": "PolkadotProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "PolkadotBlockNumber"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "remove_proxies",
                      "index": 3
                    },
                    {
                      "name": "create_pure",
                      "fields": [
                        {
                          "name": "proxy_type",
                          "type": 215,
                          "typeName": "PolkadotProxyType"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "PolkadotBlockNumber"
                        },
                        {
                          "name": "index",
                          "type": 110,
                          "typeName": "u16"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "kill_pure",
                      "fields": [
                        {
                          "name": "spawner",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "proxy_type",
                          "type": 215,
                          "typeName": "PolkadotProxyType"
                        },
                        {
                          "name": "index",
                          "type": 110,
                          "typeName": "u16"
                        },
                        {
                          "name": "height",
                          "type": 216,
                          "typeName": "PolkadotBlockNumber"
                        },
                        {
                          "name": "ext_index",
                          "type": 216,
                          "typeName": "u32"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "announce",
                      "fields": [
                        {
                          "name": "real",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "call_hash",
                          "type": 10,
                          "typeName": "PolkadotCallHash"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "remove_announcement",
                      "fields": [
                        {
                          "name": "real",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "call_hash",
                          "type": 10,
                          "typeName": "PolkadotCallHash"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "reject_announcement",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "call_hash",
                          "type": 10,
                          "typeName": "PolkadotCallHash"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "proxy_announced",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "real",
                          "type": 208,
                          "typeName": "PolkadotAccountIdLookup"
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 214,
                          "typeName": "Option<PolkadotProxyType>"
                        },
                        {
                          "name": "call",
                          "type": 205,
                          "typeName": "Box<PolkadotRuntimeCall>"
                        }
                      ],
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 214,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 215
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 215
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 215,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotProxyType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "index": 0
                    },
                    {
                      "name": "NonTransfer",
                      "index": 1
                    },
                    {
                      "name": "Governance",
                      "index": 2
                    },
                    {
                      "name": "Staking",
                      "index": 3
                    },
                    {
                      "name": "IdentityJudgement",
                      "index": 5
                    },
                    {
                      "name": "CancelProxy",
                      "index": 6
                    },
                    {
                      "name": "Auction",
                      "index": 7
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 216,
            "type": {
              "def": {
                "compact": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 217,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotReplayProtection"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "genesis_hash",
                      "type": 10,
                      "typeName": "PolkadotHash"
                    },
                    {
                      "name": "signer",
                      "type": 34,
                      "typeName": "PolkadotAccountId"
                    },
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "PolkadotIndex"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 218,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 161
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 161
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 219,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotTransactionId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_number",
                      "type": 4,
                      "typeName": "PolkadotBlockNumber"
                    },
                    {
                      "name": "extrinsic_index",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 220,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transaction_signing_failure",
                      "fields": [
                        {
                          "name": "broadcast_attempt_id",
                          "type": 168,
                          "typeName": "(BroadcastId, AttemptCount)"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transaction_signing_failure`]."
                      ]
                    },
                    {
                      "name": "on_signature_ready",
                      "fields": [
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "ThresholdSignatureRequestId"
                        },
                        {
                          "name": "threshold_signature_payload",
                          "type": 221,
                          "typeName": "PayloadFor<T, I>"
                        },
                        {
                          "name": "api_call",
                          "type": 224,
                          "typeName": "Box<<T as Config<I>>::ApiCall>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "initiated_at",
                          "type": 9,
                          "typeName": "ChainBlockNumberFor<T, I>"
                        },
                        {
                          "name": "should_broadcast",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::on_signature_ready`]."
                      ]
                    },
                    {
                      "name": "transaction_succeeded",
                      "fields": [
                        {
                          "name": "tx_out_id",
                          "type": 10,
                          "typeName": "TransactionOutIdFor<T, I>"
                        },
                        {
                          "name": "signer_id",
                          "type": 229,
                          "typeName": "SignerIdFor<T, I>"
                        },
                        {
                          "name": "tx_fee",
                          "type": 9,
                          "typeName": "TransactionFeeFor<T, I>"
                        },
                        {
                          "name": "tx_metadata",
                          "type": 5,
                          "typeName": "TransactionMetadataFor<T, I>"
                        },
                        {
                          "name": "transaction_ref",
                          "type": 10,
                          "typeName": "TransactionRefFor<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::transaction_succeeded`]."
                      ]
                    },
                    {
                      "name": "stress_test",
                      "fields": [
                        {
                          "name": "how_many",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::stress_test`]."
                      ]
                    },
                    {
                      "name": "transaction_failed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transaction_failed`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 221,
            "type": {
              "def": {
                "sequence": {
                  "type": 222
                }
              }
            }
          },
          {
            "id": 222,
            "type": {
              "def": {
                "tuple": [
                  223,
                  1
                ]
              }
            }
          },
          {
            "id": 223,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "PreviousOrCurrent"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Previous",
                      "index": 0
                    },
                    {
                      "name": "Current",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 224,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "api",
                "BitcoinApi"
              ],
              "params": [
                {
                  "name": "Environment",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BatchTransfer",
                      "fields": [
                        {
                          "type": 225,
                          "typeName": "batch_transfer::BatchTransfer"
                        }
                      ],
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 225,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "api",
                "batch_transfer",
                "BatchTransfer"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bitcoin_transaction",
                      "type": 226,
                      "typeName": "BitcoinTransaction"
                    },
                    {
                      "name": "change_utxo_key",
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 226,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "BitcoinTransaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "inputs",
                      "type": 58,
                      "typeName": "Vec<Utxo>"
                    },
                    {
                      "name": "outputs",
                      "type": 227,
                      "typeName": "Vec<BitcoinOutput>"
                    },
                    {
                      "name": "signatures",
                      "type": 165,
                      "typeName": "Vec<Signature>"
                    },
                    {
                      "name": "transaction_bytes",
                      "type": 11,
                      "typeName": "Vec<u8>"
                    },
                    {
                      "name": "old_utxo_input_indices",
                      "type": 231,
                      "typeName": "VecDeque<u32>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 227,
            "type": {
              "def": {
                "sequence": {
                  "type": 228
                }
              }
            }
          },
          {
            "id": 228,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "BitcoinOutput"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 9,
                      "typeName": "u64"
                    },
                    {
                      "name": "script_pubkey",
                      "type": 229,
                      "typeName": "ScriptPubkey"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 229,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "ScriptPubkey"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "P2PKH",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "P2SH",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "P2WPKH",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "P2WSH",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Taproot",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "OtherSegwit",
                      "fields": [
                        {
                          "name": "version",
                          "type": 2,
                          "typeName": "u8"
                        },
                        {
                          "name": "program",
                          "type": 230,
                          "typeName": "BoundedVec<u8, ConstU32<MAX_SEGWIT_PROGRAM_BYTES>>"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 230,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 231,
            "type": {
              "def": {
                "sequence": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 232,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "request_swap_deposit_address",
                      "fields": [
                        {
                          "name": "source_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "broker_commission",
                          "type": 110,
                          "typeName": "BasisPoints"
                        },
                        {
                          "name": "channel_metadata",
                          "type": 235,
                          "typeName": "Option<CcmChannelMetadata>"
                        },
                        {
                          "name": "boost_fee",
                          "type": 110,
                          "typeName": "BasisPoints"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::request_swap_deposit_address`]."
                      ]
                    },
                    {
                      "name": "withdraw",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::withdraw`]."
                      ]
                    },
                    {
                      "name": "schedule_swap_from_contract",
                      "fields": [
                        {
                          "name": "from",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "to",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "deposit_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "tx_hash",
                          "type": 1,
                          "typeName": "TransactionHash"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::schedule_swap_from_contract`]."
                      ]
                    },
                    {
                      "name": "ccm_deposit",
                      "fields": [
                        {
                          "name": "source_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "deposit_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "deposit_metadata",
                          "type": 239,
                          "typeName": "CcmDepositMetadata"
                        },
                        {
                          "name": "tx_hash",
                          "type": 1,
                          "typeName": "TransactionHash"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::ccm_deposit`]."
                      ]
                    },
                    {
                      "name": "register_as_broker",
                      "index": 4,
                      "docs": [
                        "See [`Pallet::register_as_broker`]."
                      ]
                    },
                    {
                      "name": "update_pallet_config",
                      "fields": [
                        {
                          "name": "updates",
                          "type": 242,
                          "typeName": "BoundedVec<PalletConfigUpdate, ConstU32<10>>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::update_pallet_config`]."
                      ]
                    },
                    {
                      "name": "deregister_as_broker",
                      "index": 9,
                      "docs": [
                        "See [`Pallet::deregister_as_broker`]."
                      ]
                    },
                    {
                      "name": "request_swap_deposit_address_with_affiliates",
                      "fields": [
                        {
                          "name": "source_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "broker_commission",
                          "type": 110,
                          "typeName": "BasisPoints"
                        },
                        {
                          "name": "channel_metadata",
                          "type": 235,
                          "typeName": "Option<CcmChannelMetadata>"
                        },
                        {
                          "name": "boost_fee",
                          "type": 110,
                          "typeName": "BasisPoints"
                        },
                        {
                          "name": "affiliate_fees",
                          "type": 246,
                          "typeName": "Affiliates<T::AccountId>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::request_swap_deposit_address_with_affiliates`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 233,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "any",
                "Asset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Eth",
                      "index": 1
                    },
                    {
                      "name": "Flip",
                      "index": 2
                    },
                    {
                      "name": "Usdc",
                      "index": 3
                    },
                    {
                      "name": "Usdt",
                      "index": 8
                    },
                    {
                      "name": "Dot",
                      "index": 4
                    },
                    {
                      "name": "Btc",
                      "index": 5
                    },
                    {
                      "name": "ArbEth",
                      "index": 6
                    },
                    {
                      "name": "ArbUsdc",
                      "index": 7
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 234,
            "type": {
              "path": [
                "cf_chains",
                "address",
                "EncodedAddress"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Eth",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Dot",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Btc",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Arb",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 235,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 236
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 236
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 236,
            "type": {
              "path": [
                "cf_chains",
                "CcmChannelMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "message",
                      "type": 237,
                      "typeName": "CcmMessage"
                    },
                    {
                      "name": "gas_budget",
                      "type": 70,
                      "typeName": "AssetAmount"
                    },
                    {
                      "name": "cf_parameters",
                      "type": 238,
                      "typeName": "CcmCfParameters"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 237,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 238,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 239,
            "type": {
              "path": [
                "cf_chains",
                "CcmDepositMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "source_chain",
                      "type": 74,
                      "typeName": "ForeignChain"
                    },
                    {
                      "name": "source_address",
                      "type": 240,
                      "typeName": "Option<ForeignChainAddress>"
                    },
                    {
                      "name": "channel_metadata",
                      "type": 236,
                      "typeName": "CcmChannelMetadata"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 240,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 241
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 241
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 241,
            "type": {
              "path": [
                "cf_chains",
                "address",
                "ForeignChainAddress"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Eth",
                      "fields": [
                        {
                          "type": 31,
                          "typeName": "EvmAddress"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Dot",
                      "fields": [
                        {
                          "type": 34,
                          "typeName": "PolkadotAccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Btc",
                      "fields": [
                        {
                          "type": 229,
                          "typeName": "ScriptPubkey"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Arb",
                      "fields": [
                        {
                          "type": 31,
                          "typeName": "EvmAddress"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 242,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 243
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 245,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 243,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "PalletConfigUpdate"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MaximumSwapAmount",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount",
                          "type": 244,
                          "typeName": "Option<AssetAmount>"
                        }
                      ],
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 244,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 70
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 245,
            "type": {
              "def": {
                "sequence": {
                  "type": 243
                }
              }
            }
          },
          {
            "id": 246,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 247
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 248,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 247,
            "type": {
              "path": [
                "cf_primitives",
                "Beneficiary"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 0,
                      "typeName": "Id"
                    },
                    {
                      "name": "bps",
                      "type": 110,
                      "typeName": "BasisPoints"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 248,
            "type": {
              "def": {
                "sequence": {
                  "type": 247
                }
              }
            }
          },
          {
            "id": 249,
            "type": {
              "path": [
                "pallet_cf_lp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "request_liquidity_deposit_address",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "boost_fee",
                          "type": 110,
                          "typeName": "BasisPoints"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::request_liquidity_deposit_address`]."
                      ]
                    },
                    {
                      "name": "withdraw_asset",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::withdraw_asset`]."
                      ]
                    },
                    {
                      "name": "register_lp_account",
                      "index": 2,
                      "docs": [
                        "See [`Pallet::register_lp_account`]."
                      ]
                    },
                    {
                      "name": "register_liquidity_refund_address",
                      "fields": [
                        {
                          "name": "address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::register_liquidity_refund_address`]."
                      ]
                    },
                    {
                      "name": "deregister_lp_account",
                      "index": 5,
                      "docs": [
                        "See [`Pallet::deregister_lp_account`]."
                      ]
                    },
                    {
                      "name": "transfer_asset",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::transfer_asset`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 250,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "finalise_ingress",
                      "fields": [
                        {
                          "name": "addresses",
                          "type": 97,
                          "typeName": "Vec<TargetChainAccount<T, I>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::finalise_ingress`]."
                      ]
                    },
                    {
                      "name": "enable_or_disable_egress",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "set_disabled",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::enable_or_disable_egress`]."
                      ]
                    },
                    {
                      "name": "process_deposits",
                      "fields": [
                        {
                          "name": "deposit_witnesses",
                          "type": 251,
                          "typeName": "Vec<DepositWitness<T::TargetChain>>"
                        },
                        {
                          "name": "block_height",
                          "type": 9,
                          "typeName": "TargetChainBlockNumber<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::process_deposits`]."
                      ]
                    },
                    {
                      "name": "vault_transfer_failed",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "destination_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vault_transfer_failed`]."
                      ]
                    },
                    {
                      "name": "ccm_broadcast_failed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::ccm_broadcast_failed`]."
                      ]
                    },
                    {
                      "name": "update_pallet_config",
                      "fields": [
                        {
                          "name": "updates",
                          "type": 253,
                          "typeName": "BoundedVec<PalletConfigUpdate<T, I>, ConstU32<10>>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::update_pallet_config`]."
                      ]
                    },
                    {
                      "name": "add_boost_funds",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "pool_tier",
                          "type": 110,
                          "typeName": "BoostPoolTier"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::add_boost_funds`]."
                      ]
                    },
                    {
                      "name": "stop_boosting",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "pool_tier",
                          "type": 110,
                          "typeName": "BoostPoolTier"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::stop_boosting`]."
                      ]
                    },
                    {
                      "name": "create_boost_pools",
                      "fields": [
                        {
                          "name": "new_pools",
                          "type": 256,
                          "typeName": "Vec<BoostPoolId<T::TargetChain>>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::create_boost_pools`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 251,
            "type": {
              "def": {
                "sequence": {
                  "type": 252
                }
              }
            }
          },
          {
            "id": 252,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositWitness"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_address",
                      "type": 31,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "asset",
                      "type": 30,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "deposit_details",
                      "type": 5,
                      "typeName": "C::DepositDetails"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 253,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 254
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 255,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 254,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PalletConfigUpdate"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ChannelOpeningFee",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "SetMinimumDeposit",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "minimum_deposit",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 255,
            "type": {
              "def": {
                "sequence": {
                  "type": 254
                }
              }
            }
          },
          {
            "id": 256,
            "type": {
              "def": {
                "sequence": {
                  "type": 257
                }
              }
            }
          },
          {
            "id": 257,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "BoostPoolId"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 30,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "tier",
                      "type": 110,
                      "typeName": "BoostPoolTier"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 258,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "finalise_ingress",
                      "fields": [
                        {
                          "name": "addresses",
                          "type": 259,
                          "typeName": "Vec<TargetChainAccount<T, I>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::finalise_ingress`]."
                      ]
                    },
                    {
                      "name": "enable_or_disable_egress",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "set_disabled",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::enable_or_disable_egress`]."
                      ]
                    },
                    {
                      "name": "process_deposits",
                      "fields": [
                        {
                          "name": "deposit_witnesses",
                          "type": 261,
                          "typeName": "Vec<DepositWitness<T::TargetChain>>"
                        },
                        {
                          "name": "block_height",
                          "type": 4,
                          "typeName": "TargetChainBlockNumber<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::process_deposits`]."
                      ]
                    },
                    {
                      "name": "vault_transfer_failed",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "destination_address",
                          "type": 34,
                          "typeName": "TargetChainAccount<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vault_transfer_failed`]."
                      ]
                    },
                    {
                      "name": "ccm_broadcast_failed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::ccm_broadcast_failed`]."
                      ]
                    },
                    {
                      "name": "update_pallet_config",
                      "fields": [
                        {
                          "name": "updates",
                          "type": 263,
                          "typeName": "BoundedVec<PalletConfigUpdate<T, I>, ConstU32<10>>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::update_pallet_config`]."
                      ]
                    },
                    {
                      "name": "add_boost_funds",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "pool_tier",
                          "type": 110,
                          "typeName": "BoostPoolTier"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::add_boost_funds`]."
                      ]
                    },
                    {
                      "name": "stop_boosting",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "pool_tier",
                          "type": 110,
                          "typeName": "BoostPoolTier"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::stop_boosting`]."
                      ]
                    },
                    {
                      "name": "create_boost_pools",
                      "fields": [
                        {
                          "name": "new_pools",
                          "type": 266,
                          "typeName": "Vec<BoostPoolId<T::TargetChain>>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::create_boost_pools`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 259,
            "type": {
              "def": {
                "sequence": {
                  "type": 34
                }
              }
            }
          },
          {
            "id": 260,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "dot",
                "Asset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Dot",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 261,
            "type": {
              "def": {
                "sequence": {
                  "type": 262
                }
              }
            }
          },
          {
            "id": 262,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositWitness"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_address",
                      "type": 34,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "asset",
                      "type": 260,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "deposit_details",
                      "type": 5,
                      "typeName": "C::DepositDetails"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 263,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 264
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 265,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 264,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PalletConfigUpdate"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ChannelOpeningFee",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "SetMinimumDeposit",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "minimum_deposit",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 265,
            "type": {
              "def": {
                "sequence": {
                  "type": 264
                }
              }
            }
          },
          {
            "id": 266,
            "type": {
              "def": {
                "sequence": {
                  "type": 267
                }
              }
            }
          },
          {
            "id": 267,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "BoostPoolId"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 260,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "tier",
                      "type": 110,
                      "typeName": "BoostPoolTier"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 268,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "finalise_ingress",
                      "fields": [
                        {
                          "name": "addresses",
                          "type": 269,
                          "typeName": "Vec<TargetChainAccount<T, I>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::finalise_ingress`]."
                      ]
                    },
                    {
                      "name": "enable_or_disable_egress",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "set_disabled",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::enable_or_disable_egress`]."
                      ]
                    },
                    {
                      "name": "process_deposits",
                      "fields": [
                        {
                          "name": "deposit_witnesses",
                          "type": 271,
                          "typeName": "Vec<DepositWitness<T::TargetChain>>"
                        },
                        {
                          "name": "block_height",
                          "type": 9,
                          "typeName": "TargetChainBlockNumber<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::process_deposits`]."
                      ]
                    },
                    {
                      "name": "vault_transfer_failed",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "destination_address",
                          "type": 229,
                          "typeName": "TargetChainAccount<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vault_transfer_failed`]."
                      ]
                    },
                    {
                      "name": "ccm_broadcast_failed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::ccm_broadcast_failed`]."
                      ]
                    },
                    {
                      "name": "update_pallet_config",
                      "fields": [
                        {
                          "name": "updates",
                          "type": 273,
                          "typeName": "BoundedVec<PalletConfigUpdate<T, I>, ConstU32<10>>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::update_pallet_config`]."
                      ]
                    },
                    {
                      "name": "add_boost_funds",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "pool_tier",
                          "type": 110,
                          "typeName": "BoostPoolTier"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::add_boost_funds`]."
                      ]
                    },
                    {
                      "name": "stop_boosting",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "pool_tier",
                          "type": 110,
                          "typeName": "BoostPoolTier"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::stop_boosting`]."
                      ]
                    },
                    {
                      "name": "create_boost_pools",
                      "fields": [
                        {
                          "name": "new_pools",
                          "type": 276,
                          "typeName": "Vec<BoostPoolId<T::TargetChain>>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::create_boost_pools`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 269,
            "type": {
              "def": {
                "sequence": {
                  "type": 229
                }
              }
            }
          },
          {
            "id": 270,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "btc",
                "Asset"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Btc",
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 271,
            "type": {
              "def": {
                "sequence": {
                  "type": 272
                }
              }
            }
          },
          {
            "id": 272,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositWitness"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_address",
                      "type": 229,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "asset",
                      "type": 270,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 9,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "deposit_details",
                      "type": 60,
                      "typeName": "C::DepositDetails"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 273,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 274
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 275,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 274,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PalletConfigUpdate"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ChannelOpeningFee",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "SetMinimumDeposit",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "minimum_deposit",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 275,
            "type": {
              "def": {
                "sequence": {
                  "type": 274
                }
              }
            }
          },
          {
            "id": 276,
            "type": {
              "def": {
                "sequence": {
                  "type": 277
                }
              }
            }
          },
          {
            "id": 277,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "BoostPoolId"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 270,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "tier",
                      "type": 110,
                      "typeName": "BoostPoolTier"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 278,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_buy_interval",
                      "fields": [
                        {
                          "name": "new_buy_interval",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_buy_interval`]."
                      ]
                    },
                    {
                      "name": "new_pool",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "any::Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "any::Asset"
                        },
                        {
                          "name": "fee_hundredth_pips",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "initial_price",
                          "type": 174,
                          "typeName": "Price"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::new_pool`]."
                      ]
                    },
                    {
                      "name": "update_range_order",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "id",
                          "type": 9,
                          "typeName": "OrderId"
                        },
                        {
                          "name": "option_tick_range",
                          "type": 279,
                          "typeName": "Option<core::ops::Range<Tick>>"
                        },
                        {
                          "name": "size_change",
                          "type": 281,
                          "typeName": "IncreaseOrDecrease<RangeOrderSize>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::update_range_order`]."
                      ]
                    },
                    {
                      "name": "set_range_order",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "id",
                          "type": 9,
                          "typeName": "OrderId"
                        },
                        {
                          "name": "option_tick_range",
                          "type": 279,
                          "typeName": "Option<core::ops::Range<Tick>>"
                        },
                        {
                          "name": "size",
                          "type": 282,
                          "typeName": "RangeOrderSize"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_range_order`]."
                      ]
                    },
                    {
                      "name": "update_limit_order",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "any::Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "any::Asset"
                        },
                        {
                          "name": "side",
                          "type": 284,
                          "typeName": "Side"
                        },
                        {
                          "name": "id",
                          "type": 9,
                          "typeName": "OrderId"
                        },
                        {
                          "name": "option_tick",
                          "type": 285,
                          "typeName": "Option<Tick>"
                        },
                        {
                          "name": "amount_change",
                          "type": 286,
                          "typeName": "IncreaseOrDecrease<AssetAmount>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::update_limit_order`]."
                      ]
                    },
                    {
                      "name": "set_limit_order",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "any::Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "any::Asset"
                        },
                        {
                          "name": "side",
                          "type": 284,
                          "typeName": "Side"
                        },
                        {
                          "name": "id",
                          "type": 9,
                          "typeName": "OrderId"
                        },
                        {
                          "name": "option_tick",
                          "type": 285,
                          "typeName": "Option<Tick>"
                        },
                        {
                          "name": "sell_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_limit_order`]."
                      ]
                    },
                    {
                      "name": "set_pool_fees",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "fee_hundredth_pips",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_pool_fees`]."
                      ]
                    },
                    {
                      "name": "schedule_limit_order_update",
                      "fields": [
                        {
                          "name": "call",
                          "type": 278,
                          "typeName": "Box<Call<T>>"
                        },
                        {
                          "name": "dispatch_at",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::schedule_limit_order_update`]."
                      ]
                    },
                    {
                      "name": "set_maximum_price_impact",
                      "fields": [
                        {
                          "name": "limits",
                          "type": 287,
                          "typeName": "BoundedVec<(Asset, Option<u32>), ConstU32<10>>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::set_maximum_price_impact`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 279,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 280
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 280
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 280,
            "type": {
              "path": [
                "Range"
              ],
              "params": [
                {
                  "name": "Idx",
                  "type": 134
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "start",
                      "type": 134,
                      "typeName": "Idx"
                    },
                    {
                      "name": "end",
                      "type": 134,
                      "typeName": "Idx"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 281,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "IncreaseOrDecrease"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 282
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Increase",
                      "fields": [
                        {
                          "type": 282,
                          "typeName": "T"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Decrease",
                      "fields": [
                        {
                          "type": 282,
                          "typeName": "T"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 282,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "RangeOrderSize"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetAmounts",
                      "fields": [
                        {
                          "name": "maximum",
                          "type": 283,
                          "typeName": "AssetAmounts"
                        },
                        {
                          "name": "minimum",
                          "type": 283,
                          "typeName": "AssetAmounts"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Liquidity",
                      "fields": [
                        {
                          "name": "liquidity",
                          "type": 70,
                          "typeName": "Liquidity"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 283,
            "type": {
              "path": [
                "cf_amm",
                "common",
                "PoolPairsMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base",
                      "type": 70,
                      "typeName": "T"
                    },
                    {
                      "name": "quote",
                      "type": 70,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 284,
            "type": {
              "path": [
                "cf_amm",
                "common",
                "Side"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Buy",
                      "index": 0
                    },
                    {
                      "name": "Sell",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 285,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 134
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 134
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 286,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "IncreaseOrDecrease"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Increase",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "T"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Decrease",
                      "fields": [
                        {
                          "type": 70,
                          "typeName": "T"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 287,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 288
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 290,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 288,
            "type": {
              "def": {
                "tuple": [
                  233,
                  289
                ]
              }
            }
          },
          {
            "id": 289,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 4
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 290,
            "type": {
              "def": {
                "sequence": {
                  "type": 288
                }
              }
            }
          },
          {
            "id": 291,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "update_chain_state",
                      "fields": [
                        {
                          "name": "new_chain_state",
                          "type": 292,
                          "typeName": "ChainState<T::TargetChain>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::update_chain_state`]."
                      ]
                    },
                    {
                      "name": "update_fee_multiplier",
                      "fields": [
                        {
                          "name": "new_fee_multiplier",
                          "type": 141,
                          "typeName": "FixedU128"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update_fee_multiplier`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 292,
            "type": {
              "path": [
                "cf_chains",
                "ChainState"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_height",
                      "type": 9,
                      "typeName": "C::ChainBlockNumber"
                    },
                    {
                      "name": "tracked_data",
                      "type": 294,
                      "typeName": "C::TrackedData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 293,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "Arbitrum"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 294,
            "type": {
              "path": [
                "cf_chains",
                "arb",
                "ArbitrumTrackedData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_fee",
                      "type": 70,
                      "typeName": "<Arbitrum as Chain>::ChainAmount"
                    },
                    {
                      "name": "gas_limit_multiplier",
                      "type": 295,
                      "typeName": "FixedU64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 295,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU64"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 9,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 296,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vault_key_rotated_externally",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "block_number",
                          "type": 9,
                          "typeName": "ChainBlockNumberFor<T, I>"
                        },
                        {
                          "name": "tx_id",
                          "type": 10,
                          "typeName": "TransactionInIdFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vault_key_rotated_externally`]."
                      ]
                    },
                    {
                      "name": "initialize_chain",
                      "index": 5,
                      "docs": [
                        "See [`Pallet::initialize_chain`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 297,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transaction_signing_failure",
                      "fields": [
                        {
                          "name": "broadcast_attempt_id",
                          "type": 168,
                          "typeName": "(BroadcastId, AttemptCount)"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transaction_signing_failure`]."
                      ]
                    },
                    {
                      "name": "on_signature_ready",
                      "fields": [
                        {
                          "name": "threshold_request_id",
                          "type": 4,
                          "typeName": "ThresholdSignatureRequestId"
                        },
                        {
                          "name": "threshold_signature_payload",
                          "type": 10,
                          "typeName": "PayloadFor<T, I>"
                        },
                        {
                          "name": "api_call",
                          "type": 298,
                          "typeName": "Box<<T as Config<I>>::ApiCall>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "initiated_at",
                          "type": 9,
                          "typeName": "ChainBlockNumberFor<T, I>"
                        },
                        {
                          "name": "should_broadcast",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::on_signature_ready`]."
                      ]
                    },
                    {
                      "name": "transaction_succeeded",
                      "fields": [
                        {
                          "name": "tx_out_id",
                          "type": 158,
                          "typeName": "TransactionOutIdFor<T, I>"
                        },
                        {
                          "name": "signer_id",
                          "type": 31,
                          "typeName": "SignerIdFor<T, I>"
                        },
                        {
                          "name": "tx_fee",
                          "type": 198,
                          "typeName": "TransactionFeeFor<T, I>"
                        },
                        {
                          "name": "tx_metadata",
                          "type": 199,
                          "typeName": "TransactionMetadataFor<T, I>"
                        },
                        {
                          "name": "transaction_ref",
                          "type": 10,
                          "typeName": "TransactionRefFor<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::transaction_succeeded`]."
                      ]
                    },
                    {
                      "name": "stress_test",
                      "fields": [
                        {
                          "name": "how_many",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::stress_test`]."
                      ]
                    },
                    {
                      "name": "transaction_failed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transaction_failed`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 298,
            "type": {
              "path": [
                "cf_chains",
                "arb",
                "api",
                "ArbitrumApi"
              ],
              "params": [
                {
                  "name": "Environment",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SetAggKeyWithAggKey",
                      "fields": [
                        {
                          "type": 170,
                          "typeName": "EvmTransactionBuilder<set_agg_key_with_agg_key::SetAggKeyWithAggKey>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AllBatch",
                      "fields": [
                        {
                          "type": 186,
                          "typeName": "EvmTransactionBuilder<all_batch::AllBatch>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ExecutexSwapAndCall",
                      "fields": [
                        {
                          "type": 194,
                          "typeName": "EvmTransactionBuilder<execute_x_swap_and_call::ExecutexSwapAndCall>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "TransferFallback",
                      "fields": [
                        {
                          "type": 196,
                          "typeName": "EvmTransactionBuilder<transfer_fallback::TransferFallback>"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 299,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "finalise_ingress",
                      "fields": [
                        {
                          "name": "addresses",
                          "type": 97,
                          "typeName": "Vec<TargetChainAccount<T, I>>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::finalise_ingress`]."
                      ]
                    },
                    {
                      "name": "enable_or_disable_egress",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "set_disabled",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::enable_or_disable_egress`]."
                      ]
                    },
                    {
                      "name": "process_deposits",
                      "fields": [
                        {
                          "name": "deposit_witnesses",
                          "type": 300,
                          "typeName": "Vec<DepositWitness<T::TargetChain>>"
                        },
                        {
                          "name": "block_height",
                          "type": 9,
                          "typeName": "TargetChainBlockNumber<T, I>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::process_deposits`]."
                      ]
                    },
                    {
                      "name": "vault_transfer_failed",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "destination_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vault_transfer_failed`]."
                      ]
                    },
                    {
                      "name": "ccm_broadcast_failed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::ccm_broadcast_failed`]."
                      ]
                    },
                    {
                      "name": "update_pallet_config",
                      "fields": [
                        {
                          "name": "updates",
                          "type": 302,
                          "typeName": "BoundedVec<PalletConfigUpdate<T, I>, ConstU32<10>>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::update_pallet_config`]."
                      ]
                    },
                    {
                      "name": "add_boost_funds",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "pool_tier",
                          "type": 110,
                          "typeName": "BoostPoolTier"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::add_boost_funds`]."
                      ]
                    },
                    {
                      "name": "stop_boosting",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "pool_tier",
                          "type": 110,
                          "typeName": "BoostPoolTier"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::stop_boosting`]."
                      ]
                    },
                    {
                      "name": "create_boost_pools",
                      "fields": [
                        {
                          "name": "new_pools",
                          "type": 305,
                          "typeName": "Vec<BoostPoolId<T::TargetChain>>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::create_boost_pools`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 300,
            "type": {
              "def": {
                "sequence": {
                  "type": 301
                }
              }
            }
          },
          {
            "id": 301,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositWitness"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_address",
                      "type": 31,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "asset",
                      "type": 33,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "deposit_details",
                      "type": 5,
                      "typeName": "C::DepositDetails"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 302,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 303
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 304,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 303,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PalletConfigUpdate"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ChannelOpeningFee",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "SetMinimumDeposit",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "minimum_deposit",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 304,
            "type": {
              "def": {
                "sequence": {
                  "type": 303
                }
              }
            }
          },
          {
            "id": 305,
            "type": {
              "def": {
                "sequence": {
                  "type": 306
                }
              }
            }
          },
          {
            "id": 306,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "BoostPoolId"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 33,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "tier",
                      "type": 110,
                      "typeName": "BoostPoolTier"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 307,
            "type": {
              "path": [
                "pallet_cf_validator",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RotationAborted",
                      "index": 0,
                      "docs": [
                        "The rotation is aborted"
                      ]
                    },
                    {
                      "name": "NewEpoch",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A new epoch has started \\[epoch_index\\]"
                      ]
                    },
                    {
                      "name": "RotationPhaseUpdated",
                      "fields": [
                        {
                          "name": "new_phase",
                          "type": 308,
                          "typeName": "RotationPhase<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Rotation phase updated."
                      ]
                    },
                    {
                      "name": "CFEVersionUpdated",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "ValidatorIdOf<T>"
                        },
                        {
                          "name": "old_version",
                          "type": 104,
                          "typeName": "Version"
                        },
                        {
                          "name": "new_version",
                          "type": 104,
                          "typeName": "Version"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The CFE version has been updated."
                      ]
                    },
                    {
                      "name": "PeerIdRegistered",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 109,
                          "typeName": "Ed25519PublicKey"
                        },
                        {
                          "type": 110,
                          "typeName": "Port"
                        },
                        {
                          "type": 70,
                          "typeName": "Ipv6Addr"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An authority has register her current PeerId \\[account_id, public_key, port,",
                        "ip_address\\]"
                      ]
                    },
                    {
                      "name": "PeerIdUnregistered",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "type": 109,
                          "typeName": "Ed25519PublicKey"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A authority has unregistered her current PeerId \\[account_id, public_key\\]"
                      ]
                    },
                    {
                      "name": "AuctionCompleted",
                      "fields": [
                        {
                          "type": 128,
                          "typeName": "Vec<ValidatorIdOf<T>>"
                        },
                        {
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An auction has a set of winners \\[winners, bond\\]"
                      ]
                    },
                    {
                      "name": "PalletConfigUpdated",
                      "fields": [
                        {
                          "name": "update",
                          "type": 101,
                          "typeName": "PalletConfigUpdate"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some pallet configuration has been updated."
                      ]
                    },
                    {
                      "name": "StoppedBidding",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "An account has stopped bidding and will no longer take part in auctions."
                      ]
                    },
                    {
                      "name": "StartedBidding",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A previously non-bidding account has started bidding."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 308,
            "type": {
              "path": [
                "pallet_cf_validator",
                "RotationPhase"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Idle",
                      "index": 0
                    },
                    {
                      "name": "KeygensInProgress",
                      "fields": [
                        {
                          "type": 309,
                          "typeName": "RuntimeRotationState<T>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "KeyHandoversInProgress",
                      "fields": [
                        {
                          "type": 309,
                          "typeName": "RuntimeRotationState<T>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "ActivatingKeys",
                      "fields": [
                        {
                          "type": 309,
                          "typeName": "RuntimeRotationState<T>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "NewKeysActivated",
                      "fields": [
                        {
                          "type": 309,
                          "typeName": "RuntimeRotationState<T>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "SessionRotating",
                      "fields": [
                        {
                          "type": 128,
                          "typeName": "Vec<ValidatorIdOf<T>>"
                        },
                        {
                          "type": 70,
                          "typeName": "<T as Chainflip>::Amount"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 309,
            "type": {
              "path": [
                "pallet_cf_validator",
                "rotation_state",
                "RotationState"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 0
                },
                {
                  "name": "Amount",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "primary_candidates",
                      "type": 128,
                      "typeName": "Vec<Id>"
                    },
                    {
                      "name": "secondary_candidates",
                      "type": 128,
                      "typeName": "Vec<Id>"
                    },
                    {
                      "name": "banned",
                      "type": 127,
                      "typeName": "BTreeSet<Id>"
                    },
                    {
                      "name": "bond",
                      "type": 70,
                      "typeName": "Amount"
                    },
                    {
                      "name": "new_epoch_index",
                      "type": 4,
                      "typeName": "EpochIndex"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 310,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewSession",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New session has happened. Note that the argument is the session index, not the",
                        "block number as the type might suggest."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 311,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Event"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewAuthorities",
                      "fields": [
                        {
                          "name": "authority_set",
                          "type": 312,
                          "typeName": "AuthorityList"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New authority set has been applied."
                      ]
                    },
                    {
                      "name": "Paused",
                      "index": 1,
                      "docs": [
                        "Current authority set has been paused."
                      ]
                    },
                    {
                      "name": "Resumed",
                      "index": 2,
                      "docs": [
                        "Current authority set has been resumed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 312,
            "type": {
              "def": {
                "sequence": {
                  "type": 313
                }
              }
            }
          },
          {
            "id": 313,
            "type": {
              "def": {
                "tuple": [
                  108,
                  9
                ]
              }
            }
          },
          {
            "id": 314,
            "type": {
              "path": [
                "pallet_cf_governance",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "ProposalId"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new proposal was submitted \\[proposal_id\\]"
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "ProposalId"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A proposal was executed \\[proposal_id\\]"
                      ]
                    },
                    {
                      "name": "Expired",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "ProposalId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A proposal is expired \\[proposal_id\\]"
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "ProposalId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proposal was approved \\[proposal_id\\]"
                      ]
                    },
                    {
                      "name": "FailedExecution",
                      "fields": [
                        {
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The execution of a proposal failed \\[dispatch_error\\]"
                      ]
                    },
                    {
                      "name": "DecodeOfCallFailed",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "ProposalId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The decode of call failed \\[proposal_id\\]"
                      ]
                    },
                    {
                      "name": "GovKeyCallExecuted",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "GovCallHash"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Call executed by GovKey"
                      ]
                    },
                    {
                      "name": "GovKeyCallHashWhitelisted",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "GovCallHash"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "CallHash whitelisted by the GovKey"
                      ]
                    },
                    {
                      "name": "GovKeyCallExecutionFailed",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "GovCallHash"
                        },
                        {
                          "name": "error",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Failed GovKey call"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 315,
            "type": {
              "path": [
                "pallet_cf_tokenholder_governance",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProposalSubmitted",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 132,
                          "typeName": "Proposal"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A proposal has been submitted."
                      ]
                    },
                    {
                      "name": "ProposalPassed",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 132,
                          "typeName": "Proposal"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A proposal has passed."
                      ]
                    },
                    {
                      "name": "ProposalRejected",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 132,
                          "typeName": "Proposal"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A proposal was rejected."
                      ]
                    },
                    {
                      "name": "ProposalEnacted",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 132,
                          "typeName": "Proposal"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proposal was enacted."
                      ]
                    },
                    {
                      "name": "GovKeyUpdatedHasFailed",
                      "fields": [
                        {
                          "name": "chain",
                          "type": 74,
                          "typeName": "ForeignChain"
                        },
                        {
                          "name": "key",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Update of GOV key has failed."
                      ]
                    },
                    {
                      "name": "GovKeyUpdatedWasSuccessful",
                      "fields": [
                        {
                          "name": "chain",
                          "type": 74,
                          "typeName": "ForeignChain"
                        },
                        {
                          "name": "key",
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Update of GOV key was successful."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 316,
            "type": {
              "path": [
                "pallet_cf_reputation",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "OffencePenalty",
                      "fields": [
                        {
                          "name": "offender",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        },
                        {
                          "name": "offence",
                          "type": 135,
                          "typeName": "T::Offence"
                        },
                        {
                          "name": "penalty",
                          "type": 134,
                          "typeName": "ReputationPoints"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An offence has been penalised."
                      ]
                    },
                    {
                      "name": "AccrualRateUpdated",
                      "fields": [
                        {
                          "name": "reputation_points",
                          "type": 134,
                          "typeName": "ReputationPoints"
                        },
                        {
                          "name": "number_of_blocks",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The accrual rate for our reputation points has been updated."
                      ]
                    },
                    {
                      "name": "MissedHeartbeatPenaltyUpdated",
                      "fields": [
                        {
                          "name": "new_reputation_penalty",
                          "type": 134,
                          "typeName": "ReputationPoints"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The penalty for missing a heartbeat has been updated."
                      ]
                    },
                    {
                      "name": "PenaltyUpdated",
                      "fields": [
                        {
                          "name": "offence",
                          "type": 135,
                          "typeName": "T::Offence"
                        },
                        {
                          "name": "old_penalty",
                          "type": 136,
                          "typeName": "Penalty<T>"
                        },
                        {
                          "name": "new_penalty",
                          "type": 136,
                          "typeName": "Penalty<T>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The penalty for some offence has been updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 317,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ChainStateUpdated",
                      "fields": [
                        {
                          "name": "new_chain_state",
                          "type": 138,
                          "typeName": "ChainState<T::TargetChain>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The tracked state of this chain has been updated."
                      ]
                    },
                    {
                      "name": "FeeMultiplierUpdated",
                      "fields": [
                        {
                          "name": "new_fee_multiplier",
                          "type": 141,
                          "typeName": "FixedU128"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The fee multiplier for this chain has been updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 318,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ChainStateUpdated",
                      "fields": [
                        {
                          "name": "new_chain_state",
                          "type": 143,
                          "typeName": "ChainState<T::TargetChain>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The tracked state of this chain has been updated."
                      ]
                    },
                    {
                      "name": "FeeMultiplierUpdated",
                      "fields": [
                        {
                          "name": "new_fee_multiplier",
                          "type": 141,
                          "typeName": "FixedU128"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The fee multiplier for this chain has been updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 319,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ChainStateUpdated",
                      "fields": [
                        {
                          "name": "new_chain_state",
                          "type": 148,
                          "typeName": "ChainState<T::TargetChain>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The tracked state of this chain has been updated."
                      ]
                    },
                    {
                      "name": "FeeMultiplierUpdated",
                      "fields": [
                        {
                          "name": "new_fee_multiplier",
                          "type": 141,
                          "typeName": "FixedU128"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The fee multiplier for this chain has been updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 320,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VaultActivationCompleted",
                      "index": 0,
                      "docs": [
                        "The vault for the request has rotated"
                      ]
                    },
                    {
                      "name": "VaultRotatedExternally",
                      "fields": [
                        {
                          "type": 153,
                          "typeName": "<<T::Chain as Chain>::ChainCrypto as ChainCrypto>::AggKey"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The vault's key has been rotated externally \\[new_public_key\\]"
                      ]
                    },
                    {
                      "name": "AwaitingGovernanceActivation",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "<<T::Chain as Chain>::ChainCrypto as ChainCrypto>::AggKey"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The new key has been generated, we must activate the new key on the external",
                        "chain via governance."
                      ]
                    },
                    {
                      "name": "ChainInitialized",
                      "index": 3
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 321,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VaultActivationCompleted",
                      "index": 0,
                      "docs": [
                        "The vault for the request has rotated"
                      ]
                    },
                    {
                      "name": "VaultRotatedExternally",
                      "fields": [
                        {
                          "type": 34,
                          "typeName": "<<T::Chain as Chain>::ChainCrypto as ChainCrypto>::AggKey"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The vault's key has been rotated externally \\[new_public_key\\]"
                      ]
                    },
                    {
                      "name": "AwaitingGovernanceActivation",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "<<T::Chain as Chain>::ChainCrypto as ChainCrypto>::AggKey"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The new key has been generated, we must activate the new key on the external",
                        "chain via governance."
                      ]
                    },
                    {
                      "name": "ChainInitialized",
                      "index": 3
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 322,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VaultActivationCompleted",
                      "index": 0,
                      "docs": [
                        "The vault for the request has rotated"
                      ]
                    },
                    {
                      "name": "VaultRotatedExternally",
                      "fields": [
                        {
                          "type": 90,
                          "typeName": "<<T::Chain as Chain>::ChainCrypto as ChainCrypto>::AggKey"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The vault's key has been rotated externally \\[new_public_key\\]"
                      ]
                    },
                    {
                      "name": "AwaitingGovernanceActivation",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "<<T::Chain as Chain>::ChainCrypto as ChainCrypto>::AggKey"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The new key has been generated, we must activate the new key on the external",
                        "chain via governance."
                      ]
                    },
                    {
                      "name": "ChainInitialized",
                      "index": 3
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 323,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ThresholdSignatureRequest",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "key",
                          "type": 153,
                          "typeName": "<T::TargetChainCrypto as ChainCrypto>::AggKey"
                        },
                        {
                          "name": "signatories",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "payload",
                          "type": 10,
                          "typeName": "PayloadFor<T, I>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ThresholdSignatureFailed",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "offenders",
                          "type": 128,
                          "typeName": "Vec<T::ValidatorId>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ThresholdSignatureSuccess",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The threshold signature posted back to the chain was verified."
                      ]
                    },
                    {
                      "name": "ThresholdDispatchComplete",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "result",
                          "type": 324,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "We have had a signature success and we have dispatched the associated callback"
                      ]
                    },
                    {
                      "name": "RetryRequested",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "FailureReportProcessed",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reporter_id",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "SignersUnavailable",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "attempt_count",
                          "type": 4,
                          "typeName": "AttemptCount"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Not enough signers were available to reach threshold."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureResponseTimeoutUpdated",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The threshold signature response timeout has been updated"
                      ]
                    },
                    {
                      "name": "KeygenRequest",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex",
                          "docs": [
                            "The epoch index for which the key is being generated."
                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Request a key generation"
                      ]
                    },
                    {
                      "name": "KeyHandoverRequest",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "from_epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "key_to_share",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "sharing_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "receiving_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "new_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>",
                          "docs": [
                            "The freshly generated key for the next epoch."
                          ]
                        },
                        {
                          "name": "to_epoch",
                          "type": 4,
                          "typeName": "EpochIndex",
                          "docs": [
                            "The epoch index for which the key is being handed over."
                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Request a key handover"
                      ]
                    },
                    {
                      "name": "KeygenSuccessReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A keygen participant has reported that keygen was successful \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverSuccessReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A key handover participant has reported that keygen was successful \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenFailureReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A keygen participant has reported that keygen has failed \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverFailureReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A key handover participant has reported that keygen has failed \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenSuccess",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Keygen was successful \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverSuccess",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "The key handover was successful"
                      ]
                    },
                    {
                      "name": "NoKeyHandover",
                      "index": 16
                    },
                    {
                      "name": "KeygenVerificationSuccess",
                      "fields": [
                        {
                          "name": "agg_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "The new key was successfully used to sign."
                      ]
                    },
                    {
                      "name": "KeyHandoverVerificationSuccess",
                      "fields": [
                        {
                          "name": "agg_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "KeygenVerificationFailure",
                      "fields": [
                        {
                          "name": "keygen_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Verification of the new key has failed."
                      ]
                    },
                    {
                      "name": "KeyHandoverVerificationFailure",
                      "fields": [
                        {
                          "name": "handover_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "KeygenFailure",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Keygen has failed \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenResponseTimeout",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Keygen response timeout has occurred \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverResponseTimeout",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "KeygenResponseTimeoutUpdated",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "Keygen response timeout was updated \\[new_timeout\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverFailure",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "Key handover has failed"
                      ]
                    },
                    {
                      "name": "KeyRotationCompleted",
                      "index": 26,
                      "docs": [
                        "The vault on chains associated with this key have all rotated"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 324,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 5
                },
                {
                  "name": "E",
                  "type": 23
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 5
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 23
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 325,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ThresholdSignatureRequest",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "key",
                          "type": 34,
                          "typeName": "<T::TargetChainCrypto as ChainCrypto>::AggKey"
                        },
                        {
                          "name": "signatories",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "payload",
                          "type": 202,
                          "typeName": "PayloadFor<T, I>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ThresholdSignatureFailed",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "offenders",
                          "type": 128,
                          "typeName": "Vec<T::ValidatorId>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ThresholdSignatureSuccess",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The threshold signature posted back to the chain was verified."
                      ]
                    },
                    {
                      "name": "ThresholdDispatchComplete",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "result",
                          "type": 324,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "We have had a signature success and we have dispatched the associated callback"
                      ]
                    },
                    {
                      "name": "RetryRequested",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "FailureReportProcessed",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reporter_id",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "SignersUnavailable",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "attempt_count",
                          "type": 4,
                          "typeName": "AttemptCount"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Not enough signers were available to reach threshold."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureResponseTimeoutUpdated",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The threshold signature response timeout has been updated"
                      ]
                    },
                    {
                      "name": "KeygenRequest",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex",
                          "docs": [
                            "The epoch index for which the key is being generated."
                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Request a key generation"
                      ]
                    },
                    {
                      "name": "KeyHandoverRequest",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "from_epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "key_to_share",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "sharing_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "receiving_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "new_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>",
                          "docs": [
                            "The freshly generated key for the next epoch."
                          ]
                        },
                        {
                          "name": "to_epoch",
                          "type": 4,
                          "typeName": "EpochIndex",
                          "docs": [
                            "The epoch index for which the key is being handed over."
                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Request a key handover"
                      ]
                    },
                    {
                      "name": "KeygenSuccessReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A keygen participant has reported that keygen was successful \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverSuccessReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A key handover participant has reported that keygen was successful \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenFailureReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A keygen participant has reported that keygen has failed \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverFailureReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A key handover participant has reported that keygen has failed \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenSuccess",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Keygen was successful \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverSuccess",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "The key handover was successful"
                      ]
                    },
                    {
                      "name": "NoKeyHandover",
                      "index": 16
                    },
                    {
                      "name": "KeygenVerificationSuccess",
                      "fields": [
                        {
                          "name": "agg_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "The new key was successfully used to sign."
                      ]
                    },
                    {
                      "name": "KeyHandoverVerificationSuccess",
                      "fields": [
                        {
                          "name": "agg_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "KeygenVerificationFailure",
                      "fields": [
                        {
                          "name": "keygen_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Verification of the new key has failed."
                      ]
                    },
                    {
                      "name": "KeyHandoverVerificationFailure",
                      "fields": [
                        {
                          "name": "handover_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "KeygenFailure",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Keygen has failed \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenResponseTimeout",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Keygen response timeout has occurred \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverResponseTimeout",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "KeygenResponseTimeoutUpdated",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "Keygen response timeout was updated \\[new_timeout\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverFailure",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "Key handover has failed"
                      ]
                    },
                    {
                      "name": "KeyRotationCompleted",
                      "index": 26,
                      "docs": [
                        "The vault on chains associated with this key have all rotated"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 326,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ThresholdSignatureRequest",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "key",
                          "type": 90,
                          "typeName": "<T::TargetChainCrypto as ChainCrypto>::AggKey"
                        },
                        {
                          "name": "signatories",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "payload",
                          "type": 221,
                          "typeName": "PayloadFor<T, I>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "ThresholdSignatureFailed",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "offenders",
                          "type": 128,
                          "typeName": "Vec<T::ValidatorId>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "ThresholdSignatureSuccess",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The threshold signature posted back to the chain was verified."
                      ]
                    },
                    {
                      "name": "ThresholdDispatchComplete",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "result",
                          "type": 324,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "We have had a signature success and we have dispatched the associated callback"
                      ]
                    },
                    {
                      "name": "RetryRequested",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "FailureReportProcessed",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "reporter_id",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "SignersUnavailable",
                      "fields": [
                        {
                          "name": "request_id",
                          "type": 4,
                          "typeName": "RequestId"
                        },
                        {
                          "name": "attempt_count",
                          "type": 4,
                          "typeName": "AttemptCount"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Not enough signers were available to reach threshold."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureResponseTimeoutUpdated",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The threshold signature response timeout has been updated"
                      ]
                    },
                    {
                      "name": "KeygenRequest",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex",
                          "docs": [
                            "The epoch index for which the key is being generated."
                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Request a key generation"
                      ]
                    },
                    {
                      "name": "KeyHandoverRequest",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "from_epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "key_to_share",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "sharing_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "receiving_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "new_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>",
                          "docs": [
                            "The freshly generated key for the next epoch."
                          ]
                        },
                        {
                          "name": "to_epoch",
                          "type": 4,
                          "typeName": "EpochIndex",
                          "docs": [
                            "The epoch index for which the key is being handed over."
                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Request a key handover"
                      ]
                    },
                    {
                      "name": "KeygenSuccessReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A keygen participant has reported that keygen was successful \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverSuccessReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A key handover participant has reported that keygen was successful \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenFailureReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A keygen participant has reported that keygen has failed \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverFailureReported",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A key handover participant has reported that keygen has failed \\[validator_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenSuccess",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Keygen was successful \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverSuccess",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "The key handover was successful"
                      ]
                    },
                    {
                      "name": "NoKeyHandover",
                      "index": 16
                    },
                    {
                      "name": "KeygenVerificationSuccess",
                      "fields": [
                        {
                          "name": "agg_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "The new key was successfully used to sign."
                      ]
                    },
                    {
                      "name": "KeyHandoverVerificationSuccess",
                      "fields": [
                        {
                          "name": "agg_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "KeygenVerificationFailure",
                      "fields": [
                        {
                          "name": "keygen_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Verification of the new key has failed."
                      ]
                    },
                    {
                      "name": "KeyHandoverVerificationFailure",
                      "fields": [
                        {
                          "name": "handover_ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "KeygenFailure",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Keygen has failed \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeygenResponseTimeout",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Keygen response timeout has occurred \\[ceremony_id\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverResponseTimeout",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "KeygenResponseTimeoutUpdated",
                      "fields": [
                        {
                          "name": "new_timeout",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "Keygen response timeout was updated \\[new_timeout\\]"
                      ]
                    },
                    {
                      "name": "KeyHandoverFailure",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "Key handover has failed"
                      ]
                    },
                    {
                      "name": "KeyRotationCompleted",
                      "index": 26,
                      "docs": [
                        "The vault on chains associated with this key have all rotated"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 327,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionBroadcastRequest",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "nominee",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        },
                        {
                          "name": "transaction_payload",
                          "type": 328,
                          "typeName": "TransactionFor<T, I>"
                        },
                        {
                          "name": "transaction_out_id",
                          "type": 158,
                          "typeName": "TransactionOutIdFor<T, I>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A request to a specific authority to sign a transaction."
                      ]
                    },
                    {
                      "name": "BroadcastRetryScheduled",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "retry_block",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A failed broadcast has been scheduled for retry."
                      ]
                    },
                    {
                      "name": "BroadcastTimeout",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A broadcast has timed out."
                      ]
                    },
                    {
                      "name": "BroadcastAborted",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A broadcast has been aborted after all authorities have failed to broadcast it."
                      ]
                    },
                    {
                      "name": "BroadcastSuccess",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "transaction_out_id",
                          "type": 158,
                          "typeName": "TransactionOutIdFor<T, I>"
                        },
                        {
                          "name": "transaction_ref",
                          "type": 10,
                          "typeName": "TransactionRefFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A broadcast has successfully been completed."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureInvalid",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A broadcast's threshold signature is invalid, we will attempt to re-sign it."
                      ]
                    },
                    {
                      "name": "BroadcastCallbackExecuted",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "result",
                          "type": 324,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A signature accepted event on the target chain has been witnessed and the callback was",
                        "executed."
                      ]
                    },
                    {
                      "name": "TransactionFeeDeficitRecorded",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 31,
                          "typeName": "SignerIdFor<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "ChainAmountFor<T, I>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The fee paid for broadcasting a transaction has been recorded."
                      ]
                    },
                    {
                      "name": "TransactionFeeDeficitRefused",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 31,
                          "typeName": "SignerIdFor<T, I>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The fee paid for broadcasting a transaction has been refused."
                      ]
                    },
                    {
                      "name": "CallResigned",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A Call has been re-threshold-signed, and its signature data is inserted into storage."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 328,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "Transaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": 9,
                      "typeName": "u64"
                    },
                    {
                      "name": "max_priority_fee_per_gas",
                      "type": 200,
                      "typeName": "Option<Uint>"
                    },
                    {
                      "name": "max_fee_per_gas",
                      "type": 200,
                      "typeName": "Option<Uint>"
                    },
                    {
                      "name": "gas_limit",
                      "type": 200,
                      "typeName": "Option<Uint>"
                    },
                    {
                      "name": "contract",
                      "type": 31,
                      "typeName": "Address"
                    },
                    {
                      "name": "value",
                      "type": 174,
                      "typeName": "Uint"
                    },
                    {
                      "name": "data",
                      "type": 11,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 329,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionBroadcastRequest",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "nominee",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        },
                        {
                          "name": "transaction_payload",
                          "type": 330,
                          "typeName": "TransactionFor<T, I>"
                        },
                        {
                          "name": "transaction_out_id",
                          "type": 161,
                          "typeName": "TransactionOutIdFor<T, I>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A request to a specific authority to sign a transaction."
                      ]
                    },
                    {
                      "name": "BroadcastRetryScheduled",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "retry_block",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A failed broadcast has been scheduled for retry."
                      ]
                    },
                    {
                      "name": "BroadcastTimeout",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A broadcast has timed out."
                      ]
                    },
                    {
                      "name": "BroadcastAborted",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A broadcast has been aborted after all authorities have failed to broadcast it."
                      ]
                    },
                    {
                      "name": "BroadcastSuccess",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "transaction_out_id",
                          "type": 161,
                          "typeName": "TransactionOutIdFor<T, I>"
                        },
                        {
                          "name": "transaction_ref",
                          "type": 219,
                          "typeName": "TransactionRefFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A broadcast has successfully been completed."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureInvalid",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A broadcast's threshold signature is invalid, we will attempt to re-sign it."
                      ]
                    },
                    {
                      "name": "BroadcastCallbackExecuted",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "result",
                          "type": 324,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A signature accepted event on the target chain has been witnessed and the callback was",
                        "executed."
                      ]
                    },
                    {
                      "name": "TransactionFeeDeficitRecorded",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 34,
                          "typeName": "SignerIdFor<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "ChainAmountFor<T, I>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The fee paid for broadcasting a transaction has been recorded."
                      ]
                    },
                    {
                      "name": "TransactionFeeDeficitRefused",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 34,
                          "typeName": "SignerIdFor<T, I>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The fee paid for broadcasting a transaction has been refused."
                      ]
                    },
                    {
                      "name": "CallResigned",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A Call has been re-threshold-signed, and its signature data is inserted into storage."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 330,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotTransactionData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded_extrinsic",
                      "type": 11,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 331,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionBroadcastRequest",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "nominee",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        },
                        {
                          "name": "transaction_payload",
                          "type": 332,
                          "typeName": "TransactionFor<T, I>"
                        },
                        {
                          "name": "transaction_out_id",
                          "type": 10,
                          "typeName": "TransactionOutIdFor<T, I>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A request to a specific authority to sign a transaction."
                      ]
                    },
                    {
                      "name": "BroadcastRetryScheduled",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "retry_block",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A failed broadcast has been scheduled for retry."
                      ]
                    },
                    {
                      "name": "BroadcastTimeout",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A broadcast has timed out."
                      ]
                    },
                    {
                      "name": "BroadcastAborted",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A broadcast has been aborted after all authorities have failed to broadcast it."
                      ]
                    },
                    {
                      "name": "BroadcastSuccess",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "transaction_out_id",
                          "type": 10,
                          "typeName": "TransactionOutIdFor<T, I>"
                        },
                        {
                          "name": "transaction_ref",
                          "type": 10,
                          "typeName": "TransactionRefFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A broadcast has successfully been completed."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureInvalid",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A broadcast's threshold signature is invalid, we will attempt to re-sign it."
                      ]
                    },
                    {
                      "name": "BroadcastCallbackExecuted",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "result",
                          "type": 324,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A signature accepted event on the target chain has been witnessed and the callback was",
                        "executed."
                      ]
                    },
                    {
                      "name": "TransactionFeeDeficitRecorded",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 229,
                          "typeName": "SignerIdFor<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "ChainAmountFor<T, I>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The fee paid for broadcasting a transaction has been recorded."
                      ]
                    },
                    {
                      "name": "TransactionFeeDeficitRefused",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 229,
                          "typeName": "SignerIdFor<T, I>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The fee paid for broadcasting a transaction has been refused."
                      ]
                    },
                    {
                      "name": "CallResigned",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A Call has been re-threshold-signed, and its signature data is inserted into storage."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 332,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "BitcoinTransactionData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded_transaction",
                      "type": 11,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 333,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SwapDepositAddressReady",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "source_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "broker_commission_rate",
                          "type": 110,
                          "typeName": "BasisPoints"
                        },
                        {
                          "name": "channel_metadata",
                          "type": 235,
                          "typeName": "Option<CcmChannelMetadata>"
                        },
                        {
                          "name": "source_chain_expiry_block",
                          "type": 9,
                          "typeName": "<AnyChain as Chain>::ChainBlockNumber"
                        },
                        {
                          "name": "boost_fee",
                          "type": 110,
                          "typeName": "BasisPoints"
                        },
                        {
                          "name": "channel_opening_fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        },
                        {
                          "name": "affiliate_fees",
                          "type": 246,
                          "typeName": "Affiliates<T::AccountId>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An new swap deposit channel has been opened."
                      ]
                    },
                    {
                      "name": "SwapScheduled",
                      "fields": [
                        {
                          "name": "swap_id",
                          "type": 9,
                          "typeName": "SwapId"
                        },
                        {
                          "name": "source_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "deposit_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "origin",
                          "type": 334,
                          "typeName": "SwapOrigin"
                        },
                        {
                          "name": "swap_type",
                          "type": 335,
                          "typeName": "SwapType"
                        },
                        {
                          "name": "broker_commission",
                          "type": 244,
                          "typeName": "Option<AssetAmount>"
                        },
                        {
                          "name": "broker_fee",
                          "type": 244,
                          "typeName": "Option<AssetAmount>"
                        },
                        {
                          "name": "execute_at",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A swap deposit has been received."
                      ]
                    },
                    {
                      "name": "SwapExecuted",
                      "fields": [
                        {
                          "name": "swap_id",
                          "type": 9,
                          "typeName": "SwapId"
                        },
                        {
                          "name": "source_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "deposit_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "swap_input",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "egress_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "swap_output",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "intermediate_amount",
                          "type": 244,
                          "typeName": "Option<AssetAmount>"
                        },
                        {
                          "name": "swap_type",
                          "type": 335,
                          "typeName": "SwapType"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A swap has been executed."
                      ]
                    },
                    {
                      "name": "SwapEgressScheduled",
                      "fields": [
                        {
                          "name": "swap_id",
                          "type": 9,
                          "typeName": "SwapId"
                        },
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A swap egress has been scheduled."
                      ]
                    },
                    {
                      "name": "WithdrawalRequested",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "egress_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "egress_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "egress_fee",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A broker fee withdrawal has been requested."
                      ]
                    },
                    {
                      "name": "BatchSwapFailed",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "direction",
                          "type": 336,
                          "typeName": "SwapLeg"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Most likely cause of this error is that there are insufficient",
                        "liquidity in the Pool. Also this could happen if the result overflowed u128::MAX"
                      ]
                    },
                    {
                      "name": "CcmEgressScheduled",
                      "fields": [
                        {
                          "name": "ccm_id",
                          "type": 9,
                          "typeName": "u64"
                        },
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "CcmDepositReceived",
                      "fields": [
                        {
                          "name": "ccm_id",
                          "type": 9,
                          "typeName": "u64"
                        },
                        {
                          "name": "principal_swap_id",
                          "type": 337,
                          "typeName": "Option<SwapId>"
                        },
                        {
                          "name": "gas_swap_id",
                          "type": 337,
                          "typeName": "Option<SwapId>"
                        },
                        {
                          "name": "deposit_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "deposit_metadata",
                          "type": 239,
                          "typeName": "CcmDepositMetadata"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "CcmFailed",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 338,
                          "typeName": "CcmFailReason"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "deposit_metadata",
                          "type": 239,
                          "typeName": "CcmDepositMetadata"
                        },
                        {
                          "name": "origin",
                          "type": 334,
                          "typeName": "SwapOrigin"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "MaximumSwapAmountSet",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount",
                          "type": 244,
                          "typeName": "Option<AssetAmount>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "SwapAmountConfiscated",
                      "fields": [
                        {
                          "name": "swap_id",
                          "type": 9,
                          "typeName": "SwapId"
                        },
                        {
                          "name": "source_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "total_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "confiscated_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "SwapEgressIgnored",
                      "fields": [
                        {
                          "name": "swap_id",
                          "type": 9,
                          "typeName": "SwapId"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "reason",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 11
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 334,
            "type": {
              "path": [
                "cf_chains",
                "SwapOrigin"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DepositChannel",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 234,
                          "typeName": "address::EncodedAddress"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "deposit_block_height",
                          "type": 9,
                          "typeName": "u64"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Vault",
                      "fields": [
                        {
                          "name": "tx_hash",
                          "type": 1,
                          "typeName": "TransactionHash"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 335,
            "type": {
              "path": [
                "cf_traits",
                "liquidity",
                "SwapType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Swap",
                      "fields": [
                        {
                          "type": 241,
                          "typeName": "ForeignChainAddress"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "CcmPrincipal",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "SwapId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "CcmGas",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "SwapId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "NetworkFee",
                      "index": 3
                    },
                    {
                      "name": "IngressEgressFee",
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 336,
            "type": {
              "path": [
                "cf_primitives",
                "SwapLeg"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FromStable",
                      "index": 0
                    },
                    {
                      "name": "ToStable",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 337,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 9
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 338,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "CcmFailReason"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnsupportedForTargetChain",
                      "index": 0
                    },
                    {
                      "name": "InsufficientDepositAmount",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 339,
            "type": {
              "path": [
                "pallet_cf_lp",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AccountDebited",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount_debited",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AccountCredited",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount_credited",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "LiquidityDepositAddressReady",
                      "fields": [
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "deposit_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "deposit_chain_expiry_block",
                          "type": 9,
                          "typeName": "<AnyChain as Chain>::ChainBlockNumber"
                        },
                        {
                          "name": "boost_fee",
                          "type": 110,
                          "typeName": "BasisPoints"
                        },
                        {
                          "name": "channel_opening_fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "WithdrawalEgressScheduled",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "destination_address",
                          "type": 234,
                          "typeName": "EncodedAddress"
                        },
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "LiquidityRefundAddressRegistered",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "chain",
                          "type": 74,
                          "typeName": "ForeignChain"
                        },
                        {
                          "name": "address",
                          "type": 241,
                          "typeName": "ForeignChainAddress"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "LiquidityDepositCredited",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount_credited",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "AssetTransferred",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 6
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 340,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DepositFinalised",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "ingress_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "action",
                          "type": 341,
                          "typeName": "DepositAction<T::AccountId>"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AssetEgressStatusChanged",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "disabled",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "CcmBroadcastRequested",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "CcmEgressInvalid",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "error",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "DepositFetchesScheduled",
                      "fields": [
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "BatchBroadcastRequested",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "egress_ids",
                          "type": 342,
                          "typeName": "Vec<EgressId>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "MinimumDepositSet",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "minimum_deposit",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "DepositIgnored",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "reason",
                          "type": 343,
                          "typeName": "DepositIgnoredReason"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The deposits was rejected because the amount was below the minimum allowed."
                      ]
                    },
                    {
                      "name": "TransferFallbackRequested",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "destination_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "DepositWitnessRejected",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 23,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "deposit_witness",
                          "type": 252,
                          "typeName": "DepositWitness<T::TargetChain>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "The deposit witness was rejected."
                      ]
                    },
                    {
                      "name": "CcmBroadcastFailed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A CCM has failed to broadcast."
                      ]
                    },
                    {
                      "name": "FailedForeignChainCallResigned",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "threshold_signature_id",
                          "type": 4,
                          "typeName": "ThresholdSignatureRequestId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A failed CCM call has been re-threshold-signed for the current epoch."
                      ]
                    },
                    {
                      "name": "FailedForeignChainCallExpired",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A failed CCM has been in the system storage for more than 1 epoch.",
                        "It's broadcast data has been cleaned from storage."
                      ]
                    },
                    {
                      "name": "UtxoConsolidation",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "FailedToBuildAllBatchCall",
                      "fields": [
                        {
                          "name": "error",
                          "type": 344,
                          "typeName": "AllBatchError"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ChannelOpeningFeePaid",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "ChannelOpeningFeeSet",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "DepositBoosted",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amounts",
                          "type": 345,
                          "typeName": "BTreeMap<BoostPoolTier, TargetChainAmount<T, I>>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "ingress_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "boost_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "action",
                          "type": 341,
                          "typeName": "DepositAction<T::AccountId>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "BoostFundsAdded",
                      "fields": [
                        {
                          "name": "booster_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "boost_pool",
                          "type": 257,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "StoppedBoosting",
                      "fields": [
                        {
                          "name": "booster_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "boost_pool",
                          "type": 257,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        },
                        {
                          "name": "unlocked_amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "pending_boosts",
                          "type": 348,
                          "typeName": "BTreeSet<PrewitnessedDepositId>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "InsufficientBoostLiquidity",
                      "fields": [
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount_attempted",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "BoostPoolCreated",
                      "fields": [
                        {
                          "name": "boost_pool",
                          "type": 257,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        }
                      ],
                      "index": 21
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 341,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositAction"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Swap",
                      "fields": [
                        {
                          "name": "swap_id",
                          "type": 9,
                          "typeName": "SwapId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "LiquidityProvision",
                      "fields": [
                        {
                          "name": "lp_account",
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "CcmTransfer",
                      "fields": [
                        {
                          "name": "principal_swap_id",
                          "type": 337,
                          "typeName": "Option<SwapId>"
                        },
                        {
                          "name": "gas_swap_id",
                          "type": 337,
                          "typeName": "Option<SwapId>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "NoAction",
                      "index": 3
                    },
                    {
                      "name": "BoostersCredited",
                      "fields": [
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 342,
            "type": {
              "def": {
                "sequence": {
                  "type": 73
                }
              }
            }
          },
          {
            "id": 343,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "DepositIgnoredReason"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BelowMinimumDeposit",
                      "index": 0
                    },
                    {
                      "name": "NotEnoughToPayFees",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 344,
            "type": {
              "path": [
                "cf_chains",
                "AllBatchError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotRequired",
                      "index": 0
                    },
                    {
                      "name": "UnsupportedToken",
                      "index": 1
                    },
                    {
                      "name": "VaultAccountNotSet",
                      "index": 2
                    },
                    {
                      "name": "AggKeyNotSet",
                      "index": 3
                    },
                    {
                      "name": "UtxoSelectionFailed",
                      "index": 4
                    },
                    {
                      "name": "DispatchError",
                      "fields": [
                        {
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 345,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 110
                },
                {
                  "name": "V",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 346
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 346,
            "type": {
              "def": {
                "sequence": {
                  "type": 347
                }
              }
            }
          },
          {
            "id": 347,
            "type": {
              "def": {
                "tuple": [
                  110,
                  70
                ]
              }
            }
          },
          {
            "id": 348,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 349
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 349,
            "type": {
              "def": {
                "sequence": {
                  "type": 9
                }
              }
            }
          },
          {
            "id": 350,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DepositFinalised",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 34,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "ingress_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "action",
                          "type": 341,
                          "typeName": "DepositAction<T::AccountId>"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AssetEgressStatusChanged",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "disabled",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "CcmBroadcastRequested",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "CcmEgressInvalid",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "error",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "DepositFetchesScheduled",
                      "fields": [
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "BatchBroadcastRequested",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "egress_ids",
                          "type": 342,
                          "typeName": "Vec<EgressId>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "MinimumDepositSet",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "minimum_deposit",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "DepositIgnored",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 34,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "reason",
                          "type": 343,
                          "typeName": "DepositIgnoredReason"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The deposits was rejected because the amount was below the minimum allowed."
                      ]
                    },
                    {
                      "name": "TransferFallbackRequested",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "destination_address",
                          "type": 34,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "DepositWitnessRejected",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 23,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "deposit_witness",
                          "type": 262,
                          "typeName": "DepositWitness<T::TargetChain>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "The deposit witness was rejected."
                      ]
                    },
                    {
                      "name": "CcmBroadcastFailed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A CCM has failed to broadcast."
                      ]
                    },
                    {
                      "name": "FailedForeignChainCallResigned",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "threshold_signature_id",
                          "type": 4,
                          "typeName": "ThresholdSignatureRequestId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A failed CCM call has been re-threshold-signed for the current epoch."
                      ]
                    },
                    {
                      "name": "FailedForeignChainCallExpired",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A failed CCM has been in the system storage for more than 1 epoch.",
                        "It's broadcast data has been cleaned from storage."
                      ]
                    },
                    {
                      "name": "UtxoConsolidation",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "FailedToBuildAllBatchCall",
                      "fields": [
                        {
                          "name": "error",
                          "type": 344,
                          "typeName": "AllBatchError"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ChannelOpeningFeePaid",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "ChannelOpeningFeeSet",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "DepositBoosted",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 34,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amounts",
                          "type": 345,
                          "typeName": "BTreeMap<BoostPoolTier, TargetChainAmount<T, I>>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "ingress_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "boost_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "action",
                          "type": 341,
                          "typeName": "DepositAction<T::AccountId>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "BoostFundsAdded",
                      "fields": [
                        {
                          "name": "booster_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "boost_pool",
                          "type": 267,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "StoppedBoosting",
                      "fields": [
                        {
                          "name": "booster_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "boost_pool",
                          "type": 267,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        },
                        {
                          "name": "unlocked_amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "pending_boosts",
                          "type": 348,
                          "typeName": "BTreeSet<PrewitnessedDepositId>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "InsufficientBoostLiquidity",
                      "fields": [
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount_attempted",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "BoostPoolCreated",
                      "fields": [
                        {
                          "name": "boost_pool",
                          "type": 267,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        }
                      ],
                      "index": 21
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 351,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DepositFinalised",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 229,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 60,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "ingress_fee",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "action",
                          "type": 341,
                          "typeName": "DepositAction<T::AccountId>"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AssetEgressStatusChanged",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "disabled",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "CcmBroadcastRequested",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "CcmEgressInvalid",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "error",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "DepositFetchesScheduled",
                      "fields": [
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "BatchBroadcastRequested",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "egress_ids",
                          "type": 342,
                          "typeName": "Vec<EgressId>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "MinimumDepositSet",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "minimum_deposit",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "DepositIgnored",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 229,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 60,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "reason",
                          "type": 343,
                          "typeName": "DepositIgnoredReason"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The deposits was rejected because the amount was below the minimum allowed."
                      ]
                    },
                    {
                      "name": "TransferFallbackRequested",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "destination_address",
                          "type": 229,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "DepositWitnessRejected",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 23,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "deposit_witness",
                          "type": 272,
                          "typeName": "DepositWitness<T::TargetChain>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "The deposit witness was rejected."
                      ]
                    },
                    {
                      "name": "CcmBroadcastFailed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A CCM has failed to broadcast."
                      ]
                    },
                    {
                      "name": "FailedForeignChainCallResigned",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "threshold_signature_id",
                          "type": 4,
                          "typeName": "ThresholdSignatureRequestId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A failed CCM call has been re-threshold-signed for the current epoch."
                      ]
                    },
                    {
                      "name": "FailedForeignChainCallExpired",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A failed CCM has been in the system storage for more than 1 epoch.",
                        "It's broadcast data has been cleaned from storage."
                      ]
                    },
                    {
                      "name": "UtxoConsolidation",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "FailedToBuildAllBatchCall",
                      "fields": [
                        {
                          "name": "error",
                          "type": 344,
                          "typeName": "AllBatchError"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ChannelOpeningFeePaid",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "ChannelOpeningFeeSet",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "DepositBoosted",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 229,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amounts",
                          "type": 352,
                          "typeName": "BTreeMap<BoostPoolTier, TargetChainAmount<T, I>>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 60,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "ingress_fee",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "boost_fee",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "action",
                          "type": 341,
                          "typeName": "DepositAction<T::AccountId>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "BoostFundsAdded",
                      "fields": [
                        {
                          "name": "booster_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "boost_pool",
                          "type": 277,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "StoppedBoosting",
                      "fields": [
                        {
                          "name": "booster_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "boost_pool",
                          "type": 277,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        },
                        {
                          "name": "unlocked_amount",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "pending_boosts",
                          "type": 348,
                          "typeName": "BTreeSet<PrewitnessedDepositId>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "InsufficientBoostLiquidity",
                      "fields": [
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount_attempted",
                          "type": 9,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "BoostPoolCreated",
                      "fields": [
                        {
                          "name": "boost_pool",
                          "type": 277,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        }
                      ],
                      "index": 21
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 352,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 110
                },
                {
                  "name": "V",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 353
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 353,
            "type": {
              "def": {
                "sequence": {
                  "type": 354
                }
              }
            }
          },
          {
            "id": 354,
            "type": {
              "def": {
                "tuple": [
                  110,
                  9
                ]
              }
            }
          },
          {
            "id": 355,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UpdatedBuyInterval",
                      "fields": [
                        {
                          "name": "buy_interval",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "NewPoolCreated",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "fee_hundredth_pips",
                          "type": 4,
                          "typeName": "u32"
                        },
                        {
                          "name": "initial_price",
                          "type": 174,
                          "typeName": "Price"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "RangeOrderUpdated",
                      "fields": [
                        {
                          "name": "lp",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "id",
                          "type": 9,
                          "typeName": "OrderId"
                        },
                        {
                          "name": "tick_range",
                          "type": 280,
                          "typeName": "core::ops::Range<Tick>"
                        },
                        {
                          "name": "size_change",
                          "type": 356,
                          "typeName": "Option<IncreaseOrDecrease<RangeOrderChange>>"
                        },
                        {
                          "name": "liquidity_total",
                          "type": 70,
                          "typeName": "Liquidity"
                        },
                        {
                          "name": "collected_fees",
                          "type": 283,
                          "typeName": "AssetAmounts"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Indicates the details of a change made to a range order. A single update extrinsic may",
                        "produce multiple of these events, particularly for example if the update changes the",
                        "price/range of the order."
                      ]
                    },
                    {
                      "name": "LimitOrderUpdated",
                      "fields": [
                        {
                          "name": "lp",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "side",
                          "type": 284,
                          "typeName": "Side"
                        },
                        {
                          "name": "id",
                          "type": 9,
                          "typeName": "OrderId"
                        },
                        {
                          "name": "tick",
                          "type": 134,
                          "typeName": "Tick"
                        },
                        {
                          "name": "sell_amount_change",
                          "type": 359,
                          "typeName": "Option<IncreaseOrDecrease<AssetAmount>>"
                        },
                        {
                          "name": "sell_amount_total",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "collected_fees",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "bought_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Indicates the details of a change made to a limit order. A single update extrinsic may",
                        "produce multiple of these events, particularly for example if the update changes the",
                        "price of the order."
                      ]
                    },
                    {
                      "name": "NetworkFeeTaken",
                      "fields": [
                        {
                          "name": "fee_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "AssetSwapped",
                      "fields": [
                        {
                          "name": "from",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "to",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "input_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        },
                        {
                          "name": "output_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "PoolFeeSet",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "fee_hundredth_pips",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "ScheduledLimitOrderUpdateDispatchSuccess",
                      "fields": [
                        {
                          "name": "lp",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "order_id",
                          "type": 9,
                          "typeName": "OrderId"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A scheduled update to a limit order succeeded."
                      ]
                    },
                    {
                      "name": "ScheduledLimitOrderUpdateDispatchFailure",
                      "fields": [
                        {
                          "name": "lp",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "order_id",
                          "type": 9,
                          "typeName": "OrderId"
                        },
                        {
                          "name": "error",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A scheduled update to a limit order failed."
                      ]
                    },
                    {
                      "name": "LimitOrderSetOrUpdateScheduled",
                      "fields": [
                        {
                          "name": "lp",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "order_id",
                          "type": 9,
                          "typeName": "OrderId"
                        },
                        {
                          "name": "dispatch_at",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A limit order set or update was scheduled."
                      ]
                    },
                    {
                      "name": "PriceImpactLimitSet",
                      "fields": [
                        {
                          "name": "asset_pair",
                          "type": 360,
                          "typeName": "AssetPair"
                        },
                        {
                          "name": "limit",
                          "type": 289,
                          "typeName": "Option<u32>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "The Price Impact limit has been set for a pool."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 356,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 357
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 357
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 357,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "IncreaseOrDecrease"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 358
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Increase",
                      "fields": [
                        {
                          "type": 358,
                          "typeName": "T"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Decrease",
                      "fields": [
                        {
                          "type": 358,
                          "typeName": "T"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 358,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "RangeOrderChange"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "liquidity",
                      "type": 70,
                      "typeName": "Liquidity"
                    },
                    {
                      "name": "amounts",
                      "type": 283,
                      "typeName": "AssetAmounts"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 359,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 286
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 286
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 360,
            "type": {
              "path": [
                "pallet_cf_pools",
                "AssetPair"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "assets",
                      "type": 361,
                      "typeName": "PoolPairsMap<Asset>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 361,
            "type": {
              "path": [
                "cf_amm",
                "common",
                "PoolPairsMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 233
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base",
                      "type": 233,
                      "typeName": "T"
                    },
                    {
                      "name": "quote",
                      "type": 233,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 362,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ChainStateUpdated",
                      "fields": [
                        {
                          "name": "new_chain_state",
                          "type": 292,
                          "typeName": "ChainState<T::TargetChain>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The tracked state of this chain has been updated."
                      ]
                    },
                    {
                      "name": "FeeMultiplierUpdated",
                      "fields": [
                        {
                          "name": "new_fee_multiplier",
                          "type": 141,
                          "typeName": "FixedU128"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The fee multiplier for this chain has been updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 363,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VaultActivationCompleted",
                      "index": 0,
                      "docs": [
                        "The vault for the request has rotated"
                      ]
                    },
                    {
                      "name": "VaultRotatedExternally",
                      "fields": [
                        {
                          "type": 153,
                          "typeName": "<<T::Chain as Chain>::ChainCrypto as ChainCrypto>::AggKey"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The vault's key has been rotated externally \\[new_public_key\\]"
                      ]
                    },
                    {
                      "name": "AwaitingGovernanceActivation",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "<<T::Chain as Chain>::ChainCrypto as ChainCrypto>::AggKey"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The new key has been generated, we must activate the new key on the external",
                        "chain via governance."
                      ]
                    },
                    {
                      "name": "ChainInitialized",
                      "index": 3
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 364,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionBroadcastRequest",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "nominee",
                          "type": 0,
                          "typeName": "T::ValidatorId"
                        },
                        {
                          "name": "transaction_payload",
                          "type": 328,
                          "typeName": "TransactionFor<T, I>"
                        },
                        {
                          "name": "transaction_out_id",
                          "type": 158,
                          "typeName": "TransactionOutIdFor<T, I>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A request to a specific authority to sign a transaction."
                      ]
                    },
                    {
                      "name": "BroadcastRetryScheduled",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "retry_block",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A failed broadcast has been scheduled for retry."
                      ]
                    },
                    {
                      "name": "BroadcastTimeout",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A broadcast has timed out."
                      ]
                    },
                    {
                      "name": "BroadcastAborted",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A broadcast has been aborted after all authorities have failed to broadcast it."
                      ]
                    },
                    {
                      "name": "BroadcastSuccess",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "transaction_out_id",
                          "type": 158,
                          "typeName": "TransactionOutIdFor<T, I>"
                        },
                        {
                          "name": "transaction_ref",
                          "type": 10,
                          "typeName": "TransactionRefFor<T, I>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A broadcast has successfully been completed."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureInvalid",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A broadcast's threshold signature is invalid, we will attempt to re-sign it."
                      ]
                    },
                    {
                      "name": "BroadcastCallbackExecuted",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "result",
                          "type": 324,
                          "typeName": "DispatchResult"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A signature accepted event on the target chain has been witnessed and the callback was",
                        "executed."
                      ]
                    },
                    {
                      "name": "TransactionFeeDeficitRecorded",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 31,
                          "typeName": "SignerIdFor<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "ChainAmountFor<T, I>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The fee paid for broadcasting a transaction has been recorded."
                      ]
                    },
                    {
                      "name": "TransactionFeeDeficitRefused",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 31,
                          "typeName": "SignerIdFor<T, I>"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The fee paid for broadcasting a transaction has been refused."
                      ]
                    },
                    {
                      "name": "CallResigned",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A Call has been re-threshold-signed, and its signature data is inserted into storage."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 365,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DepositFinalised",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "ingress_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "action",
                          "type": 341,
                          "typeName": "DepositAction<T::AccountId>"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AssetEgressStatusChanged",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "disabled",
                          "type": 28,
                          "typeName": "bool"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "CcmBroadcastRequested",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "CcmEgressInvalid",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "error",
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "DepositFetchesScheduled",
                      "fields": [
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "BatchBroadcastRequested",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "egress_ids",
                          "type": 342,
                          "typeName": "Vec<EgressId>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "MinimumDepositSet",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "minimum_deposit",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "DepositIgnored",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "reason",
                          "type": 343,
                          "typeName": "DepositIgnoredReason"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The deposits was rejected because the amount was below the minimum allowed."
                      ]
                    },
                    {
                      "name": "TransferFallbackRequested",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "destination_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "DepositWitnessRejected",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 23,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "deposit_witness",
                          "type": 301,
                          "typeName": "DepositWitness<T::TargetChain>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "The deposit witness was rejected."
                      ]
                    },
                    {
                      "name": "CcmBroadcastFailed",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A CCM has failed to broadcast."
                      ]
                    },
                    {
                      "name": "FailedForeignChainCallResigned",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        },
                        {
                          "name": "threshold_signature_id",
                          "type": 4,
                          "typeName": "ThresholdSignatureRequestId"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A failed CCM call has been re-threshold-signed for the current epoch."
                      ]
                    },
                    {
                      "name": "FailedForeignChainCallExpired",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A failed CCM has been in the system storage for more than 1 epoch.",
                        "It's broadcast data has been cleaned from storage."
                      ]
                    },
                    {
                      "name": "UtxoConsolidation",
                      "fields": [
                        {
                          "name": "broadcast_id",
                          "type": 4,
                          "typeName": "BroadcastId"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "FailedToBuildAllBatchCall",
                      "fields": [
                        {
                          "name": "error",
                          "type": 344,
                          "typeName": "AllBatchError"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "ChannelOpeningFeePaid",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "ChannelOpeningFeeSet",
                      "fields": [
                        {
                          "name": "fee",
                          "type": 70,
                          "typeName": "T::Amount"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "DepositBoosted",
                      "fields": [
                        {
                          "name": "deposit_address",
                          "type": 31,
                          "typeName": "TargetChainAccount<T, I>"
                        },
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amounts",
                          "type": 345,
                          "typeName": "BTreeMap<BoostPoolTier, TargetChainAmount<T, I>>"
                        },
                        {
                          "name": "deposit_details",
                          "type": 5,
                          "typeName": "<T::TargetChain as Chain>::DepositDetails"
                        },
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        },
                        {
                          "name": "ingress_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "boost_fee",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "action",
                          "type": 341,
                          "typeName": "DepositAction<T::AccountId>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "BoostFundsAdded",
                      "fields": [
                        {
                          "name": "booster_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "boost_pool",
                          "type": 306,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "StoppedBoosting",
                      "fields": [
                        {
                          "name": "booster_id",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "boost_pool",
                          "type": 306,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        },
                        {
                          "name": "unlocked_amount",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "pending_boosts",
                          "type": 348,
                          "typeName": "BTreeSet<PrewitnessedDepositId>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "InsufficientBoostLiquidity",
                      "fields": [
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "TargetChainAsset<T, I>"
                        },
                        {
                          "name": "amount_attempted",
                          "type": 70,
                          "typeName": "TargetChainAmount<T, I>"
                        },
                        {
                          "name": "channel_id",
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "BoostPoolCreated",
                      "fields": [
                        {
                          "name": "boost_pool",
                          "type": 306,
                          "typeName": "BoostPoolId<T::TargetChain>"
                        }
                      ],
                      "index": 21
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 366,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Finalization",
                      "index": 1
                    },
                    {
                      "name": "Initialization",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 367,
            "type": {
              "def": {
                "sequence": {
                  "type": 10
                }
              }
            }
          },
          {
            "id": 368,
            "type": {
              "def": {
                "sequence": {
                  "type": 168
                }
              }
            }
          },
          {
            "id": 369,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 216,
                      "typeName": "codec::Compact<u32>"
                    },
                    {
                      "name": "spec_name",
                      "type": 370,
                      "typeName": "sp_runtime::RuntimeString"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 370,
            "type": {
              "def": {
                "primitive": "str"
              }
            }
          },
          {
            "id": 371,
            "type": {
              "path": [
                "frame_system",
                "CodeUpgradeAuthorization"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": 10,
                      "typeName": "T::Hash"
                    },
                    {
                      "name": "check_version",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 372,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 7,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_block",
                      "type": 7,
                      "typeName": "Weight"
                    },
                    {
                      "name": "per_class",
                      "type": 373,
                      "typeName": "PerDispatchClass<WeightsPerClass>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 373,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 374
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 374,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 374,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 374,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 374,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 7,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 375,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "max_total",
                      "type": 375,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "reserved",
                      "type": 375,
                      "typeName": "Option<Weight>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 375,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 7
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 7
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 376,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 377,
                      "typeName": "PerDispatchClass<u32>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 377,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 378,
            "type": {
              "path": [
                "sp_weights",
                "RuntimeDbWeight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 9,
                      "typeName": "u64"
                    },
                    {
                      "name": "write",
                      "type": 9,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 379,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 370,
                      "typeName": "RuntimeString"
                    },
                    {
                      "name": "impl_name",
                      "type": 370,
                      "typeName": "RuntimeString"
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "apis",
                      "type": 380,
                      "typeName": "ApisVec"
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "state_version",
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 380,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 381
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 381
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 381,
            "type": {
              "def": {
                "sequence": {
                  "type": 382
                }
              }
            }
          },
          {
            "id": 382,
            "type": {
              "def": {
                "tuple": [
                  383,
                  4
                ]
              }
            }
          },
          {
            "id": 383,
            "type": {
              "def": {
                "array": {
                  "len": 8,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 384,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    },
                    {
                      "name": "NothingAuthorized",
                      "index": 6,
                      "docs": [
                        "No upgrade authorized."
                      ]
                    },
                    {
                      "name": "Unauthorized",
                      "index": 7,
                      "docs": [
                        "The submitted code is not authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 385,
            "type": {
              "path": [
                "cf_primitives",
                "NetworkEnvironment"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Mainnet",
                      "index": 0
                    },
                    {
                      "name": "Testnet",
                      "index": 1
                    },
                    {
                      "name": "Development",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 386,
            "type": {
              "path": [
                "pallet_cf_environment",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EthAddressNotUpdateable",
                      "index": 0,
                      "docs": [
                        "Eth is not an Erc20 token, so its address can't be updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 387,
            "type": {
              "path": [
                "pallet_cf_flip",
                "FlipAccount"
              ],
              "params": [
                {
                  "name": "Amount",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "balance",
                      "type": 70,
                      "typeName": "Amount"
                    },
                    {
                      "name": "bond",
                      "type": 70,
                      "typeName": "Amount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 388,
            "type": {
              "path": [
                "pallet_cf_flip",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientLiquidity",
                      "index": 0,
                      "docs": [
                        "Not enough liquid funds."
                      ]
                    },
                    {
                      "name": "InsufficientReserves",
                      "index": 1,
                      "docs": [
                        "Not enough reserves."
                      ]
                    },
                    {
                      "name": "NoPendingRedemptionForThisID",
                      "index": 2,
                      "docs": [
                        "No pending redemption for this ID."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 389,
            "type": {
              "path": [
                "pallet_cf_emissions",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "index": 0,
                      "docs": [
                        "Emissions calculation resulted in overflow."
                      ]
                    },
                    {
                      "name": "InvalidPercentage",
                      "index": 1,
                      "docs": [
                        "Invalid percentage"
                      ]
                    },
                    {
                      "name": "FlipBalanceBelowBurnThreshold",
                      "index": 2,
                      "docs": [
                        "The Flip balance was below the burn threshold."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 390,
            "type": {
              "path": [
                "pallet_cf_funding",
                "PendingRedemptionInfo"
              ],
              "params": [
                {
                  "name": "FlipBalance",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 70,
                      "typeName": "FlipBalance"
                    },
                    {
                      "name": "restricted",
                      "type": 70,
                      "typeName": "FlipBalance"
                    },
                    {
                      "name": "redeem_address",
                      "type": 31,
                      "typeName": "EthereumAddress"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 391,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 31
                },
                {
                  "name": "V",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 392
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 392,
            "type": {
              "def": {
                "sequence": {
                  "type": 393
                }
              }
            }
          },
          {
            "id": 393,
            "type": {
              "def": {
                "tuple": [
                  31,
                  70
                ]
              }
            }
          },
          {
            "id": 394,
            "type": {
              "path": [
                "pallet_cf_funding",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NoPendingRedemption",
                      "index": 0,
                      "docs": [
                        "An invalid redemption has been witnessed: the account has no pending redemptions."
                      ]
                    },
                    {
                      "name": "PendingRedemption",
                      "index": 1,
                      "docs": [
                        "The redeemer tried to redeem despite having a redemption already pending."
                      ]
                    },
                    {
                      "name": "BelowMinimumFunding",
                      "index": 2,
                      "docs": [
                        "When requesting a redemption, you must not have an amount below the minimum."
                      ]
                    },
                    {
                      "name": "InsufficientUnrestrictedFunds",
                      "index": 3,
                      "docs": [
                        "There are not enough unrestricted funds to process the redemption."
                      ]
                    },
                    {
                      "name": "InvalidMinimumFundingUpdate",
                      "index": 4,
                      "docs": [
                        "Minimum funding amount must be greater than the redemption tax."
                      ]
                    },
                    {
                      "name": "InvalidRedemptionTaxUpdate",
                      "index": 5,
                      "docs": [
                        "Redemption tax must be less than the minimum funding amount."
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "index": 6,
                      "docs": [
                        "The account has insufficient funds to pay for the redemption."
                      ]
                    },
                    {
                      "name": "AccountAlreadyBound",
                      "index": 7,
                      "docs": [
                        "The account is already bound to an address."
                      ]
                    },
                    {
                      "name": "AccountBindingRestrictionViolated",
                      "index": 8,
                      "docs": [
                        "The account is bound to a withdrawal address."
                      ]
                    },
                    {
                      "name": "RedeemDisabled",
                      "index": 9,
                      "docs": [
                        "Redeem is disabled due to Safe Mode."
                      ]
                    },
                    {
                      "name": "ExecutorBindingRestrictionViolated",
                      "index": 10,
                      "docs": [
                        "The executor for this account is bound to another address."
                      ]
                    },
                    {
                      "name": "ExecutorAddressAlreadyBound",
                      "index": 11,
                      "docs": [
                        "The account is already bound to an executor address."
                      ]
                    },
                    {
                      "name": "AccountMustBeUnregistered",
                      "index": 12,
                      "docs": [
                        "The account cannot be reaped before it is unregstered."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 395,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 78
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 396
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 396,
            "type": {
              "def": {
                "sequence": {
                  "type": 397
                }
              }
            }
          },
          {
            "id": 397,
            "type": {
              "def": {
                "tuple": [
                  0,
                  78
                ]
              }
            }
          },
          {
            "id": 398,
            "type": {
              "path": [
                "pallet_cf_account_roles",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnknownAccount",
                      "index": 0,
                      "docs": [
                        "The account has never been created."
                      ]
                    },
                    {
                      "name": "AccountRoleAlreadyRegistered",
                      "index": 1,
                      "docs": [
                        "The account already has a registered role."
                      ]
                    },
                    {
                      "name": "InvalidCharactersInName",
                      "index": 2,
                      "docs": [
                        "Invalid characters in the name."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 399,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "index": 0
                    },
                    {
                      "name": "V2",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 400,
            "type": {
              "def": {
                "tuple": [
                  4,
                  81
                ]
              }
            }
          },
          {
            "id": 401,
            "type": {
              "def": {
                "sequence": {
                  "type": 402
                }
              }
            }
          },
          {
            "id": 402,
            "type": {
              "def": {
                "tuple": [
                  4,
                  82,
                  81
                ]
              }
            }
          },
          {
            "id": 403,
            "type": {
              "def": {
                "sequence": {
                  "type": 400
                }
              }
            }
          },
          {
            "id": 404,
            "type": {
              "path": [
                "pallet_cf_witnesser",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AuthorityIndexOutOfBounds",
                      "index": 0,
                      "docs": [
                        "CRITICAL: The authority index is out of bounds. This should never happen."
                      ]
                    },
                    {
                      "name": "UnauthorisedWitness",
                      "index": 1,
                      "docs": [
                        "Witness is not an authority."
                      ]
                    },
                    {
                      "name": "DuplicateWitness",
                      "index": 2,
                      "docs": [
                        "A witness vote was cast twice by the same authority."
                      ]
                    },
                    {
                      "name": "EpochExpired",
                      "index": 3,
                      "docs": [
                        "The epoch has expired"
                      ]
                    },
                    {
                      "name": "InvalidEpoch",
                      "index": 4,
                      "docs": [
                        "Invalid epoch"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 405,
            "type": {
              "def": {
                "tuple": [
                  4,
                  0
                ]
              }
            }
          },
          {
            "id": 406,
            "type": {
              "def": {
                "tuple": [
                  109,
                  110,
                  70
                ]
              }
            }
          },
          {
            "id": 407,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 408
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 408,
            "type": {
              "def": {
                "sequence": {
                  "type": 409
                }
              }
            }
          },
          {
            "id": 409,
            "type": {
              "def": {
                "tuple": [
                  0,
                  70
                ]
              }
            }
          },
          {
            "id": 410,
            "type": {
              "path": [
                "pallet_cf_validator",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidEpochDuration",
                      "index": 0,
                      "docs": [
                        "Epoch duration supplied is invalid."
                      ]
                    },
                    {
                      "name": "RotationInProgress",
                      "index": 1,
                      "docs": [
                        "A rotation is in progress."
                      ]
                    },
                    {
                      "name": "AccountPeerMappingOverlap",
                      "index": 2,
                      "docs": [
                        "Validator Peer mapping overlaps with an existing mapping."
                      ]
                    },
                    {
                      "name": "InvalidAccountPeerMappingSignature",
                      "index": 3,
                      "docs": [
                        "Invalid signature."
                      ]
                    },
                    {
                      "name": "InvalidRedemptionPeriod",
                      "index": 4,
                      "docs": [
                        "Invalid redemption period."
                      ]
                    },
                    {
                      "name": "InvalidAuthoritySetMinSize",
                      "index": 5,
                      "docs": [
                        "Invalid minimum authority set size."
                      ]
                    },
                    {
                      "name": "InvalidAuctionParameters",
                      "index": 6,
                      "docs": [
                        "Auction parameters are invalid."
                      ]
                    },
                    {
                      "name": "InconsistentRanges",
                      "index": 7,
                      "docs": [
                        "The dynamic set size ranges are inconsistent."
                      ]
                    },
                    {
                      "name": "NotEnoughBidders",
                      "index": 8,
                      "docs": [
                        "Not enough bidders were available to resolve the auction."
                      ]
                    },
                    {
                      "name": "NotEnoughFunds",
                      "index": 9,
                      "docs": [
                        "Not enough funds to register as a validator."
                      ]
                    },
                    {
                      "name": "RotationsDisabled",
                      "index": 10,
                      "docs": [
                        "Rotations are currently disabled through SafeMode."
                      ]
                    },
                    {
                      "name": "StillKeyHolder",
                      "index": 11,
                      "docs": [
                        "Validators cannot deregister until they are no longer key holders."
                      ]
                    },
                    {
                      "name": "StillBidding",
                      "index": 12,
                      "docs": [
                        "Validators cannot deregister until they stop bidding in the auction."
                      ]
                    },
                    {
                      "name": "StartBiddingDisabled",
                      "index": 13,
                      "docs": [
                        "Start Bidding is disabled due to Safe Mode."
                      ]
                    },
                    {
                      "name": "StopBiddingDisabled",
                      "index": 14,
                      "docs": [
                        "Stop Bidding is disabled due to Safe Mode."
                      ]
                    },
                    {
                      "name": "AlreadyNotBidding",
                      "index": 15,
                      "docs": [
                        "Can't stop bidding an account if it's already not bidding."
                      ]
                    },
                    {
                      "name": "AlreadyBidding",
                      "index": 16,
                      "docs": [
                        "Can only start bidding if not already bidding."
                      ]
                    },
                    {
                      "name": "AuctionPhase",
                      "index": 17,
                      "docs": [
                        "We are in the auction phase"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 411,
            "type": {
              "def": {
                "sequence": {
                  "type": 412
                }
              }
            }
          },
          {
            "id": 412,
            "type": {
              "def": {
                "tuple": [
                  0,
                  105
                ]
              }
            }
          },
          {
            "id": 413,
            "type": {
              "def": {
                "tuple": [
                  414,
                  11
                ]
              }
            }
          },
          {
            "id": 414,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 15,
                      "typeName": "[u8; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 415,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidProof",
                      "index": 0,
                      "docs": [
                        "Invalid ownership proof."
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "index": 1,
                      "docs": [
                        "No associated validator ID for account."
                      ]
                    },
                    {
                      "name": "DuplicatedKey",
                      "index": 2,
                      "docs": [
                        "Registered duplicate key."
                      ]
                    },
                    {
                      "name": "NoKeys",
                      "index": 3,
                      "docs": [
                        "No keys are associated with this account."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "index": 4,
                      "docs": [
                        "Key setting account is not live, so it's impossible to associate keys."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the session pallet."
              ]
            }
          },
          {
            "id": 416,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 106
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 417,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 417,
            "type": {
              "def": {
                "sequence": {
                  "type": 106
                }
              }
            }
          },
          {
            "id": 418,
            "type": {
              "path": [
                "sp_consensus_slots",
                "Slot"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 9,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 419,
            "type": {
              "path": [
                "pallet_grandpa",
                "StoredState"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Live",
                      "index": 0
                    },
                    {
                      "name": "PendingPause",
                      "fields": [
                        {
                          "name": "scheduled_at",
                          "type": 4,
                          "typeName": "N"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "N"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Paused",
                      "index": 2
                    },
                    {
                      "name": "PendingResume",
                      "fields": [
                        {
                          "name": "scheduled_at",
                          "type": 4,
                          "typeName": "N"
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "N"
                        }
                      ],
                      "index": 3
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 420,
            "type": {
              "path": [
                "pallet_grandpa",
                "StoredPendingChange"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                },
                {
                  "name": "Limit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "scheduled_at",
                      "type": 4,
                      "typeName": "N"
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "N"
                    },
                    {
                      "name": "next_authorities",
                      "type": 421,
                      "typeName": "BoundedAuthorityList<Limit>"
                    },
                    {
                      "name": "forced",
                      "type": 289,
                      "typeName": "Option<N>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 421,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 313
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 312,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 422,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PauseFailed",
                      "index": 0,
                      "docs": [
                        "Attempt to signal GRANDPA pause when the authority set isn't live",
                        "(either paused or already pending pause)."
                      ]
                    },
                    {
                      "name": "ResumeFailed",
                      "index": 1,
                      "docs": [
                        "Attempt to signal GRANDPA resume when the authority set isn't paused",
                        "(either live or already pending resume)."
                      ]
                    },
                    {
                      "name": "ChangePending",
                      "index": 2,
                      "docs": [
                        "Attempt to signal GRANDPA change with one already pending."
                      ]
                    },
                    {
                      "name": "TooSoon",
                      "index": 3,
                      "docs": [
                        "Cannot signal forced change so soon after last."
                      ]
                    },
                    {
                      "name": "InvalidKeyOwnershipProof",
                      "index": 4,
                      "docs": [
                        "A key ownership proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "InvalidEquivocationProof",
                      "index": 5,
                      "docs": [
                        "An equivocation proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "DuplicateOffenceReport",
                      "index": 6,
                      "docs": [
                        "A given equivocation report is valid but already previously reported."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 423,
            "type": {
              "path": [
                "pallet_cf_governance",
                "pallet",
                "Proposal"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "call",
                      "type": 11,
                      "typeName": "OpaqueCall"
                    },
                    {
                      "name": "approved",
                      "type": 127,
                      "typeName": "BTreeSet<AccountId>"
                    },
                    {
                      "name": "execution",
                      "type": 126,
                      "typeName": "ExecutionMode"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 424,
            "type": {
              "def": {
                "sequence": {
                  "type": 425
                }
              }
            }
          },
          {
            "id": 425,
            "type": {
              "path": [
                "pallet_cf_governance",
                "pallet",
                "ActiveProposal"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proposal_id",
                      "type": 4,
                      "typeName": "ProposalId"
                    },
                    {
                      "name": "expiry_time",
                      "type": 9,
                      "typeName": "Timestamp"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 426,
            "type": {
              "def": {
                "sequence": {
                  "type": 427
                }
              }
            }
          },
          {
            "id": 427,
            "type": {
              "def": {
                "tuple": [
                  11,
                  4
                ]
              }
            }
          },
          {
            "id": 428,
            "type": {
              "path": [
                "pallet_cf_governance",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyApproved",
                      "index": 0,
                      "docs": [
                        "An account already approved a proposal"
                      ]
                    },
                    {
                      "name": "NotMember",
                      "index": 1,
                      "docs": [
                        "The signer of an extrinsic is no member of the current governance"
                      ]
                    },
                    {
                      "name": "ProposalNotFound",
                      "index": 2,
                      "docs": [
                        "The proposal was not found - it may have expired or it may already be executed"
                      ]
                    },
                    {
                      "name": "DecodeOfCallFailed",
                      "index": 3,
                      "docs": [
                        "Decode of call failed"
                      ]
                    },
                    {
                      "name": "DecodeMembersLenFailed",
                      "index": 4,
                      "docs": [
                        "Decoding Members len failed."
                      ]
                    },
                    {
                      "name": "UpgradeConditionsNotMet",
                      "index": 5,
                      "docs": [
                        "A runtime upgrade has failed because the upgrade conditions were not satisfied"
                      ]
                    },
                    {
                      "name": "CallHashNotWhitelisted",
                      "index": 6,
                      "docs": [
                        "The call hash was not whitelisted"
                      ]
                    },
                    {
                      "name": "NotEnoughAuthoritiesCfesAtTargetVersion",
                      "index": 7,
                      "docs": [
                        "Insufficient number of CFEs are at the target version to receive the runtime upgrade."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 429,
            "type": {
              "def": {
                "tuple": [
                  4,
                  430
                ]
              }
            }
          },
          {
            "id": 430,
            "type": {
              "def": {
                "tuple": [
                  74,
                  11
                ]
              }
            }
          },
          {
            "id": 431,
            "type": {
              "def": {
                "tuple": [
                  4,
                  31
                ]
              }
            }
          },
          {
            "id": 432,
            "type": {
              "path": [
                "pallet_cf_tokenholder_governance",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyBacked",
                      "index": 0,
                      "docs": [
                        "Proposal is already backed by the same account."
                      ]
                    },
                    {
                      "name": "ProposalDoesntExist",
                      "index": 1,
                      "docs": [
                        "Proposal doesn't exist."
                      ]
                    },
                    {
                      "name": "IncompatibleGovkey",
                      "index": 2,
                      "docs": [
                        "The proposed governance key is incompatible with the proposed chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 433,
            "type": {
              "def": {
                "tuple": [
                  134,
                  4
                ]
              }
            }
          },
          {
            "id": 434,
            "type": {
              "path": [
                "pallet_cf_reputation",
                "reputation",
                "ReputationTracker"
              ],
              "params": [
                {
                  "name": "P",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "online_blocks",
                      "type": 4,
                      "typeName": "P::BlockNumber"
                    },
                    {
                      "name": "reputation_points",
                      "type": 134,
                      "typeName": "ReputationPoints"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 435,
            "type": {
              "def": {
                "sequence": {
                  "type": 405
                }
              }
            }
          },
          {
            "id": 436,
            "type": {
              "def": {
                "tuple": [
                  134,
                  134
                ]
              }
            }
          },
          {
            "id": 437,
            "type": {
              "path": [
                "pallet_cf_reputation",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidAccrualRatio",
                      "index": 0,
                      "docs": [
                        "Tried to set the accrual ration to something invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 438,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StaleDataSubmitted",
                      "index": 0,
                      "docs": [
                        "The submitted data is too old."
                      ]
                    },
                    {
                      "name": "InvalidBlockHeight",
                      "index": 1,
                      "docs": [
                        "Block height must be a multiple of the witness period"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 439,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StaleDataSubmitted",
                      "index": 0,
                      "docs": [
                        "The submitted data is too old."
                      ]
                    },
                    {
                      "name": "InvalidBlockHeight",
                      "index": 1,
                      "docs": [
                        "Block height must be a multiple of the witness period"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 440,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StaleDataSubmitted",
                      "index": 0,
                      "docs": [
                        "The submitted data is too old."
                      ]
                    },
                    {
                      "name": "InvalidBlockHeight",
                      "index": 1,
                      "docs": [
                        "Block height must be a multiple of the witness period"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 441,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "VaultActivationStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AwaitingActivation",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Complete",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 442,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NoActiveRotation",
                      "index": 0,
                      "docs": [
                        "There is currently no vault rotation in progress for this chain."
                      ]
                    },
                    {
                      "name": "InvalidRotationStatus",
                      "index": 1,
                      "docs": [
                        "The requested call is invalid based on the current rotation state."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 443,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "VaultActivationStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AwaitingActivation",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Complete",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 444,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NoActiveRotation",
                      "index": 0,
                      "docs": [
                        "There is currently no vault rotation in progress for this chain."
                      ]
                    },
                    {
                      "name": "InvalidRotationStatus",
                      "index": 1,
                      "docs": [
                        "The requested call is invalid based on the current rotation state."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 445,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "VaultActivationStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AwaitingActivation",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Complete",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 446,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NoActiveRotation",
                      "index": 0,
                      "docs": [
                        "There is currently no vault rotation in progress for this chain."
                      ]
                    },
                    {
                      "name": "InvalidRotationStatus",
                      "index": 1,
                      "docs": [
                        "The requested call is invalid based on the current rotation state."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 447,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "CeremonyContext"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_context",
                      "type": 448,
                      "typeName": "RequestContext<T, I>"
                    },
                    {
                      "name": "remaining_respondents",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "blame_counts",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    },
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "epoch",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "key",
                      "type": 153,
                      "typeName": "<T::TargetChainCrypto as ChainCrypto>::AggKey"
                    },
                    {
                      "name": "threshold_ceremony_type",
                      "type": 452,
                      "typeName": "ThresholdCeremonyType"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 448,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "RequestContext"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_id",
                      "type": 4,
                      "typeName": "RequestId"
                    },
                    {
                      "name": "attempt_count",
                      "type": 4,
                      "typeName": "AttemptCount"
                    },
                    {
                      "name": "payload",
                      "type": 10,
                      "typeName": "PayloadFor<T, I>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 449,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 450
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 450,
            "type": {
              "def": {
                "sequence": {
                  "type": 451
                }
              }
            }
          },
          {
            "id": 451,
            "type": {
              "def": {
                "tuple": [
                  0,
                  4
                ]
              }
            }
          },
          {
            "id": 452,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "ThresholdCeremonyType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Standard",
                      "index": 0
                    },
                    {
                      "name": "KeygenVerification",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 453,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "RequestInstruction"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_context",
                      "type": 448,
                      "typeName": "RequestContext<T, I>"
                    },
                    {
                      "name": "request_type",
                      "type": 454,
                      "typeName": "RequestType<<T::TargetChainCrypto as ChainCrypto>::AggKey, BTreeSet<\nT::ValidatorId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 454,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "RequestType"
              ],
              "params": [
                {
                  "name": "Key",
                  "type": 153
                },
                {
                  "name": "Participants",
                  "type": 127
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SpecificKey",
                      "fields": [
                        {
                          "type": 153,
                          "typeName": "Key"
                        },
                        {
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "KeygenVerification",
                      "fields": [
                        {
                          "name": "key",
                          "type": 153,
                          "typeName": "Key"
                        },
                        {
                          "name": "epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "participants",
                          "type": 127,
                          "typeName": "Participants"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 455,
            "type": {
              "path": [
                "cf_traits",
                "async_result",
                "AsyncResult"
              ],
              "params": [
                {
                  "name": "R",
                  "type": 456
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ready",
                      "fields": [
                        {
                          "type": 456,
                          "typeName": "R"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Pending",
                      "index": 1
                    },
                    {
                      "name": "Void",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 456,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 158
                },
                {
                  "name": "E",
                  "type": 128
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 158
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 128
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 457,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "KeyRotationStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AwaitingKeygen",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "keygen_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "response_status",
                          "type": 458,
                          "typeName": "KeygenResponseStatus<T, I>"
                        },
                        {
                          "name": "new_epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AwaitingKeygenVerification",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "KeygenVerificationComplete",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AwaitingKeyHandover",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "response_status",
                          "type": 462,
                          "typeName": "KeyHandoverResponseStatus<T, I>"
                        },
                        {
                          "name": "receiving_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "next_epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "AwaitingKeyHandoverVerification",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "KeyHandoverComplete",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "AwaitingActivationSignatures",
                      "fields": [
                        {
                          "name": "request_ids",
                          "type": 231,
                          "typeName": "Vec<RequestId>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Complete",
                      "index": 7
                    },
                    {
                      "name": "Failed",
                      "fields": [
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "KeyHandoverFailed",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        }
                      ],
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 458,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "response_status",
                "ResponseStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "SuccessVoters",
                  "type": null
                },
                {
                  "name": "FailureVoters",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "remaining_candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "success_votes",
                      "type": 459,
                      "typeName": "BTreeMap<AggKeyFor<T, I>, AuthorityCount>"
                    },
                    {
                      "name": "blame_votes",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 459,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 153
                },
                {
                  "name": "V",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 460
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 460,
            "type": {
              "def": {
                "sequence": {
                  "type": 461
                }
              }
            }
          },
          {
            "id": 461,
            "type": {
              "def": {
                "tuple": [
                  153,
                  4
                ]
              }
            }
          },
          {
            "id": 462,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "response_status",
                "ResponseStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "SuccessVoters",
                  "type": null
                },
                {
                  "name": "FailureVoters",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "remaining_candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "success_votes",
                      "type": 459,
                      "typeName": "BTreeMap<AggKeyFor<T, I>, AuthorityCount>"
                    },
                    {
                      "name": "blame_votes",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 463,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidThresholdSignatureCeremonyId",
                      "index": 0,
                      "docs": [
                        "The provided ceremony id is invalid."
                      ]
                    },
                    {
                      "name": "InvalidKeygenCeremonyId",
                      "index": 1,
                      "docs": [
                        "An invalid keygen ceremony id"
                      ]
                    },
                    {
                      "name": "InvalidThresholdSignature",
                      "index": 2,
                      "docs": [
                        "The provided threshold signature is invalid."
                      ]
                    },
                    {
                      "name": "InvalidThresholdSignatureRespondent",
                      "index": 3,
                      "docs": [
                        "The reporting party is not one of the signatories for this ceremony, or has already",
                        "responded."
                      ]
                    },
                    {
                      "name": "InvalidKeygenRespondent",
                      "index": 4,
                      "docs": [
                        "An authority sent a response for a ceremony in which they weren't involved, or to which",
                        "they have already submitted a response."
                      ]
                    },
                    {
                      "name": "InvalidRequestId",
                      "index": 5,
                      "docs": [
                        "The request Id is stale or not yet valid."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureUnavailable",
                      "index": 6,
                      "docs": [
                        "There is no threshold signature available"
                      ]
                    },
                    {
                      "name": "NoActiveRotation",
                      "index": 7,
                      "docs": [
                        "There is currently no rotation in progress for this key."
                      ]
                    },
                    {
                      "name": "InvalidRotationStatus",
                      "index": 8,
                      "docs": [
                        "The requested call is invalid based on the current rotation state."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 464,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "CeremonyContext"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_context",
                      "type": 465,
                      "typeName": "RequestContext<T, I>"
                    },
                    {
                      "name": "remaining_respondents",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "blame_counts",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    },
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "epoch",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "key",
                      "type": 34,
                      "typeName": "<T::TargetChainCrypto as ChainCrypto>::AggKey"
                    },
                    {
                      "name": "threshold_ceremony_type",
                      "type": 452,
                      "typeName": "ThresholdCeremonyType"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 465,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "RequestContext"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_id",
                      "type": 4,
                      "typeName": "RequestId"
                    },
                    {
                      "name": "attempt_count",
                      "type": 4,
                      "typeName": "AttemptCount"
                    },
                    {
                      "name": "payload",
                      "type": 202,
                      "typeName": "PayloadFor<T, I>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 466,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "RequestInstruction"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_context",
                      "type": 465,
                      "typeName": "RequestContext<T, I>"
                    },
                    {
                      "name": "request_type",
                      "type": 467,
                      "typeName": "RequestType<<T::TargetChainCrypto as ChainCrypto>::AggKey, BTreeSet<\nT::ValidatorId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 467,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "RequestType"
              ],
              "params": [
                {
                  "name": "Key",
                  "type": 34
                },
                {
                  "name": "Participants",
                  "type": 127
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SpecificKey",
                      "fields": [
                        {
                          "type": 34,
                          "typeName": "Key"
                        },
                        {
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "KeygenVerification",
                      "fields": [
                        {
                          "name": "key",
                          "type": 34,
                          "typeName": "Key"
                        },
                        {
                          "name": "epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "participants",
                          "type": 127,
                          "typeName": "Participants"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 468,
            "type": {
              "path": [
                "cf_traits",
                "async_result",
                "AsyncResult"
              ],
              "params": [
                {
                  "name": "R",
                  "type": 469
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ready",
                      "fields": [
                        {
                          "type": 469,
                          "typeName": "R"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Pending",
                      "index": 1
                    },
                    {
                      "name": "Void",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 469,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 161
                },
                {
                  "name": "E",
                  "type": 128
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 161
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 128
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 470,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "KeyRotationStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AwaitingKeygen",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "keygen_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "response_status",
                          "type": 471,
                          "typeName": "KeygenResponseStatus<T, I>"
                        },
                        {
                          "name": "new_epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AwaitingKeygenVerification",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "KeygenVerificationComplete",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AwaitingKeyHandover",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "response_status",
                          "type": 475,
                          "typeName": "KeyHandoverResponseStatus<T, I>"
                        },
                        {
                          "name": "receiving_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "next_epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "AwaitingKeyHandoverVerification",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "KeyHandoverComplete",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "AwaitingActivationSignatures",
                      "fields": [
                        {
                          "name": "request_ids",
                          "type": 231,
                          "typeName": "Vec<RequestId>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Complete",
                      "index": 7
                    },
                    {
                      "name": "Failed",
                      "fields": [
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "KeyHandoverFailed",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 34,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        }
                      ],
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 471,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "response_status",
                "ResponseStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "SuccessVoters",
                  "type": null
                },
                {
                  "name": "FailureVoters",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "remaining_candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "success_votes",
                      "type": 472,
                      "typeName": "BTreeMap<AggKeyFor<T, I>, AuthorityCount>"
                    },
                    {
                      "name": "blame_votes",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 472,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 34
                },
                {
                  "name": "V",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 473
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 473,
            "type": {
              "def": {
                "sequence": {
                  "type": 474
                }
              }
            }
          },
          {
            "id": 474,
            "type": {
              "def": {
                "tuple": [
                  34,
                  4
                ]
              }
            }
          },
          {
            "id": 475,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "response_status",
                "ResponseStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "SuccessVoters",
                  "type": null
                },
                {
                  "name": "FailureVoters",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "remaining_candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "success_votes",
                      "type": 472,
                      "typeName": "BTreeMap<AggKeyFor<T, I>, AuthorityCount>"
                    },
                    {
                      "name": "blame_votes",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 476,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidThresholdSignatureCeremonyId",
                      "index": 0,
                      "docs": [
                        "The provided ceremony id is invalid."
                      ]
                    },
                    {
                      "name": "InvalidKeygenCeremonyId",
                      "index": 1,
                      "docs": [
                        "An invalid keygen ceremony id"
                      ]
                    },
                    {
                      "name": "InvalidThresholdSignature",
                      "index": 2,
                      "docs": [
                        "The provided threshold signature is invalid."
                      ]
                    },
                    {
                      "name": "InvalidThresholdSignatureRespondent",
                      "index": 3,
                      "docs": [
                        "The reporting party is not one of the signatories for this ceremony, or has already",
                        "responded."
                      ]
                    },
                    {
                      "name": "InvalidKeygenRespondent",
                      "index": 4,
                      "docs": [
                        "An authority sent a response for a ceremony in which they weren't involved, or to which",
                        "they have already submitted a response."
                      ]
                    },
                    {
                      "name": "InvalidRequestId",
                      "index": 5,
                      "docs": [
                        "The request Id is stale or not yet valid."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureUnavailable",
                      "index": 6,
                      "docs": [
                        "There is no threshold signature available"
                      ]
                    },
                    {
                      "name": "NoActiveRotation",
                      "index": 7,
                      "docs": [
                        "There is currently no rotation in progress for this key."
                      ]
                    },
                    {
                      "name": "InvalidRotationStatus",
                      "index": 8,
                      "docs": [
                        "The requested call is invalid based on the current rotation state."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 477,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "CeremonyContext"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_context",
                      "type": 478,
                      "typeName": "RequestContext<T, I>"
                    },
                    {
                      "name": "remaining_respondents",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "blame_counts",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    },
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "epoch",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "key",
                      "type": 90,
                      "typeName": "<T::TargetChainCrypto as ChainCrypto>::AggKey"
                    },
                    {
                      "name": "threshold_ceremony_type",
                      "type": 452,
                      "typeName": "ThresholdCeremonyType"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 478,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "RequestContext"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_id",
                      "type": 4,
                      "typeName": "RequestId"
                    },
                    {
                      "name": "attempt_count",
                      "type": 4,
                      "typeName": "AttemptCount"
                    },
                    {
                      "name": "payload",
                      "type": 221,
                      "typeName": "PayloadFor<T, I>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 479,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "RequestInstruction"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "request_context",
                      "type": 478,
                      "typeName": "RequestContext<T, I>"
                    },
                    {
                      "name": "request_type",
                      "type": 480,
                      "typeName": "RequestType<<T::TargetChainCrypto as ChainCrypto>::AggKey, BTreeSet<\nT::ValidatorId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 480,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "RequestType"
              ],
              "params": [
                {
                  "name": "Key",
                  "type": 90
                },
                {
                  "name": "Participants",
                  "type": 127
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SpecificKey",
                      "fields": [
                        {
                          "type": 90,
                          "typeName": "Key"
                        },
                        {
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "KeygenVerification",
                      "fields": [
                        {
                          "name": "key",
                          "type": 90,
                          "typeName": "Key"
                        },
                        {
                          "name": "epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "participants",
                          "type": 127,
                          "typeName": "Participants"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 481,
            "type": {
              "path": [
                "cf_traits",
                "async_result",
                "AsyncResult"
              ],
              "params": [
                {
                  "name": "R",
                  "type": 482
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ready",
                      "fields": [
                        {
                          "type": 482,
                          "typeName": "R"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Pending",
                      "index": 1
                    },
                    {
                      "name": "Void",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 482,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 165
                },
                {
                  "name": "E",
                  "type": 128
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 165
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 128
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 483,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "KeyRotationStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AwaitingKeygen",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "keygen_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "response_status",
                          "type": 484,
                          "typeName": "KeygenResponseStatus<T, I>"
                        },
                        {
                          "name": "new_epoch_index",
                          "type": 4,
                          "typeName": "EpochIndex"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "AwaitingKeygenVerification",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "KeygenVerificationComplete",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "AwaitingKeyHandover",
                      "fields": [
                        {
                          "name": "ceremony_id",
                          "type": 9,
                          "typeName": "CeremonyId"
                        },
                        {
                          "name": "response_status",
                          "type": 488,
                          "typeName": "KeyHandoverResponseStatus<T, I>"
                        },
                        {
                          "name": "receiving_participants",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        },
                        {
                          "name": "next_epoch",
                          "type": 4,
                          "typeName": "EpochIndex"
                        },
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "AwaitingKeyHandoverVerification",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "KeyHandoverComplete",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "AwaitingActivationSignatures",
                      "fields": [
                        {
                          "name": "request_ids",
                          "type": 231,
                          "typeName": "Vec<RequestId>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Complete",
                      "index": 7
                    },
                    {
                      "name": "Failed",
                      "fields": [
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "KeyHandoverFailed",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 90,
                          "typeName": "AggKeyFor<T, I>"
                        },
                        {
                          "name": "offenders",
                          "type": 127,
                          "typeName": "BTreeSet<T::ValidatorId>"
                        }
                      ],
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 484,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "response_status",
                "ResponseStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "SuccessVoters",
                  "type": null
                },
                {
                  "name": "FailureVoters",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "remaining_candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "success_votes",
                      "type": 485,
                      "typeName": "BTreeMap<AggKeyFor<T, I>, AuthorityCount>"
                    },
                    {
                      "name": "blame_votes",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 485,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 90
                },
                {
                  "name": "V",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 486
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 486,
            "type": {
              "def": {
                "sequence": {
                  "type": 487
                }
              }
            }
          },
          {
            "id": 487,
            "type": {
              "def": {
                "tuple": [
                  90,
                  4
                ]
              }
            }
          },
          {
            "id": 488,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "response_status",
                "ResponseStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "SuccessVoters",
                  "type": null
                },
                {
                  "name": "FailureVoters",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "remaining_candidates",
                      "type": 127,
                      "typeName": "BTreeSet<T::ValidatorId>"
                    },
                    {
                      "name": "success_votes",
                      "type": 485,
                      "typeName": "BTreeMap<AggKeyFor<T, I>, AuthorityCount>"
                    },
                    {
                      "name": "blame_votes",
                      "type": 449,
                      "typeName": "BTreeMap<T::ValidatorId, AuthorityCount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 489,
            "type": {
              "path": [
                "pallet_cf_threshold_signature",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidThresholdSignatureCeremonyId",
                      "index": 0,
                      "docs": [
                        "The provided ceremony id is invalid."
                      ]
                    },
                    {
                      "name": "InvalidKeygenCeremonyId",
                      "index": 1,
                      "docs": [
                        "An invalid keygen ceremony id"
                      ]
                    },
                    {
                      "name": "InvalidThresholdSignature",
                      "index": 2,
                      "docs": [
                        "The provided threshold signature is invalid."
                      ]
                    },
                    {
                      "name": "InvalidThresholdSignatureRespondent",
                      "index": 3,
                      "docs": [
                        "The reporting party is not one of the signatories for this ceremony, or has already",
                        "responded."
                      ]
                    },
                    {
                      "name": "InvalidKeygenRespondent",
                      "index": 4,
                      "docs": [
                        "An authority sent a response for a ceremony in which they weren't involved, or to which",
                        "they have already submitted a response."
                      ]
                    },
                    {
                      "name": "InvalidRequestId",
                      "index": 5,
                      "docs": [
                        "The request Id is stale or not yet valid."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureUnavailable",
                      "index": 6,
                      "docs": [
                        "There is no threshold signature available"
                      ]
                    },
                    {
                      "name": "NoActiveRotation",
                      "index": 7,
                      "docs": [
                        "There is currently no rotation in progress for this key."
                      ]
                    },
                    {
                      "name": "InvalidRotationStatus",
                      "index": 8,
                      "docs": [
                        "The requested call is invalid based on the current rotation state."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 490,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "BroadcastData"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "transaction_payload",
                      "type": 328,
                      "typeName": "TransactionFor<T, I>"
                    },
                    {
                      "name": "threshold_signature_payload",
                      "type": 10,
                      "typeName": "PayloadFor<T, I>"
                    },
                    {
                      "name": "transaction_out_id",
                      "type": 158,
                      "typeName": "TransactionOutIdFor<T, I>"
                    },
                    {
                      "name": "nominee",
                      "type": 491,
                      "typeName": "Option<T::ValidatorId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 491,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 0
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 492,
            "type": {
              "def": {
                "tuple": [
                  4,
                  9
                ]
              }
            }
          },
          {
            "id": 493,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 231
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 494,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 405
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 435
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 495,
            "type": {
              "def": {
                "tuple": [
                  169,
                  158
                ]
              }
            }
          },
          {
            "id": 496,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidPayload",
                      "index": 0,
                      "docs": [
                        "The provided payload is invalid."
                      ]
                    },
                    {
                      "name": "InvalidBroadcastId",
                      "index": 1,
                      "docs": [
                        "The provided broadcast id is invalid."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureUnavailable",
                      "index": 2,
                      "docs": [
                        "A threshold signature was expected but not available."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 497,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "BroadcastData"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "transaction_payload",
                      "type": 330,
                      "typeName": "TransactionFor<T, I>"
                    },
                    {
                      "name": "threshold_signature_payload",
                      "type": 202,
                      "typeName": "PayloadFor<T, I>"
                    },
                    {
                      "name": "transaction_out_id",
                      "type": 161,
                      "typeName": "TransactionOutIdFor<T, I>"
                    },
                    {
                      "name": "nominee",
                      "type": 491,
                      "typeName": "Option<T::ValidatorId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 498,
            "type": {
              "def": {
                "tuple": [
                  203,
                  161
                ]
              }
            }
          },
          {
            "id": 499,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidPayload",
                      "index": 0,
                      "docs": [
                        "The provided payload is invalid."
                      ]
                    },
                    {
                      "name": "InvalidBroadcastId",
                      "index": 1,
                      "docs": [
                        "The provided broadcast id is invalid."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureUnavailable",
                      "index": 2,
                      "docs": [
                        "A threshold signature was expected but not available."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 500,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "BroadcastData"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "transaction_payload",
                      "type": 332,
                      "typeName": "TransactionFor<T, I>"
                    },
                    {
                      "name": "threshold_signature_payload",
                      "type": 221,
                      "typeName": "PayloadFor<T, I>"
                    },
                    {
                      "name": "transaction_out_id",
                      "type": 10,
                      "typeName": "TransactionOutIdFor<T, I>"
                    },
                    {
                      "name": "nominee",
                      "type": 491,
                      "typeName": "Option<T::ValidatorId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 501,
            "type": {
              "def": {
                "tuple": [
                  224,
                  165
                ]
              }
            }
          },
          {
            "id": 502,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidPayload",
                      "index": 0,
                      "docs": [
                        "The provided payload is invalid."
                      ]
                    },
                    {
                      "name": "InvalidBroadcastId",
                      "index": 1,
                      "docs": [
                        "The provided broadcast id is invalid."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureUnavailable",
                      "index": 2,
                      "docs": [
                        "A threshold signature was expected but not available."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 503,
            "type": {
              "def": {
                "sequence": {
                  "type": 504
                }
              }
            }
          },
          {
            "id": 504,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "Swap"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "swap_id",
                      "type": 9,
                      "typeName": "SwapId"
                    },
                    {
                      "name": "from",
                      "type": 233,
                      "typeName": "Asset"
                    },
                    {
                      "name": "to",
                      "type": 233,
                      "typeName": "Asset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "AssetAmount"
                    },
                    {
                      "name": "swap_type",
                      "type": 335,
                      "typeName": "SwapType"
                    },
                    {
                      "name": "stable_amount",
                      "type": 244,
                      "typeName": "Option<AssetAmount>"
                    },
                    {
                      "name": "final_output",
                      "type": 244,
                      "typeName": "Option<AssetAmount>"
                    },
                    {
                      "name": "fee_taken",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 505,
            "type": {
              "def": {
                "tuple": [
                  0,
                  233
                ]
              }
            }
          },
          {
            "id": 506,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "CcmSwap"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "source_asset",
                      "type": 233,
                      "typeName": "Asset"
                    },
                    {
                      "name": "deposit_amount",
                      "type": 70,
                      "typeName": "AssetAmount"
                    },
                    {
                      "name": "destination_asset",
                      "type": 233,
                      "typeName": "Asset"
                    },
                    {
                      "name": "destination_address",
                      "type": 241,
                      "typeName": "ForeignChainAddress"
                    },
                    {
                      "name": "deposit_metadata",
                      "type": 239,
                      "typeName": "CcmDepositMetadata"
                    },
                    {
                      "name": "principal_swap_id",
                      "type": 337,
                      "typeName": "Option<SwapId>"
                    },
                    {
                      "name": "gas_swap_id",
                      "type": 337,
                      "typeName": "Option<SwapId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 507,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "CcmSwapOutput"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "principal",
                      "type": 244,
                      "typeName": "Option<AssetAmount>"
                    },
                    {
                      "name": "gas",
                      "type": 244,
                      "typeName": "Option<AssetAmount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 508,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IncompatibleAssetAndAddress",
                      "index": 0,
                      "docs": [
                        "The provided asset and withdrawal address are incompatible."
                      ]
                    },
                    {
                      "name": "InvalidEgressAddress",
                      "index": 1,
                      "docs": [
                        "The Asset cannot be egressed because the destination address is not invalid."
                      ]
                    },
                    {
                      "name": "NoFundsAvailable",
                      "index": 2,
                      "docs": [
                        "The withdrawal is not possible because not enough funds are available."
                      ]
                    },
                    {
                      "name": "CcmUnsupportedForTargetChain",
                      "index": 3,
                      "docs": [
                        "The target chain does not support CCM."
                      ]
                    },
                    {
                      "name": "CcmInsufficientDepositAmount",
                      "index": 4,
                      "docs": [
                        "The deposited amount is insufficient to pay for the gas budget."
                      ]
                    },
                    {
                      "name": "InvalidDestinationAddress",
                      "index": 5,
                      "docs": [
                        "The provided address could not be decoded."
                      ]
                    },
                    {
                      "name": "WithdrawalsDisabled",
                      "index": 6,
                      "docs": [
                        "Withdrawals are disabled due to Safe Mode."
                      ]
                    },
                    {
                      "name": "BrokerRegistrationDisabled",
                      "index": 7,
                      "docs": [
                        "Broker registration is disabled due to Safe Mode."
                      ]
                    },
                    {
                      "name": "BrokerCommissionBpsTooHigh",
                      "index": 8,
                      "docs": [
                        "Broker commission bps is limited to 1000 points."
                      ]
                    },
                    {
                      "name": "EarnedFeesNotWithdrawn",
                      "index": 9,
                      "docs": [
                        "Brokers should withdraw their earned fees before deregistering."
                      ]
                    },
                    {
                      "name": "AffiliateAccountIsNotABroker",
                      "index": 10,
                      "docs": [
                        "The provided list of broker contains an account which is not registered as Broker"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 509,
            "type": {
              "def": {
                "tuple": [
                  0,
                  74
                ]
              }
            }
          },
          {
            "id": 510,
            "type": {
              "path": [
                "pallet_cf_lp",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientBalance",
                      "index": 0,
                      "docs": [
                        "The user does not have enough funds."
                      ]
                    },
                    {
                      "name": "BalanceOverflow",
                      "index": 1,
                      "docs": [
                        "The user has reached the maximum balance."
                      ]
                    },
                    {
                      "name": "UnauthorisedToModify",
                      "index": 2,
                      "docs": [
                        "The caller is not authorized to modify the trading position."
                      ]
                    },
                    {
                      "name": "InvalidEgressAddress",
                      "index": 3,
                      "docs": [
                        "The Asset cannot be egressed because the destination address is not invalid."
                      ]
                    },
                    {
                      "name": "InvalidEncodedAddress",
                      "index": 4,
                      "docs": [
                        "Then given encoded address cannot be decoded into a valid ForeignChainAddress."
                      ]
                    },
                    {
                      "name": "NoLiquidityRefundAddressRegistered",
                      "index": 5,
                      "docs": [
                        "A liquidity refund address must be set by the user for the chain before a",
                        "deposit address can be requested."
                      ]
                    },
                    {
                      "name": "LiquidityDepositDisabled",
                      "index": 6,
                      "docs": [
                        "Liquidity deposit is disabled due to Safe Mode."
                      ]
                    },
                    {
                      "name": "WithdrawalsDisabled",
                      "index": 7,
                      "docs": [
                        "Withdrawals are disabled due to Safe Mode."
                      ]
                    },
                    {
                      "name": "OpenOrdersRemaining",
                      "index": 8,
                      "docs": [
                        "The account still has open orders remaining."
                      ]
                    },
                    {
                      "name": "FundsRemaining",
                      "index": 9,
                      "docs": [
                        "The account still has funds remaining in the free balances."
                      ]
                    },
                    {
                      "name": "DestinationAccountNotLiquidityProvider",
                      "index": 10,
                      "docs": [
                        "The destination account is not a liquidity provider."
                      ]
                    },
                    {
                      "name": "CannotTransferToOriginAccount",
                      "index": 11,
                      "docs": [
                        "The account cannot transfer to itself."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 511,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositChannelDetails"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_channel",
                      "type": 512,
                      "typeName": "DepositChannel<T::TargetChain>"
                    },
                    {
                      "name": "opened_at",
                      "type": 9,
                      "typeName": "TargetChainBlockNumber<T, I>"
                    },
                    {
                      "name": "expires_at",
                      "type": 9,
                      "typeName": "TargetChainBlockNumber<T, I>"
                    },
                    {
                      "name": "action",
                      "type": 514,
                      "typeName": "ChannelAction<T::AccountId>"
                    },
                    {
                      "name": "boost_fee",
                      "type": 110,
                      "typeName": "BasisPoints"
                    },
                    {
                      "name": "boost_status",
                      "type": 516,
                      "typeName": "BoostStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 512,
            "type": {
              "path": [
                "cf_chains",
                "deposit_channel",
                "DepositChannel"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "channel_id",
                      "type": 9,
                      "typeName": "ChannelId"
                    },
                    {
                      "name": "address",
                      "type": 31,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "asset",
                      "type": 30,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "state",
                      "type": 513,
                      "typeName": "C::DepositChannelState"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 513,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "DeploymentStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undeployed",
                      "index": 0
                    },
                    {
                      "name": "Pending",
                      "index": 1
                    },
                    {
                      "name": "Deployed",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 514,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "ChannelAction"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Swap",
                      "fields": [
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_address",
                          "type": 241,
                          "typeName": "ForeignChainAddress"
                        },
                        {
                          "name": "broker_fees",
                          "type": 515,
                          "typeName": "Beneficiaries<AccountId>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "LiquidityProvision",
                      "fields": [
                        {
                          "name": "lp_account",
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "CcmTransfer",
                      "fields": [
                        {
                          "name": "destination_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "destination_address",
                          "type": 241,
                          "typeName": "ForeignChainAddress"
                        },
                        {
                          "name": "channel_metadata",
                          "type": 236,
                          "typeName": "CcmChannelMetadata"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 515,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 247
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 248,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 516,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "BoostStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Boosted",
                      "fields": [
                        {
                          "name": "prewitnessed_deposit_id",
                          "type": 9,
                          "typeName": "PrewitnessedDepositId"
                        },
                        {
                          "name": "pools",
                          "type": 517,
                          "typeName": "Vec<BoostPoolTier>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "NotBoosted",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 517,
            "type": {
              "def": {
                "sequence": {
                  "type": 110
                }
              }
            }
          },
          {
            "id": 518,
            "type": {
              "def": {
                "tuple": [
                  30,
                  110
                ]
              }
            }
          },
          {
            "id": 519,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "BoostPool"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "fee_bps",
                      "type": 110,
                      "typeName": "BasisPoints"
                    },
                    {
                      "name": "available_amount",
                      "type": 520,
                      "typeName": "ScaledAmount<C>"
                    },
                    {
                      "name": "amounts",
                      "type": 521,
                      "typeName": "BTreeMap<AccountId, ScaledAmount<C>>"
                    },
                    {
                      "name": "pending_boosts",
                      "type": 524,
                      "typeName": "BTreeMap<PrewitnessedDepositId, BTreeMap<AccountId, OwedAmountScaled<C>\n>>"
                    },
                    {
                      "name": "pending_withdrawals",
                      "type": 531,
                      "typeName": "BTreeMap<AccountId, BTreeSet<PrewitnessedDepositId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 520,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "ScaledAmount"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "val",
                      "type": 70,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 521,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 520
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 522
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 522,
            "type": {
              "def": {
                "sequence": {
                  "type": 523
                }
              }
            }
          },
          {
            "id": 523,
            "type": {
              "def": {
                "tuple": [
                  0,
                  520
                ]
              }
            }
          },
          {
            "id": 524,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 9
                },
                {
                  "name": "V",
                  "type": 525
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 529
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 525,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 526
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 527
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 526,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "OwedAmount"
              ],
              "params": [
                {
                  "name": "AmountT",
                  "type": 520
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 520,
                      "typeName": "AmountT"
                    },
                    {
                      "name": "fee",
                      "type": 520,
                      "typeName": "AmountT"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 527,
            "type": {
              "def": {
                "sequence": {
                  "type": 528
                }
              }
            }
          },
          {
            "id": 528,
            "type": {
              "def": {
                "tuple": [
                  0,
                  526
                ]
              }
            }
          },
          {
            "id": 529,
            "type": {
              "def": {
                "sequence": {
                  "type": 530
                }
              }
            }
          },
          {
            "id": 530,
            "type": {
              "def": {
                "tuple": [
                  9,
                  525
                ]
              }
            }
          },
          {
            "id": 531,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 348
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 532
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 532,
            "type": {
              "def": {
                "sequence": {
                  "type": 533
                }
              }
            }
          },
          {
            "id": 533,
            "type": {
              "def": {
                "tuple": [
                  0,
                  348
                ]
              }
            }
          },
          {
            "id": 534,
            "type": {
              "def": {
                "sequence": {
                  "type": 535
                }
              }
            }
          },
          {
            "id": 535,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "FetchOrTransfer"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fetch",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "C::ChainAsset"
                        },
                        {
                          "name": "deposit_address",
                          "type": 31,
                          "typeName": "C::ChainAccount"
                        },
                        {
                          "name": "deposit_fetch_id",
                          "type": 536,
                          "typeName": "Option<C::DepositFetchId>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "C::ChainAmount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "asset",
                          "type": 30,
                          "typeName": "C::ChainAsset"
                        },
                        {
                          "name": "destination_address",
                          "type": 31,
                          "typeName": "C::ChainAccount"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "C::ChainAmount"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 536,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 537
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 537
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 537,
            "type": {
              "path": [
                "cf_chains",
                "evm",
                "EvmFetchId"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DeployAndFetch",
                      "fields": [
                        {
                          "type": 9,
                          "typeName": "ChannelId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Fetch",
                      "fields": [
                        {
                          "type": 31,
                          "typeName": "Address"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "NotRequired",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 538,
            "type": {
              "def": {
                "sequence": {
                  "type": 539
                }
              }
            }
          },
          {
            "id": 539,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "CrossChainMessage"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "egress_id",
                      "type": 73,
                      "typeName": "EgressId"
                    },
                    {
                      "name": "asset",
                      "type": 30,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "destination_address",
                      "type": 31,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "message",
                      "type": 237,
                      "typeName": "CcmMessage"
                    },
                    {
                      "name": "source_chain",
                      "type": 74,
                      "typeName": "ForeignChain"
                    },
                    {
                      "name": "source_address",
                      "type": 240,
                      "typeName": "Option<ForeignChainAddress>"
                    },
                    {
                      "name": "cf_parameters",
                      "type": 238,
                      "typeName": "CcmCfParameters"
                    },
                    {
                      "name": "gas_budget",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 540,
            "type": {
              "def": {
                "sequence": {
                  "type": 541
                }
              }
            }
          },
          {
            "id": 541,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "FailedForeignChainCall"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "original_epoch",
                      "type": 4,
                      "typeName": "EpochIndex"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 542,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositTracker"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "unfetched",
                      "type": 70,
                      "typeName": "TargetChainAmount<T, I>"
                    },
                    {
                      "name": "fetched",
                      "type": 70,
                      "typeName": "TargetChainAmount<T, I>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 543,
            "type": {
              "def": {
                "sequence": {
                  "type": 544
                }
              }
            }
          },
          {
            "id": 544,
            "type": {
              "def": {
                "tuple": [
                  9,
                  31
                ]
              }
            }
          },
          {
            "id": 545,
            "type": {
              "def": {
                "tuple": [
                  9,
                  9
                ]
              }
            }
          },
          {
            "id": 546,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PrewitnessedDeposit"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 30,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "deposit_address",
                      "type": 31,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "block_height",
                      "type": 9,
                      "typeName": "C::ChainBlockNumber"
                    },
                    {
                      "name": "deposit_details",
                      "type": 5,
                      "typeName": "C::DepositDetails"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 547,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidDepositAddress",
                      "index": 0,
                      "docs": [
                        "The deposit address is not valid. It may have expired or may never have been issued."
                      ]
                    },
                    {
                      "name": "AssetMismatch",
                      "index": 1,
                      "docs": [
                        "A deposit was made using the wrong asset."
                      ]
                    },
                    {
                      "name": "ChannelIdsExhausted",
                      "index": 2,
                      "docs": [
                        "Channel ID has reached maximum"
                      ]
                    },
                    {
                      "name": "MissingPolkadotVault",
                      "index": 3,
                      "docs": [
                        "Polkadot's Vault Account does not exist in storage."
                      ]
                    },
                    {
                      "name": "MissingBitcoinVault",
                      "index": 4,
                      "docs": [
                        "Bitcoin's Vault key does not exist for the current epoch."
                      ]
                    },
                    {
                      "name": "BitcoinChannelIdTooLarge",
                      "index": 5,
                      "docs": [
                        "Channel ID is too large for Bitcoin address derivation"
                      ]
                    },
                    {
                      "name": "BelowEgressDustLimit",
                      "index": 6,
                      "docs": [
                        "The amount is below the minimum egress amount."
                      ]
                    },
                    {
                      "name": "AddBoostFundsDisabled",
                      "index": 7,
                      "docs": [
                        "Adding boost funds is disabled due to safe mode."
                      ]
                    },
                    {
                      "name": "StopBoostingDisabled",
                      "index": 8,
                      "docs": [
                        "Retrieving boost funds disabled due to safe mode."
                      ]
                    },
                    {
                      "name": "BoostPoolAlreadyExists",
                      "index": 9,
                      "docs": [
                        "Cannot create a boost pool if it already exists."
                      ]
                    },
                    {
                      "name": "InvalidBoostPoolTier",
                      "index": 10,
                      "docs": [
                        "Cannot create a boost pool of 0 bps"
                      ]
                    },
                    {
                      "name": "DepositChannelCreationDisabled",
                      "index": 11,
                      "docs": [
                        "Disabled due to safe mode for the chain"
                      ]
                    },
                    {
                      "name": "BoostPoolDoesNotExist",
                      "index": 12,
                      "docs": [
                        "The specified boost pool does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 548,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositChannelDetails"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_channel",
                      "type": 549,
                      "typeName": "DepositChannel<T::TargetChain>"
                    },
                    {
                      "name": "opened_at",
                      "type": 4,
                      "typeName": "TargetChainBlockNumber<T, I>"
                    },
                    {
                      "name": "expires_at",
                      "type": 4,
                      "typeName": "TargetChainBlockNumber<T, I>"
                    },
                    {
                      "name": "action",
                      "type": 514,
                      "typeName": "ChannelAction<T::AccountId>"
                    },
                    {
                      "name": "boost_fee",
                      "type": 110,
                      "typeName": "BasisPoints"
                    },
                    {
                      "name": "boost_status",
                      "type": 516,
                      "typeName": "BoostStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 549,
            "type": {
              "path": [
                "cf_chains",
                "deposit_channel",
                "DepositChannel"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "channel_id",
                      "type": 9,
                      "typeName": "ChannelId"
                    },
                    {
                      "name": "address",
                      "type": 34,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "asset",
                      "type": 260,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "state",
                      "type": 550,
                      "typeName": "C::DepositChannelState"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 550,
            "type": {
              "path": [
                "cf_chains",
                "dot",
                "PolkadotChannelState"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 551,
            "type": {
              "def": {
                "tuple": [
                  260,
                  110
                ]
              }
            }
          },
          {
            "id": 552,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "BoostPool"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "fee_bps",
                      "type": 110,
                      "typeName": "BasisPoints"
                    },
                    {
                      "name": "available_amount",
                      "type": 553,
                      "typeName": "ScaledAmount<C>"
                    },
                    {
                      "name": "amounts",
                      "type": 554,
                      "typeName": "BTreeMap<AccountId, ScaledAmount<C>>"
                    },
                    {
                      "name": "pending_boosts",
                      "type": 557,
                      "typeName": "BTreeMap<PrewitnessedDepositId, BTreeMap<AccountId, OwedAmountScaled<C>\n>>"
                    },
                    {
                      "name": "pending_withdrawals",
                      "type": 531,
                      "typeName": "BTreeMap<AccountId, BTreeSet<PrewitnessedDepositId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 553,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "ScaledAmount"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "val",
                      "type": 70,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 554,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 553
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 555
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 555,
            "type": {
              "def": {
                "sequence": {
                  "type": 556
                }
              }
            }
          },
          {
            "id": 556,
            "type": {
              "def": {
                "tuple": [
                  0,
                  553
                ]
              }
            }
          },
          {
            "id": 557,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 9
                },
                {
                  "name": "V",
                  "type": 558
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 562
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 558,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 559
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 560
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 559,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "OwedAmount"
              ],
              "params": [
                {
                  "name": "AmountT",
                  "type": 553
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 553,
                      "typeName": "AmountT"
                    },
                    {
                      "name": "fee",
                      "type": 553,
                      "typeName": "AmountT"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 560,
            "type": {
              "def": {
                "sequence": {
                  "type": 561
                }
              }
            }
          },
          {
            "id": 561,
            "type": {
              "def": {
                "tuple": [
                  0,
                  559
                ]
              }
            }
          },
          {
            "id": 562,
            "type": {
              "def": {
                "sequence": {
                  "type": 563
                }
              }
            }
          },
          {
            "id": 563,
            "type": {
              "def": {
                "tuple": [
                  9,
                  558
                ]
              }
            }
          },
          {
            "id": 564,
            "type": {
              "def": {
                "sequence": {
                  "type": 565
                }
              }
            }
          },
          {
            "id": 565,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "FetchOrTransfer"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fetch",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "C::ChainAsset"
                        },
                        {
                          "name": "deposit_address",
                          "type": 34,
                          "typeName": "C::ChainAccount"
                        },
                        {
                          "name": "deposit_fetch_id",
                          "type": 337,
                          "typeName": "Option<C::DepositFetchId>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "C::ChainAmount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "asset",
                          "type": 260,
                          "typeName": "C::ChainAsset"
                        },
                        {
                          "name": "destination_address",
                          "type": 34,
                          "typeName": "C::ChainAccount"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "C::ChainAmount"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 566,
            "type": {
              "def": {
                "sequence": {
                  "type": 567
                }
              }
            }
          },
          {
            "id": 567,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "CrossChainMessage"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "egress_id",
                      "type": 73,
                      "typeName": "EgressId"
                    },
                    {
                      "name": "asset",
                      "type": 260,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "destination_address",
                      "type": 34,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "message",
                      "type": 237,
                      "typeName": "CcmMessage"
                    },
                    {
                      "name": "source_chain",
                      "type": 74,
                      "typeName": "ForeignChain"
                    },
                    {
                      "name": "source_address",
                      "type": 240,
                      "typeName": "Option<ForeignChainAddress>"
                    },
                    {
                      "name": "cf_parameters",
                      "type": 238,
                      "typeName": "CcmCfParameters"
                    },
                    {
                      "name": "gas_budget",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 568,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositTracker"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "unfetched",
                      "type": 70,
                      "typeName": "TargetChainAmount<T, I>"
                    },
                    {
                      "name": "fetched",
                      "type": 70,
                      "typeName": "TargetChainAmount<T, I>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 569,
            "type": {
              "def": {
                "sequence": {
                  "type": 570
                }
              }
            }
          },
          {
            "id": 570,
            "type": {
              "def": {
                "tuple": [
                  4,
                  34
                ]
              }
            }
          },
          {
            "id": 571,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PrewitnessedDeposit"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 144
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 260,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "deposit_address",
                      "type": 34,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "block_height",
                      "type": 4,
                      "typeName": "C::ChainBlockNumber"
                    },
                    {
                      "name": "deposit_details",
                      "type": 5,
                      "typeName": "C::DepositDetails"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 572,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidDepositAddress",
                      "index": 0,
                      "docs": [
                        "The deposit address is not valid. It may have expired or may never have been issued."
                      ]
                    },
                    {
                      "name": "AssetMismatch",
                      "index": 1,
                      "docs": [
                        "A deposit was made using the wrong asset."
                      ]
                    },
                    {
                      "name": "ChannelIdsExhausted",
                      "index": 2,
                      "docs": [
                        "Channel ID has reached maximum"
                      ]
                    },
                    {
                      "name": "MissingPolkadotVault",
                      "index": 3,
                      "docs": [
                        "Polkadot's Vault Account does not exist in storage."
                      ]
                    },
                    {
                      "name": "MissingBitcoinVault",
                      "index": 4,
                      "docs": [
                        "Bitcoin's Vault key does not exist for the current epoch."
                      ]
                    },
                    {
                      "name": "BitcoinChannelIdTooLarge",
                      "index": 5,
                      "docs": [
                        "Channel ID is too large for Bitcoin address derivation"
                      ]
                    },
                    {
                      "name": "BelowEgressDustLimit",
                      "index": 6,
                      "docs": [
                        "The amount is below the minimum egress amount."
                      ]
                    },
                    {
                      "name": "AddBoostFundsDisabled",
                      "index": 7,
                      "docs": [
                        "Adding boost funds is disabled due to safe mode."
                      ]
                    },
                    {
                      "name": "StopBoostingDisabled",
                      "index": 8,
                      "docs": [
                        "Retrieving boost funds disabled due to safe mode."
                      ]
                    },
                    {
                      "name": "BoostPoolAlreadyExists",
                      "index": 9,
                      "docs": [
                        "Cannot create a boost pool if it already exists."
                      ]
                    },
                    {
                      "name": "InvalidBoostPoolTier",
                      "index": 10,
                      "docs": [
                        "Cannot create a boost pool of 0 bps"
                      ]
                    },
                    {
                      "name": "DepositChannelCreationDisabled",
                      "index": 11,
                      "docs": [
                        "Disabled due to safe mode for the chain"
                      ]
                    },
                    {
                      "name": "BoostPoolDoesNotExist",
                      "index": 12,
                      "docs": [
                        "The specified boost pool does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 573,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositChannelDetails"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_channel",
                      "type": 574,
                      "typeName": "DepositChannel<T::TargetChain>"
                    },
                    {
                      "name": "opened_at",
                      "type": 9,
                      "typeName": "TargetChainBlockNumber<T, I>"
                    },
                    {
                      "name": "expires_at",
                      "type": 9,
                      "typeName": "TargetChainBlockNumber<T, I>"
                    },
                    {
                      "name": "action",
                      "type": 514,
                      "typeName": "ChannelAction<T::AccountId>"
                    },
                    {
                      "name": "boost_fee",
                      "type": 110,
                      "typeName": "BasisPoints"
                    },
                    {
                      "name": "boost_status",
                      "type": 516,
                      "typeName": "BoostStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 574,
            "type": {
              "path": [
                "cf_chains",
                "deposit_channel",
                "DepositChannel"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "channel_id",
                      "type": 9,
                      "typeName": "ChannelId"
                    },
                    {
                      "name": "address",
                      "type": 229,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "asset",
                      "type": 270,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "state",
                      "type": 61,
                      "typeName": "C::DepositChannelState"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 575,
            "type": {
              "def": {
                "tuple": [
                  270,
                  110
                ]
              }
            }
          },
          {
            "id": 576,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "BoostPool"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "fee_bps",
                      "type": 110,
                      "typeName": "BasisPoints"
                    },
                    {
                      "name": "available_amount",
                      "type": 577,
                      "typeName": "ScaledAmount<C>"
                    },
                    {
                      "name": "amounts",
                      "type": 578,
                      "typeName": "BTreeMap<AccountId, ScaledAmount<C>>"
                    },
                    {
                      "name": "pending_boosts",
                      "type": 581,
                      "typeName": "BTreeMap<PrewitnessedDepositId, BTreeMap<AccountId, OwedAmountScaled<C>\n>>"
                    },
                    {
                      "name": "pending_withdrawals",
                      "type": 531,
                      "typeName": "BTreeMap<AccountId, BTreeSet<PrewitnessedDepositId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 577,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "ScaledAmount"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "val",
                      "type": 70,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 578,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 577
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 579
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 579,
            "type": {
              "def": {
                "sequence": {
                  "type": 580
                }
              }
            }
          },
          {
            "id": 580,
            "type": {
              "def": {
                "tuple": [
                  0,
                  577
                ]
              }
            }
          },
          {
            "id": 581,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 9
                },
                {
                  "name": "V",
                  "type": 582
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 586
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 582,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 583
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 584
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 583,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "OwedAmount"
              ],
              "params": [
                {
                  "name": "AmountT",
                  "type": 577
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 577,
                      "typeName": "AmountT"
                    },
                    {
                      "name": "fee",
                      "type": 577,
                      "typeName": "AmountT"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 584,
            "type": {
              "def": {
                "sequence": {
                  "type": 585
                }
              }
            }
          },
          {
            "id": 585,
            "type": {
              "def": {
                "tuple": [
                  0,
                  583
                ]
              }
            }
          },
          {
            "id": 586,
            "type": {
              "def": {
                "sequence": {
                  "type": 587
                }
              }
            }
          },
          {
            "id": 587,
            "type": {
              "def": {
                "tuple": [
                  9,
                  582
                ]
              }
            }
          },
          {
            "id": 588,
            "type": {
              "def": {
                "sequence": {
                  "type": 589
                }
              }
            }
          },
          {
            "id": 589,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "FetchOrTransfer"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fetch",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "C::ChainAsset"
                        },
                        {
                          "name": "deposit_address",
                          "type": 229,
                          "typeName": "C::ChainAccount"
                        },
                        {
                          "name": "deposit_fetch_id",
                          "type": 590,
                          "typeName": "Option<C::DepositFetchId>"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "C::ChainAmount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "asset",
                          "type": 270,
                          "typeName": "C::ChainAsset"
                        },
                        {
                          "name": "destination_address",
                          "type": 229,
                          "typeName": "C::ChainAccount"
                        },
                        {
                          "name": "amount",
                          "type": 9,
                          "typeName": "C::ChainAmount"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 590,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 591
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 591
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 591,
            "type": {
              "path": [
                "cf_chains",
                "btc",
                "BitcoinFetchId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 9,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 592,
            "type": {
              "def": {
                "sequence": {
                  "type": 593
                }
              }
            }
          },
          {
            "id": 593,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "CrossChainMessage"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "egress_id",
                      "type": 73,
                      "typeName": "EgressId"
                    },
                    {
                      "name": "asset",
                      "type": 270,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 9,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "destination_address",
                      "type": 229,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "message",
                      "type": 237,
                      "typeName": "CcmMessage"
                    },
                    {
                      "name": "source_chain",
                      "type": 74,
                      "typeName": "ForeignChain"
                    },
                    {
                      "name": "source_address",
                      "type": 240,
                      "typeName": "Option<ForeignChainAddress>"
                    },
                    {
                      "name": "cf_parameters",
                      "type": 238,
                      "typeName": "CcmCfParameters"
                    },
                    {
                      "name": "gas_budget",
                      "type": 9,
                      "typeName": "C::ChainAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 594,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositTracker"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "unfetched",
                      "type": 9,
                      "typeName": "TargetChainAmount<T, I>"
                    },
                    {
                      "name": "fetched",
                      "type": 9,
                      "typeName": "TargetChainAmount<T, I>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 595,
            "type": {
              "def": {
                "sequence": {
                  "type": 596
                }
              }
            }
          },
          {
            "id": 596,
            "type": {
              "def": {
                "tuple": [
                  9,
                  229
                ]
              }
            }
          },
          {
            "id": 597,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PrewitnessedDeposit"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 149
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 270,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 9,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "deposit_address",
                      "type": 229,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "block_height",
                      "type": 9,
                      "typeName": "C::ChainBlockNumber"
                    },
                    {
                      "name": "deposit_details",
                      "type": 60,
                      "typeName": "C::DepositDetails"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 598,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidDepositAddress",
                      "index": 0,
                      "docs": [
                        "The deposit address is not valid. It may have expired or may never have been issued."
                      ]
                    },
                    {
                      "name": "AssetMismatch",
                      "index": 1,
                      "docs": [
                        "A deposit was made using the wrong asset."
                      ]
                    },
                    {
                      "name": "ChannelIdsExhausted",
                      "index": 2,
                      "docs": [
                        "Channel ID has reached maximum"
                      ]
                    },
                    {
                      "name": "MissingPolkadotVault",
                      "index": 3,
                      "docs": [
                        "Polkadot's Vault Account does not exist in storage."
                      ]
                    },
                    {
                      "name": "MissingBitcoinVault",
                      "index": 4,
                      "docs": [
                        "Bitcoin's Vault key does not exist for the current epoch."
                      ]
                    },
                    {
                      "name": "BitcoinChannelIdTooLarge",
                      "index": 5,
                      "docs": [
                        "Channel ID is too large for Bitcoin address derivation"
                      ]
                    },
                    {
                      "name": "BelowEgressDustLimit",
                      "index": 6,
                      "docs": [
                        "The amount is below the minimum egress amount."
                      ]
                    },
                    {
                      "name": "AddBoostFundsDisabled",
                      "index": 7,
                      "docs": [
                        "Adding boost funds is disabled due to safe mode."
                      ]
                    },
                    {
                      "name": "StopBoostingDisabled",
                      "index": 8,
                      "docs": [
                        "Retrieving boost funds disabled due to safe mode."
                      ]
                    },
                    {
                      "name": "BoostPoolAlreadyExists",
                      "index": 9,
                      "docs": [
                        "Cannot create a boost pool if it already exists."
                      ]
                    },
                    {
                      "name": "InvalidBoostPoolTier",
                      "index": 10,
                      "docs": [
                        "Cannot create a boost pool of 0 bps"
                      ]
                    },
                    {
                      "name": "DepositChannelCreationDisabled",
                      "index": 11,
                      "docs": [
                        "Disabled due to safe mode for the chain"
                      ]
                    },
                    {
                      "name": "BoostPoolDoesNotExist",
                      "index": 12,
                      "docs": [
                        "The specified boost pool does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 599,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "Pool"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "range_orders_cache",
                      "type": 600,
                      "typeName": "BTreeMap<T::AccountId, BTreeMap<OrderId, Range<Tick>>>"
                    },
                    {
                      "name": "limit_orders_cache",
                      "type": 606,
                      "typeName": "PoolPairsMap<BTreeMap<T::AccountId, BTreeMap<OrderId, Tick>>>"
                    },
                    {
                      "name": "pool_state",
                      "type": 613,
                      "typeName": "PoolState<(T::AccountId, OrderId)>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 600,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 601
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 604
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 601,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 9
                },
                {
                  "name": "V",
                  "type": 280
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 602
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 602,
            "type": {
              "def": {
                "sequence": {
                  "type": 603
                }
              }
            }
          },
          {
            "id": 603,
            "type": {
              "def": {
                "tuple": [
                  9,
                  280
                ]
              }
            }
          },
          {
            "id": 604,
            "type": {
              "def": {
                "sequence": {
                  "type": 605
                }
              }
            }
          },
          {
            "id": 605,
            "type": {
              "def": {
                "tuple": [
                  0,
                  601
                ]
              }
            }
          },
          {
            "id": 606,
            "type": {
              "path": [
                "cf_amm",
                "common",
                "PoolPairsMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 607
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base",
                      "type": 607,
                      "typeName": "T"
                    },
                    {
                      "name": "quote",
                      "type": 607,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 607,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 608
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 611
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 608,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 9
                },
                {
                  "name": "V",
                  "type": 134
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 609
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 609,
            "type": {
              "def": {
                "sequence": {
                  "type": 610
                }
              }
            }
          },
          {
            "id": 610,
            "type": {
              "def": {
                "tuple": [
                  9,
                  134
                ]
              }
            }
          },
          {
            "id": 611,
            "type": {
              "def": {
                "sequence": {
                  "type": 612
                }
              }
            }
          },
          {
            "id": 612,
            "type": {
              "def": {
                "tuple": [
                  0,
                  608
                ]
              }
            }
          },
          {
            "id": 613,
            "type": {
              "path": [
                "cf_amm",
                "PoolState"
              ],
              "params": [
                {
                  "name": "LiquidityProvider",
                  "type": 614
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "limit_orders",
                      "type": 615,
                      "typeName": "limit_orders::PoolState<LiquidityProvider>"
                    },
                    {
                      "name": "range_orders",
                      "type": 629,
                      "typeName": "range_orders::PoolState<LiquidityProvider>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 614,
            "type": {
              "def": {
                "tuple": [
                  0,
                  9
                ]
              }
            }
          },
          {
            "id": 615,
            "type": {
              "path": [
                "cf_amm",
                "limit_orders",
                "PoolState"
              ],
              "params": [
                {
                  "name": "LiquidityProvider",
                  "type": 614
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "fee_hundredth_pips",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "next_pool_instance",
                      "type": 70,
                      "typeName": "u128"
                    },
                    {
                      "name": "fixed_pools",
                      "type": 616,
                      "typeName": "PoolPairsMap<BTreeMap<SqrtPriceQ64F96, FixedPool>>"
                    },
                    {
                      "name": "positions",
                      "type": 622,
                      "typeName": "PoolPairsMap<BTreeMap<(SqrtPriceQ64F96, LiquidityProvider), Position>>"
                    },
                    {
                      "name": "total_fees_earned",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    },
                    {
                      "name": "total_swap_inputs",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    },
                    {
                      "name": "total_swap_outputs",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 616,
            "type": {
              "path": [
                "cf_amm",
                "common",
                "PoolPairsMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 617
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base",
                      "type": 617,
                      "typeName": "T"
                    },
                    {
                      "name": "quote",
                      "type": 617,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 617,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 174
                },
                {
                  "name": "V",
                  "type": 618
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 620
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 618,
            "type": {
              "path": [
                "cf_amm",
                "limit_orders",
                "FixedPool"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pool_instance",
                      "type": 70,
                      "typeName": "u128"
                    },
                    {
                      "name": "available",
                      "type": 174,
                      "typeName": "Amount"
                    },
                    {
                      "name": "percent_remaining",
                      "type": 619,
                      "typeName": "FloatBetweenZeroAndOne"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 619,
            "type": {
              "path": [
                "cf_amm",
                "limit_orders",
                "FloatBetweenZeroAndOne"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normalised_mantissa",
                      "type": 174,
                      "typeName": "U256"
                    },
                    {
                      "name": "negative_exponent",
                      "type": 174,
                      "typeName": "U256"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 620,
            "type": {
              "def": {
                "sequence": {
                  "type": 621
                }
              }
            }
          },
          {
            "id": 621,
            "type": {
              "def": {
                "tuple": [
                  174,
                  618
                ]
              }
            }
          },
          {
            "id": 622,
            "type": {
              "path": [
                "cf_amm",
                "common",
                "PoolPairsMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 623
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base",
                      "type": 623,
                      "typeName": "T"
                    },
                    {
                      "name": "quote",
                      "type": 623,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 623,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 624
                },
                {
                  "name": "V",
                  "type": 625
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 626
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 624,
            "type": {
              "def": {
                "tuple": [
                  174,
                  614
                ]
              }
            }
          },
          {
            "id": 625,
            "type": {
              "path": [
                "cf_amm",
                "limit_orders",
                "Position"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pool_instance",
                      "type": 70,
                      "typeName": "u128"
                    },
                    {
                      "name": "amount",
                      "type": 174,
                      "typeName": "Amount"
                    },
                    {
                      "name": "last_percent_remaining",
                      "type": 619,
                      "typeName": "FloatBetweenZeroAndOne"
                    },
                    {
                      "name": "accumulative_fees",
                      "type": 174,
                      "typeName": "Amount"
                    },
                    {
                      "name": "original_amount",
                      "type": 174,
                      "typeName": "Amount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 626,
            "type": {
              "def": {
                "sequence": {
                  "type": 627
                }
              }
            }
          },
          {
            "id": 627,
            "type": {
              "def": {
                "tuple": [
                  624,
                  625
                ]
              }
            }
          },
          {
            "id": 628,
            "type": {
              "path": [
                "cf_amm",
                "common",
                "PoolPairsMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 174
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base",
                      "type": 174,
                      "typeName": "T"
                    },
                    {
                      "name": "quote",
                      "type": 174,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 629,
            "type": {
              "path": [
                "cf_amm",
                "range_orders",
                "PoolState"
              ],
              "params": [
                {
                  "name": "LiquidityProvider",
                  "type": 614
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "fee_hundredth_pips",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "current_sqrt_price",
                      "type": 174,
                      "typeName": "SqrtPriceQ64F96"
                    },
                    {
                      "name": "current_tick",
                      "type": 134,
                      "typeName": "Tick"
                    },
                    {
                      "name": "current_liquidity",
                      "type": 70,
                      "typeName": "Liquidity"
                    },
                    {
                      "name": "global_fee_growth",
                      "type": 628,
                      "typeName": "PoolPairsMap<FeeGrowthQ128F128>"
                    },
                    {
                      "name": "liquidity_map",
                      "type": 630,
                      "typeName": "BTreeMap<Tick, TickDelta>"
                    },
                    {
                      "name": "positions",
                      "type": 635,
                      "typeName": "BTreeMap<(LiquidityProvider, Tick, Tick), Position>"
                    },
                    {
                      "name": "total_fees_earned",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    },
                    {
                      "name": "total_swap_inputs",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    },
                    {
                      "name": "total_swap_outputs",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 630,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 134
                },
                {
                  "name": "V",
                  "type": 631
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 633
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 631,
            "type": {
              "path": [
                "cf_amm",
                "range_orders",
                "TickDelta"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "liquidity_delta",
                      "type": 632,
                      "typeName": "i128"
                    },
                    {
                      "name": "liquidity_gross",
                      "type": 70,
                      "typeName": "u128"
                    },
                    {
                      "name": "fee_growth_outside",
                      "type": 628,
                      "typeName": "PoolPairsMap<FeeGrowthQ128F128>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 632,
            "type": {
              "def": {
                "primitive": "i128"
              }
            }
          },
          {
            "id": 633,
            "type": {
              "def": {
                "sequence": {
                  "type": 634
                }
              }
            }
          },
          {
            "id": 634,
            "type": {
              "def": {
                "tuple": [
                  134,
                  631
                ]
              }
            }
          },
          {
            "id": 635,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 636
                },
                {
                  "name": "V",
                  "type": 637
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 638
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 636,
            "type": {
              "def": {
                "tuple": [
                  614,
                  134,
                  134
                ]
              }
            }
          },
          {
            "id": 637,
            "type": {
              "path": [
                "cf_amm",
                "range_orders",
                "Position"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "liquidity",
                      "type": 70,
                      "typeName": "Liquidity"
                    },
                    {
                      "name": "last_fee_growth_inside",
                      "type": 628,
                      "typeName": "PoolPairsMap<FeeGrowthQ128F128>"
                    },
                    {
                      "name": "accumulative_fees",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    },
                    {
                      "name": "original_sqrt_price",
                      "type": 174,
                      "typeName": "SqrtPriceQ64F96"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 638,
            "type": {
              "def": {
                "sequence": {
                  "type": 639
                }
              }
            }
          },
          {
            "id": 639,
            "type": {
              "def": {
                "tuple": [
                  636,
                  637
                ]
              }
            }
          },
          {
            "id": 640,
            "type": {
              "def": {
                "sequence": {
                  "type": 641
                }
              }
            }
          },
          {
            "id": 641,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "LimitOrderUpdate"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "lp",
                      "type": 0,
                      "typeName": "T::AccountId"
                    },
                    {
                      "name": "id",
                      "type": 9,
                      "typeName": "OrderId"
                    },
                    {
                      "name": "call",
                      "type": 278,
                      "typeName": "Call<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 642,
            "type": {
              "path": [
                "pallet_cf_pools",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ZeroBuyIntervalNotAllowed",
                      "index": 0,
                      "docs": [
                        "Setting the buy interval to zero is not allowed."
                      ]
                    },
                    {
                      "name": "PoolAlreadyExists",
                      "index": 1,
                      "docs": [
                        "The specified exchange pool already exists."
                      ]
                    },
                    {
                      "name": "PoolDoesNotExist",
                      "index": 2,
                      "docs": [
                        "The specified exchange pool does not exist."
                      ]
                    },
                    {
                      "name": "UnspecifiedOrderPrice",
                      "index": 3,
                      "docs": [
                        "For previously unused order ids, you must specific a tick/tick range for the order,",
                        "thereby specifying the order price associated with that order id"
                      ]
                    },
                    {
                      "name": "PoolDisabled",
                      "index": 4,
                      "docs": [
                        "The exchange pool is currently disabled."
                      ]
                    },
                    {
                      "name": "InvalidFeeAmount",
                      "index": 5,
                      "docs": [
                        "the Fee BIPs must be within the allowed range."
                      ]
                    },
                    {
                      "name": "InvalidInitialPrice",
                      "index": 6,
                      "docs": [
                        "the initial price must be within the allowed range."
                      ]
                    },
                    {
                      "name": "InvalidTickRange",
                      "index": 7,
                      "docs": [
                        "The Upper or Lower tick is invalid."
                      ]
                    },
                    {
                      "name": "InvalidTick",
                      "index": 8,
                      "docs": [
                        "The tick is invalid."
                      ]
                    },
                    {
                      "name": "MaximumGrossLiquidity",
                      "index": 9,
                      "docs": [
                        "One of the referenced ticks reached its maximum gross liquidity"
                      ]
                    },
                    {
                      "name": "OrderDoesNotExist",
                      "index": 10,
                      "docs": [
                        "The user's order does not exist."
                      ]
                    },
                    {
                      "name": "MaximumPoolInstances",
                      "index": 11,
                      "docs": [
                        "It is no longer possible to mint limit orders due to reaching the maximum pool",
                        "instances, other than for ticks where a fixed pool currently exists."
                      ]
                    },
                    {
                      "name": "InsufficientLiquidity",
                      "index": 12,
                      "docs": [
                        "The pool does not have enough liquidity left to process the swap."
                      ]
                    },
                    {
                      "name": "OutputOverflow",
                      "index": 13,
                      "docs": [
                        "The swap output is past the maximum allowed amount."
                      ]
                    },
                    {
                      "name": "AssetRatioUnachieveable",
                      "index": 14,
                      "docs": [
                        "There are no amounts between the specified maximum and minimum that match the required",
                        "ratio of assets"
                      ]
                    },
                    {
                      "name": "UpdatingLimitOrdersDisabled",
                      "index": 15,
                      "docs": [
                        "Updating Limit Orders is disabled."
                      ]
                    },
                    {
                      "name": "UpdatingRangeOrdersDisabled",
                      "index": 16,
                      "docs": [
                        "Updating Range Orders is disabled."
                      ]
                    },
                    {
                      "name": "UnsupportedCall",
                      "index": 17,
                      "docs": [
                        "Unsupported call."
                      ]
                    },
                    {
                      "name": "LimitOrderUpdateExpired",
                      "index": 18,
                      "docs": [
                        "The update can't be scheduled because it has expired (dispatch_at is in the past)."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 643,
            "type": {
              "def": {
                "sequence": {
                  "type": 644
                }
              }
            }
          },
          {
            "id": 644,
            "type": {
              "path": [
                "cfe_events",
                "CfeEvent"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EvmThresholdSignatureRequest",
                      "fields": [
                        {
                          "type": 645,
                          "typeName": "ThresholdSignatureRequest<ValidatorId, EvmCrypto>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "DotThresholdSignatureRequest",
                      "fields": [
                        {
                          "type": 646,
                          "typeName": "ThresholdSignatureRequest<ValidatorId, PolkadotCrypto>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "BtcThresholdSignatureRequest",
                      "fields": [
                        {
                          "type": 647,
                          "typeName": "ThresholdSignatureRequest<ValidatorId, BitcoinCrypto>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "EvmKeygenRequest",
                      "fields": [
                        {
                          "type": 648,
                          "typeName": "KeygenRequest<ValidatorId>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "DotKeygenRequest",
                      "fields": [
                        {
                          "type": 648,
                          "typeName": "KeygenRequest<ValidatorId>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "BtcKeygenRequest",
                      "fields": [
                        {
                          "type": 648,
                          "typeName": "KeygenRequest<ValidatorId>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "BtcKeyHandoverRequest",
                      "fields": [
                        {
                          "type": 649,
                          "typeName": "KeyHandoverRequest<ValidatorId, BitcoinCrypto>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "EthTxBroadcastRequest",
                      "fields": [
                        {
                          "type": 650,
                          "typeName": "TxBroadcastRequest<ValidatorId, Ethereum>"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "DotTxBroadcastRequest",
                      "fields": [
                        {
                          "type": 651,
                          "typeName": "TxBroadcastRequest<ValidatorId, Polkadot>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "BtcTxBroadcastRequest",
                      "fields": [
                        {
                          "type": 652,
                          "typeName": "TxBroadcastRequest<ValidatorId, Bitcoin>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "ArbTxBroadcastRequest",
                      "fields": [
                        {
                          "type": 653,
                          "typeName": "TxBroadcastRequest<ValidatorId, Arbitrum>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "PeerIdRegistered",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "ValidatorId"
                        },
                        {
                          "name": "pubkey",
                          "type": 109,
                          "typeName": "Ed25519PublicKey"
                        },
                        {
                          "name": "port",
                          "type": 110,
                          "typeName": "Port"
                        },
                        {
                          "name": "ip",
                          "type": 70,
                          "typeName": "Ipv6Addr"
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "PeerIdDeregistered",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "ValidatorId"
                        },
                        {
                          "name": "pubkey",
                          "type": 109,
                          "typeName": "Ed25519PublicKey"
                        }
                      ],
                      "index": 12
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 645,
            "type": {
              "path": [
                "cfe_events",
                "ThresholdSignatureRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ceremony_id",
                      "type": 9,
                      "typeName": "CeremonyId"
                    },
                    {
                      "name": "epoch_index",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "key",
                      "type": 153,
                      "typeName": "C::AggKey"
                    },
                    {
                      "name": "signatories",
                      "type": 127,
                      "typeName": "BTreeSet<ValidatorId>"
                    },
                    {
                      "name": "payload",
                      "type": 10,
                      "typeName": "C::Payload"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 646,
            "type": {
              "path": [
                "cfe_events",
                "ThresholdSignatureRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ceremony_id",
                      "type": 9,
                      "typeName": "CeremonyId"
                    },
                    {
                      "name": "epoch_index",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "key",
                      "type": 34,
                      "typeName": "C::AggKey"
                    },
                    {
                      "name": "signatories",
                      "type": 127,
                      "typeName": "BTreeSet<ValidatorId>"
                    },
                    {
                      "name": "payload",
                      "type": 202,
                      "typeName": "C::Payload"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 647,
            "type": {
              "path": [
                "cfe_events",
                "ThresholdSignatureRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ceremony_id",
                      "type": 9,
                      "typeName": "CeremonyId"
                    },
                    {
                      "name": "epoch_index",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "key",
                      "type": 90,
                      "typeName": "C::AggKey"
                    },
                    {
                      "name": "signatories",
                      "type": 127,
                      "typeName": "BTreeSet<ValidatorId>"
                    },
                    {
                      "name": "payload",
                      "type": 221,
                      "typeName": "C::Payload"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 648,
            "type": {
              "path": [
                "cfe_events",
                "KeygenRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ceremony_id",
                      "type": 9,
                      "typeName": "CeremonyId"
                    },
                    {
                      "name": "epoch_index",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "participants",
                      "type": 127,
                      "typeName": "BTreeSet<ValidatorId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 649,
            "type": {
              "path": [
                "cfe_events",
                "KeyHandoverRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ceremony_id",
                      "type": 9,
                      "typeName": "CeremonyId"
                    },
                    {
                      "name": "from_epoch",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "to_epoch",
                      "type": 4,
                      "typeName": "EpochIndex"
                    },
                    {
                      "name": "key_to_share",
                      "type": 90,
                      "typeName": "C::AggKey"
                    },
                    {
                      "name": "sharing_participants",
                      "type": 127,
                      "typeName": "BTreeSet<ValidatorId>"
                    },
                    {
                      "name": "receiving_participants",
                      "type": 127,
                      "typeName": "BTreeSet<ValidatorId>"
                    },
                    {
                      "name": "new_key",
                      "type": 90,
                      "typeName": "C::AggKey"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 650,
            "type": {
              "path": [
                "cfe_events",
                "TxBroadcastRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "nominee",
                      "type": 0,
                      "typeName": "ValidatorId"
                    },
                    {
                      "name": "payload",
                      "type": 328,
                      "typeName": "C::Transaction"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 651,
            "type": {
              "path": [
                "cfe_events",
                "TxBroadcastRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "nominee",
                      "type": 0,
                      "typeName": "ValidatorId"
                    },
                    {
                      "name": "payload",
                      "type": 330,
                      "typeName": "C::Transaction"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 652,
            "type": {
              "path": [
                "cfe_events",
                "TxBroadcastRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "nominee",
                      "type": 0,
                      "typeName": "ValidatorId"
                    },
                    {
                      "name": "payload",
                      "type": 332,
                      "typeName": "C::Transaction"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 653,
            "type": {
              "path": [
                "cfe_events",
                "TxBroadcastRequest"
              ],
              "params": [
                {
                  "name": "ValidatorId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "nominee",
                      "type": 0,
                      "typeName": "ValidatorId"
                    },
                    {
                      "name": "payload",
                      "type": 328,
                      "typeName": "C::Transaction"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 654,
            "type": {
              "path": [
                "pallet_cf_chain_tracking",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StaleDataSubmitted",
                      "index": 0,
                      "docs": [
                        "The submitted data is too old."
                      ]
                    },
                    {
                      "name": "InvalidBlockHeight",
                      "index": 1,
                      "docs": [
                        "Block height must be a multiple of the witness period"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 655,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "VaultActivationStatus"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AwaitingActivation",
                      "fields": [
                        {
                          "name": "new_public_key",
                          "type": 153,
                          "typeName": "AggKeyFor<T, I>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Complete",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 656,
            "type": {
              "path": [
                "pallet_cf_vaults",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NoActiveRotation",
                      "index": 0,
                      "docs": [
                        "There is currently no vault rotation in progress for this chain."
                      ]
                    },
                    {
                      "name": "InvalidRotationStatus",
                      "index": 1,
                      "docs": [
                        "The requested call is invalid based on the current rotation state."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 657,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "BroadcastData"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "broadcast_id",
                      "type": 4,
                      "typeName": "BroadcastId"
                    },
                    {
                      "name": "transaction_payload",
                      "type": 328,
                      "typeName": "TransactionFor<T, I>"
                    },
                    {
                      "name": "threshold_signature_payload",
                      "type": 10,
                      "typeName": "PayloadFor<T, I>"
                    },
                    {
                      "name": "transaction_out_id",
                      "type": 158,
                      "typeName": "TransactionOutIdFor<T, I>"
                    },
                    {
                      "name": "nominee",
                      "type": 491,
                      "typeName": "Option<T::ValidatorId>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 658,
            "type": {
              "def": {
                "tuple": [
                  298,
                  158
                ]
              }
            }
          },
          {
            "id": 659,
            "type": {
              "path": [
                "pallet_cf_broadcast",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidPayload",
                      "index": 0,
                      "docs": [
                        "The provided payload is invalid."
                      ]
                    },
                    {
                      "name": "InvalidBroadcastId",
                      "index": 1,
                      "docs": [
                        "The provided broadcast id is invalid."
                      ]
                    },
                    {
                      "name": "ThresholdSignatureUnavailable",
                      "index": 2,
                      "docs": [
                        "A threshold signature was expected but not available."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 660,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositChannelDetails"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit_channel",
                      "type": 661,
                      "typeName": "DepositChannel<T::TargetChain>"
                    },
                    {
                      "name": "opened_at",
                      "type": 9,
                      "typeName": "TargetChainBlockNumber<T, I>"
                    },
                    {
                      "name": "expires_at",
                      "type": 9,
                      "typeName": "TargetChainBlockNumber<T, I>"
                    },
                    {
                      "name": "action",
                      "type": 514,
                      "typeName": "ChannelAction<T::AccountId>"
                    },
                    {
                      "name": "boost_fee",
                      "type": 110,
                      "typeName": "BasisPoints"
                    },
                    {
                      "name": "boost_status",
                      "type": 516,
                      "typeName": "BoostStatus"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 661,
            "type": {
              "path": [
                "cf_chains",
                "deposit_channel",
                "DepositChannel"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "channel_id",
                      "type": 9,
                      "typeName": "ChannelId"
                    },
                    {
                      "name": "address",
                      "type": 31,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "asset",
                      "type": 33,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "state",
                      "type": 513,
                      "typeName": "C::DepositChannelState"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 662,
            "type": {
              "def": {
                "tuple": [
                  33,
                  110
                ]
              }
            }
          },
          {
            "id": 663,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "BoostPool"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "fee_bps",
                      "type": 110,
                      "typeName": "BasisPoints"
                    },
                    {
                      "name": "available_amount",
                      "type": 664,
                      "typeName": "ScaledAmount<C>"
                    },
                    {
                      "name": "amounts",
                      "type": 665,
                      "typeName": "BTreeMap<AccountId, ScaledAmount<C>>"
                    },
                    {
                      "name": "pending_boosts",
                      "type": 668,
                      "typeName": "BTreeMap<PrewitnessedDepositId, BTreeMap<AccountId, OwedAmountScaled<C>\n>>"
                    },
                    {
                      "name": "pending_withdrawals",
                      "type": 531,
                      "typeName": "BTreeMap<AccountId, BTreeSet<PrewitnessedDepositId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 664,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "ScaledAmount"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "val",
                      "type": 70,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 665,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 664
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 666
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 666,
            "type": {
              "def": {
                "sequence": {
                  "type": 667
                }
              }
            }
          },
          {
            "id": 667,
            "type": {
              "def": {
                "tuple": [
                  0,
                  664
                ]
              }
            }
          },
          {
            "id": 668,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 9
                },
                {
                  "name": "V",
                  "type": 669
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 673
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 669,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 670
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 671
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 670,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "OwedAmount"
              ],
              "params": [
                {
                  "name": "AmountT",
                  "type": 664
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 664,
                      "typeName": "AmountT"
                    },
                    {
                      "name": "fee",
                      "type": 664,
                      "typeName": "AmountT"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 671,
            "type": {
              "def": {
                "sequence": {
                  "type": 672
                }
              }
            }
          },
          {
            "id": 672,
            "type": {
              "def": {
                "tuple": [
                  0,
                  670
                ]
              }
            }
          },
          {
            "id": 673,
            "type": {
              "def": {
                "sequence": {
                  "type": 674
                }
              }
            }
          },
          {
            "id": 674,
            "type": {
              "def": {
                "tuple": [
                  9,
                  669
                ]
              }
            }
          },
          {
            "id": 675,
            "type": {
              "def": {
                "sequence": {
                  "type": 676
                }
              }
            }
          },
          {
            "id": 676,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "FetchOrTransfer"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fetch",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "C::ChainAsset"
                        },
                        {
                          "name": "deposit_address",
                          "type": 31,
                          "typeName": "C::ChainAccount"
                        },
                        {
                          "name": "deposit_fetch_id",
                          "type": 536,
                          "typeName": "Option<C::DepositFetchId>"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "C::ChainAmount"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "egress_id",
                          "type": 73,
                          "typeName": "EgressId"
                        },
                        {
                          "name": "asset",
                          "type": 33,
                          "typeName": "C::ChainAsset"
                        },
                        {
                          "name": "destination_address",
                          "type": 31,
                          "typeName": "C::ChainAccount"
                        },
                        {
                          "name": "amount",
                          "type": 70,
                          "typeName": "C::ChainAmount"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 677,
            "type": {
              "def": {
                "sequence": {
                  "type": 678
                }
              }
            }
          },
          {
            "id": 678,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "CrossChainMessage"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "egress_id",
                      "type": 73,
                      "typeName": "EgressId"
                    },
                    {
                      "name": "asset",
                      "type": 33,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "destination_address",
                      "type": 31,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "message",
                      "type": 237,
                      "typeName": "CcmMessage"
                    },
                    {
                      "name": "source_chain",
                      "type": 74,
                      "typeName": "ForeignChain"
                    },
                    {
                      "name": "source_address",
                      "type": 240,
                      "typeName": "Option<ForeignChainAddress>"
                    },
                    {
                      "name": "cf_parameters",
                      "type": 238,
                      "typeName": "CcmCfParameters"
                    },
                    {
                      "name": "gas_budget",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 679,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "DepositTracker"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "unfetched",
                      "type": 70,
                      "typeName": "TargetChainAmount<T, I>"
                    },
                    {
                      "name": "fetched",
                      "type": 70,
                      "typeName": "TargetChainAmount<T, I>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 680,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "PrewitnessedDeposit"
              ],
              "params": [
                {
                  "name": "C",
                  "type": 293
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 33,
                      "typeName": "C::ChainAsset"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "C::ChainAmount"
                    },
                    {
                      "name": "deposit_address",
                      "type": 31,
                      "typeName": "C::ChainAccount"
                    },
                    {
                      "name": "block_height",
                      "type": 9,
                      "typeName": "C::ChainBlockNumber"
                    },
                    {
                      "name": "deposit_details",
                      "type": 5,
                      "typeName": "C::DepositDetails"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 681,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidDepositAddress",
                      "index": 0,
                      "docs": [
                        "The deposit address is not valid. It may have expired or may never have been issued."
                      ]
                    },
                    {
                      "name": "AssetMismatch",
                      "index": 1,
                      "docs": [
                        "A deposit was made using the wrong asset."
                      ]
                    },
                    {
                      "name": "ChannelIdsExhausted",
                      "index": 2,
                      "docs": [
                        "Channel ID has reached maximum"
                      ]
                    },
                    {
                      "name": "MissingPolkadotVault",
                      "index": 3,
                      "docs": [
                        "Polkadot's Vault Account does not exist in storage."
                      ]
                    },
                    {
                      "name": "MissingBitcoinVault",
                      "index": 4,
                      "docs": [
                        "Bitcoin's Vault key does not exist for the current epoch."
                      ]
                    },
                    {
                      "name": "BitcoinChannelIdTooLarge",
                      "index": 5,
                      "docs": [
                        "Channel ID is too large for Bitcoin address derivation"
                      ]
                    },
                    {
                      "name": "BelowEgressDustLimit",
                      "index": 6,
                      "docs": [
                        "The amount is below the minimum egress amount."
                      ]
                    },
                    {
                      "name": "AddBoostFundsDisabled",
                      "index": 7,
                      "docs": [
                        "Adding boost funds is disabled due to safe mode."
                      ]
                    },
                    {
                      "name": "StopBoostingDisabled",
                      "index": 8,
                      "docs": [
                        "Retrieving boost funds disabled due to safe mode."
                      ]
                    },
                    {
                      "name": "BoostPoolAlreadyExists",
                      "index": 9,
                      "docs": [
                        "Cannot create a boost pool if it already exists."
                      ]
                    },
                    {
                      "name": "InvalidBoostPoolTier",
                      "index": 10,
                      "docs": [
                        "Cannot create a boost pool of 0 bps"
                      ]
                    },
                    {
                      "name": "DepositChannelCreationDisabled",
                      "index": 11,
                      "docs": [
                        "Disabled due to safe mode for the chain"
                      ]
                    },
                    {
                      "name": "BoostPoolDoesNotExist",
                      "index": 12,
                      "docs": [
                        "The specified boost pool does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 682,
            "type": {
              "path": [
                "sp_runtime",
                "multiaddress",
                "MultiAddress"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "AccountIndex",
                  "type": 5
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Id",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 209,
                          "typeName": "AccountIndex"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Raw",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Address32",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Address20",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 683,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSignature"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "type": 111,
                          "typeName": "ed25519::Signature"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "type": 162,
                          "typeName": "sr25519::Signature"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "type": 684,
                          "typeName": "ecdsa::Signature"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 684,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Signature"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 685,
                      "typeName": "[u8; SIGNATURE_SERIALIZED_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 685,
            "type": {
              "def": {
                "array": {
                  "len": 65,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 686,
            "type": {
              "def": {
                "tuple": [
                  687,
                  688,
                  689,
                  690,
                  691,
                  693,
                  694,
                  695
                ]
              }
            }
          },
          {
            "id": 687,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 688,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 689,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 690,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 691,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 692,
                      "typeName": "Era"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 692,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "index": 0
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 36
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 45
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 47
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 48
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 49
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 52
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 54
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 55
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 56
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 57
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 58
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 59
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 60
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 61
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 62
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 63
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 64
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 65
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 66
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 67
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 68
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 69
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 70
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 71
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 72
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 73
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 74
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 75
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 76
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 77
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 78
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 79
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 80
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 81
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 82
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 83
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 84
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 85
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 86
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 87
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 88
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 89
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 90
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 91
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 92
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 93
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 94
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 95
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 96
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 97
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 98
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 99
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 101
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 102
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 103
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 104
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 105
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 106
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 107
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 108
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 109
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 110
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 111
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 112
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 113
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 114
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 115
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 116
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 117
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 118
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 119
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 120
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 121
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 122
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 123
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 124
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 125
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 126
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 127
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 128
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 129
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 130
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 131
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 132
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 133
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 134
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 135
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 136
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 137
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 138
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 139
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 140
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 141
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 142
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 143
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 144
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 145
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 146
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 147
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 148
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 149
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 150
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 151
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 152
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 153
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 154
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 155
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 156
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 157
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 158
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 159
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 160
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 161
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 162
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 163
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 164
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 165
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 166
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 167
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 168
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 169
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 170
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 171
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 172
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 173
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 174
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 175
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 176
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 177
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 178
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 179
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 180
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 181
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 182
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 183
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 184
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 185
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 186
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 187
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 188
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 189
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 190
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 191
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 192
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 193
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 194
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 195
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 196
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 197
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 198
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 199
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 200
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 201
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 202
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 203
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 204
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 205
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 206
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 207
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 208
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 209
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 210
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 211
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 212
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 213
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 214
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 215
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 216
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 217
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 218
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 219
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 220
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 221
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 222
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 223
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 224
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 225
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 226
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 227
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 228
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 229
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 230
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 231
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 232
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 233
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 234
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 235
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 236
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 237
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 238
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 239
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 240
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 241
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 242
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 243
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 244
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 245
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 246
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 247
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 248
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 249
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 250
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 251
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 252
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 253
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 254
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 255
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 693,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 216,
                      "typeName": "T::Nonce"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 694,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 695,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "ChargeTransactionPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 210,
                      "typeName": "BalanceOf<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 696,
            "type": {
              "path": [
                "state_chain_runtime",
                "Runtime"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 697,
            "type": {
              "def": {
                "tuple": [
                  64,
                  4
                ]
              }
            }
          },
          {
            "id": 698,
            "type": {
              "def": {
                "tuple": [
                  70,
                  70
                ]
              }
            }
          },
          {
            "id": 699,
            "type": {
              "def": {
                "sequence": {
                  "type": 700
                }
              }
            }
          },
          {
            "id": 700,
            "type": {
              "def": {
                "tuple": [
                  0,
                  11
                ]
              }
            }
          },
          {
            "id": 701,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "ValidatorInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "balance",
                      "type": 70,
                      "typeName": "u128"
                    },
                    {
                      "name": "bond",
                      "type": 70,
                      "typeName": "u128"
                    },
                    {
                      "name": "last_heartbeat",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "reputation_points",
                      "type": 134,
                      "typeName": "i32"
                    },
                    {
                      "name": "keyholder_epochs",
                      "type": 231,
                      "typeName": "Vec<EpochIndex>"
                    },
                    {
                      "name": "is_current_authority",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "is_current_backup",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "is_qualified",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "is_online",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "is_bidding",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "bound_redeem_address",
                      "type": 96,
                      "typeName": "Option<EthereumAddress>"
                    },
                    {
                      "name": "apy_bp",
                      "type": 289,
                      "typeName": "Option<u32>"
                    },
                    {
                      "name": "restricted_balances",
                      "type": 391,
                      "typeName": "BTreeMap<EthereumAddress, u128>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 702,
            "type": {
              "def": {
                "sequence": {
                  "type": 703
                }
              }
            }
          },
          {
            "id": 703,
            "type": {
              "def": {
                "tuple": [
                  135,
                  704
                ]
              }
            }
          },
          {
            "id": 704,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "RuntimeApiPenalty"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "reputation_points",
                      "type": 134,
                      "typeName": "i32"
                    },
                    {
                      "name": "suspension_duration_blocks",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 705,
            "type": {
              "def": {
                "sequence": {
                  "type": 706
                }
              }
            }
          },
          {
            "id": 706,
            "type": {
              "def": {
                "tuple": [
                  135,
                  435
                ]
              }
            }
          },
          {
            "id": 707,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "AuctionState"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "blocks_per_epoch",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "current_epoch_started_at",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "redemption_period_as_percentage",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "min_funding",
                      "type": 70,
                      "typeName": "u128"
                    },
                    {
                      "name": "auction_size_range",
                      "type": 168,
                      "typeName": "(u32, u32)"
                    },
                    {
                      "name": "min_active_bid",
                      "type": 244,
                      "typeName": "Option<u128>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 708,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 709
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 709
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 709,
            "type": {
              "path": [
                "pallet_cf_pools",
                "PoolPriceV1"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "price",
                      "type": 174,
                      "typeName": "Price"
                    },
                    {
                      "name": "sqrt_price",
                      "type": 174,
                      "typeName": "SqrtPriceQ64F96"
                    },
                    {
                      "name": "tick",
                      "type": 134,
                      "typeName": "Tick"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 710,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 711
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 711
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 711,
            "type": {
              "path": [
                "pallet_cf_pools",
                "PoolPriceV2"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sell",
                      "type": 200,
                      "typeName": "Option<SqrtPriceQ64F96>"
                    },
                    {
                      "name": "buy",
                      "type": 200,
                      "typeName": "Option<SqrtPriceQ64F96>"
                    },
                    {
                      "name": "range_order",
                      "type": 174,
                      "typeName": "SqrtPriceQ64F96"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 712,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "DispatchErrorWithMessage"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "type": 11,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 23,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 713,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 714
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 714
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 714,
            "type": {
              "def": {
                "sequence": {
                  "type": 715
                }
              }
            }
          },
          {
            "id": 715,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "SimulateSwapAdditionalOrder"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitOrder",
                      "fields": [
                        {
                          "name": "base_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "quote_asset",
                          "type": 233,
                          "typeName": "Asset"
                        },
                        {
                          "name": "side",
                          "type": 284,
                          "typeName": "Side"
                        },
                        {
                          "name": "tick",
                          "type": 134,
                          "typeName": "Tick"
                        },
                        {
                          "name": "sell_amount",
                          "type": 70,
                          "typeName": "AssetAmount"
                        }
                      ],
                      "index": 0
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 716,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 717
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 717
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 717,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "SimulatedSwapInformation"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "intermediary",
                      "type": 244,
                      "typeName": "Option<AssetAmount>"
                    },
                    {
                      "name": "output",
                      "type": 70,
                      "typeName": "AssetAmount"
                    },
                    {
                      "name": "network_fee",
                      "type": 70,
                      "typeName": "AssetAmount"
                    },
                    {
                      "name": "ingress_fee",
                      "type": 70,
                      "typeName": "AssetAmount"
                    },
                    {
                      "name": "egress_fee",
                      "type": 70,
                      "typeName": "AssetAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 718,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 719
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 719
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 719,
            "type": {
              "path": [
                "pallet_cf_pools",
                "PoolInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "limit_order_fee_hundredth_pips",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "range_order_fee_hundredth_pips",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "range_order_total_fees_earned",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    },
                    {
                      "name": "limit_order_total_fees_earned",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    },
                    {
                      "name": "range_total_swap_inputs",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    },
                    {
                      "name": "limit_total_swap_inputs",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 720,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 721
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 721
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 721,
            "type": {
              "path": [
                "pallet_cf_pools",
                "AskBidMap"
              ],
              "params": [
                {
                  "name": "S",
                  "type": 722
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asks",
                      "type": 722,
                      "typeName": "S"
                    },
                    {
                      "name": "bids",
                      "type": 722,
                      "typeName": "S"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 722,
            "type": {
              "path": [
                "pallet_cf_pools",
                "UnidirectionalPoolDepth"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "limit_orders",
                      "type": 723,
                      "typeName": "UnidirectionalSubPoolDepth"
                    },
                    {
                      "name": "range_orders",
                      "type": 723,
                      "typeName": "UnidirectionalSubPoolDepth"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 723,
            "type": {
              "path": [
                "pallet_cf_pools",
                "UnidirectionalSubPoolDepth"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "price",
                      "type": 200,
                      "typeName": "Option<Price>"
                    },
                    {
                      "name": "depth",
                      "type": 174,
                      "typeName": "Amount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 724,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 725
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 725
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 725,
            "type": {
              "path": [
                "pallet_cf_pools",
                "PoolLiquidity"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "limit_orders",
                      "type": 726,
                      "typeName": "AskBidMap<Vec<LimitOrderLiquidity>>"
                    },
                    {
                      "name": "range_orders",
                      "type": 729,
                      "typeName": "Vec<RangeOrderLiquidity>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 726,
            "type": {
              "path": [
                "pallet_cf_pools",
                "AskBidMap"
              ],
              "params": [
                {
                  "name": "S",
                  "type": 727
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asks",
                      "type": 727,
                      "typeName": "S"
                    },
                    {
                      "name": "bids",
                      "type": 727,
                      "typeName": "S"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 727,
            "type": {
              "def": {
                "sequence": {
                  "type": 728
                }
              }
            }
          },
          {
            "id": 728,
            "type": {
              "path": [
                "pallet_cf_pools",
                "LimitOrderLiquidity"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "tick",
                      "type": 134,
                      "typeName": "Tick"
                    },
                    {
                      "name": "amount",
                      "type": 174,
                      "typeName": "Amount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 729,
            "type": {
              "def": {
                "sequence": {
                  "type": 730
                }
              }
            }
          },
          {
            "id": 730,
            "type": {
              "path": [
                "pallet_cf_pools",
                "RangeOrderLiquidity"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "tick",
                      "type": 134,
                      "typeName": "Tick"
                    },
                    {
                      "name": "liquidity",
                      "type": 174,
                      "typeName": "Amount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 731,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 628
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 628
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 732,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 733
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 733
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 733,
            "type": {
              "path": [
                "pallet_cf_pools",
                "PoolOrderbook"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bids",
                      "type": 734,
                      "typeName": "Vec<PoolOrder>"
                    },
                    {
                      "name": "asks",
                      "type": 734,
                      "typeName": "Vec<PoolOrder>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 734,
            "type": {
              "def": {
                "sequence": {
                  "type": 735
                }
              }
            }
          },
          {
            "id": 735,
            "type": {
              "path": [
                "pallet_cf_pools",
                "PoolOrder"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 174,
                      "typeName": "Amount"
                    },
                    {
                      "name": "sqrt_price",
                      "type": 174,
                      "typeName": "SqrtPriceQ64F96"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 736,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 737
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 737
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 737,
            "type": {
              "path": [
                "pallet_cf_pools",
                "PoolOrders"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 696
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "limit_orders",
                      "type": 738,
                      "typeName": "AskBidMap<Vec<LimitOrder<T>>>"
                    },
                    {
                      "name": "range_orders",
                      "type": 741,
                      "typeName": "Vec<RangeOrder<T>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 738,
            "type": {
              "path": [
                "pallet_cf_pools",
                "AskBidMap"
              ],
              "params": [
                {
                  "name": "S",
                  "type": 739
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asks",
                      "type": 739,
                      "typeName": "S"
                    },
                    {
                      "name": "bids",
                      "type": 739,
                      "typeName": "S"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 739,
            "type": {
              "def": {
                "sequence": {
                  "type": 740
                }
              }
            }
          },
          {
            "id": 740,
            "type": {
              "path": [
                "pallet_cf_pools",
                "LimitOrder"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 696
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "lp",
                      "type": 0,
                      "typeName": "T::AccountId"
                    },
                    {
                      "name": "id",
                      "type": 174,
                      "typeName": "Amount"
                    },
                    {
                      "name": "tick",
                      "type": 134,
                      "typeName": "Tick"
                    },
                    {
                      "name": "sell_amount",
                      "type": 174,
                      "typeName": "Amount"
                    },
                    {
                      "name": "fees_earned",
                      "type": 174,
                      "typeName": "Amount"
                    },
                    {
                      "name": "original_sell_amount",
                      "type": 174,
                      "typeName": "Amount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 741,
            "type": {
              "def": {
                "sequence": {
                  "type": 742
                }
              }
            }
          },
          {
            "id": 742,
            "type": {
              "path": [
                "pallet_cf_pools",
                "RangeOrder"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 696
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "lp",
                      "type": 0,
                      "typeName": "T::AccountId"
                    },
                    {
                      "name": "id",
                      "type": 174,
                      "typeName": "Amount"
                    },
                    {
                      "name": "range",
                      "type": 280,
                      "typeName": "Range<Tick>"
                    },
                    {
                      "name": "liquidity",
                      "type": 70,
                      "typeName": "Liquidity"
                    },
                    {
                      "name": "fees_earned",
                      "type": 628,
                      "typeName": "PoolPairsMap<Amount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 743,
            "type": {
              "def": {
                "sequence": {
                  "type": 70
                }
              }
            }
          },
          {
            "id": 744,
            "type": {
              "def": {
                "sequence": {
                  "type": 745
                }
              }
            }
          },
          {
            "id": 745,
            "type": {
              "def": {
                "tuple": [
                  746,
                  4
                ]
              }
            }
          },
          {
            "id": 746,
            "type": {
              "path": [
                "pallet_cf_swapping",
                "SwapLegInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "swap_id",
                      "type": 9,
                      "typeName": "SwapId"
                    },
                    {
                      "name": "base_asset",
                      "type": 233,
                      "typeName": "Asset"
                    },
                    {
                      "name": "quote_asset",
                      "type": 233,
                      "typeName": "Asset"
                    },
                    {
                      "name": "side",
                      "type": 284,
                      "typeName": "Side"
                    },
                    {
                      "name": "amount",
                      "type": 70,
                      "typeName": "AssetAmount"
                    },
                    {
                      "name": "source_asset",
                      "type": 747,
                      "typeName": "Option<Asset>"
                    },
                    {
                      "name": "source_amount",
                      "type": 244,
                      "typeName": "Option<AssetAmount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 747,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 233
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 233
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 748,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "LiquidityProviderInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "refund_addresses",
                      "type": 749,
                      "typeName": "Vec<(ForeignChain, Option<ForeignChainAddress>)>"
                    },
                    {
                      "name": "balances",
                      "type": 751,
                      "typeName": "Vec<(Asset, AssetAmount)>"
                    },
                    {
                      "name": "earned_fees",
                      "type": 753,
                      "typeName": "AssetMap<AssetAmount>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 749,
            "type": {
              "def": {
                "sequence": {
                  "type": 750
                }
              }
            }
          },
          {
            "id": 750,
            "type": {
              "def": {
                "tuple": [
                  74,
                  240
                ]
              }
            }
          },
          {
            "id": 751,
            "type": {
              "def": {
                "sequence": {
                  "type": 752
                }
              }
            }
          },
          {
            "id": 752,
            "type": {
              "def": {
                "tuple": [
                  233,
                  70
                ]
              }
            }
          },
          {
            "id": 753,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "any",
                "AssetMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "eth",
                      "type": 754,
                      "typeName": "super::eth::AssetMap::<T>"
                    },
                    {
                      "name": "dot",
                      "type": 755,
                      "typeName": "super::dot::AssetMap::<T>"
                    },
                    {
                      "name": "btc",
                      "type": 756,
                      "typeName": "super::btc::AssetMap::<T>"
                    },
                    {
                      "name": "arb",
                      "type": 757,
                      "typeName": "super::arb::AssetMap::<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 754,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "eth",
                "AssetMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "eth",
                      "type": 70,
                      "typeName": "T"
                    },
                    {
                      "name": "flip",
                      "type": 70,
                      "typeName": "T"
                    },
                    {
                      "name": "usdc",
                      "type": 70,
                      "typeName": "T"
                    },
                    {
                      "name": "usdt",
                      "type": 70,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 755,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "dot",
                "AssetMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "dot",
                      "type": 70,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 756,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "btc",
                "AssetMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "btc",
                      "type": 70,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 757,
            "type": {
              "path": [
                "cf_primitives",
                "chains",
                "assets",
                "arb",
                "AssetMap"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "eth",
                      "type": 70,
                      "typeName": "T"
                    },
                    {
                      "name": "usdc",
                      "type": 70,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 758,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "BrokerInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "earned_fees",
                      "type": 751,
                      "typeName": "Vec<(Asset, AssetAmount)>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 759,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 77
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 77
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 760,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 753
                },
                {
                  "name": "E",
                  "type": 712
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 753
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 712
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 761,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 328
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 328
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 762,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 763
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 763
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 763,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "FailingWitnessValidators"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "failing_count",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "validators",
                      "type": 764,
                      "typeName": "Vec<(cf_primitives::AccountId, String, bool)>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 764,
            "type": {
              "def": {
                "sequence": {
                  "type": 765
                }
              }
            }
          },
          {
            "id": 765,
            "type": {
              "def": {
                "tuple": [
                  0,
                  370,
                  28
                ]
              }
            }
          },
          {
            "id": 766,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "EventFilter"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AllEvents",
                      "index": 0
                    },
                    {
                      "name": "SystemOnly",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 767,
            "type": {
              "def": {
                "sequence": {
                  "type": 17
                }
              }
            }
          },
          {
            "id": 768,
            "type": {
              "def": {
                "sequence": {
                  "type": 769
                }
              }
            }
          },
          {
            "id": 769,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "BoostPoolDepth"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 233,
                      "typeName": "Asset"
                    },
                    {
                      "name": "tier",
                      "type": 110,
                      "typeName": "u16"
                    },
                    {
                      "name": "available_amount",
                      "type": 70,
                      "typeName": "AssetAmount"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 770,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 110
                },
                {
                  "name": "V",
                  "type": 771
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 779
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 771,
            "type": {
              "path": [
                "state_chain_runtime",
                "runtime_apis",
                "BoostPoolDetails"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "available_amounts",
                      "type": 407,
                      "typeName": "BTreeMap<AccountId32, AssetAmount>"
                    },
                    {
                      "name": "pending_boosts",
                      "type": 772,
                      "typeName": "BTreeMap<PrewitnessedDepositId, BTreeMap<AccountId32, OwedAmount<\nAssetAmount>>>"
                    },
                    {
                      "name": "pending_withdrawals",
                      "type": 531,
                      "typeName": "BTreeMap<AccountId32, BTreeSet<PrewitnessedDepositId>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 772,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 9
                },
                {
                  "name": "V",
                  "type": 773
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 777
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 773,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 774
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 775
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 774,
            "type": {
              "path": [
                "pallet_cf_ingress_egress",
                "boost_pool",
                "OwedAmount"
              ],
              "params": [
                {
                  "name": "AmountT",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 70,
                      "typeName": "AmountT"
                    },
                    {
                      "name": "fee",
                      "type": 70,
                      "typeName": "AmountT"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 775,
            "type": {
              "def": {
                "sequence": {
                  "type": 776
                }
              }
            }
          },
          {
            "id": 776,
            "type": {
              "def": {
                "tuple": [
                  0,
                  774
                ]
              }
            }
          },
          {
            "id": 777,
            "type": {
              "def": {
                "sequence": {
                  "type": 778
                }
              }
            }
          },
          {
            "id": 778,
            "type": {
              "def": {
                "tuple": [
                  9,
                  773
                ]
              }
            }
          },
          {
            "id": 779,
            "type": {
              "def": {
                "sequence": {
                  "type": 780
                }
              }
            }
          },
          {
            "id": 780,
            "type": {
              "def": {
                "tuple": [
                  110,
                  771
                ]
              }
            }
          },
          {
            "id": 781,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "block",
                "Block"
              ],
              "params": [
                {
                  "name": "Header",
                  "type": 782
                },
                {
                  "name": "Extrinsic",
                  "type": 783
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "header",
                      "type": 782,
                      "typeName": "Header"
                    },
                    {
                      "name": "extrinsics",
                      "type": 784,
                      "typeName": "Vec<Extrinsic>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 782,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 10,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "number",
                      "type": 216,
                      "typeName": "Number"
                    },
                    {
                      "name": "state_root",
                      "type": 10,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 10,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "digest",
                      "type": 12,
                      "typeName": "Digest"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 783,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 682
                },
                {
                  "name": "Call",
                  "type": 82
                },
                {
                  "name": "Signature",
                  "type": 683
                },
                {
                  "name": "Extra",
                  "type": 686
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 784,
            "type": {
              "def": {
                "sequence": {
                  "type": 783
                }
              }
            }
          },
          {
            "id": 785,
            "type": {
              "path": [
                "sp_core",
                "OpaqueMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 786,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 785
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 785
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 787,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 324
                },
                {
                  "name": "E",
                  "type": 788
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 324
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 788
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 788,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionValidityError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Invalid",
                      "fields": [
                        {
                          "type": 789,
                          "typeName": "InvalidTransaction"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Unknown",
                      "fields": [
                        {
                          "type": 790,
                          "typeName": "UnknownTransaction"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 789,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "InvalidTransaction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "index": 0
                    },
                    {
                      "name": "Payment",
                      "index": 1
                    },
                    {
                      "name": "Future",
                      "index": 2
                    },
                    {
                      "name": "Stale",
                      "index": 3
                    },
                    {
                      "name": "BadProof",
                      "index": 4
                    },
                    {
                      "name": "AncientBirthBlock",
                      "index": 5
                    },
                    {
                      "name": "ExhaustsResources",
                      "index": 6
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "BadMandatory",
                      "index": 8
                    },
                    {
                      "name": "MandatoryValidation",
                      "index": 9
                    },
                    {
                      "name": "BadSigner",
                      "index": 10
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 790,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "UnknownTransaction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CannotLookup",
                      "index": 0
                    },
                    {
                      "name": "NoUnsignedValidator",
                      "index": 1
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 791,
            "type": {
              "path": [
                "sp_inherents",
                "InherentData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "data",
                      "type": 792,
                      "typeName": "BTreeMap<InherentIdentifier, Vec<u8>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 792,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 383
                },
                {
                  "name": "V",
                  "type": 11
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 793
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 793,
            "type": {
              "def": {
                "sequence": {
                  "type": 794
                }
              }
            }
          },
          {
            "id": 794,
            "type": {
              "def": {
                "tuple": [
                  383,
                  11
                ]
              }
            }
          },
          {
            "id": 795,
            "type": {
              "path": [
                "sp_inherents",
                "CheckInherentsResult"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "okay",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "fatal_error",
                      "type": 28,
                      "typeName": "bool"
                    },
                    {
                      "name": "errors",
                      "type": 791,
                      "typeName": "InherentData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 796,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionSource"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InBlock",
                      "index": 0
                    },
                    {
                      "name": "Local",
                      "index": 1
                    },
                    {
                      "name": "External",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 797,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 798
                },
                {
                  "name": "E",
                  "type": 788
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 798
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 788
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 798,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "ValidTransaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "priority",
                      "type": 9,
                      "typeName": "TransactionPriority"
                    },
                    {
                      "name": "requires",
                      "type": 86,
                      "typeName": "Vec<TransactionTag>"
                    },
                    {
                      "name": "provides",
                      "type": 86,
                      "typeName": "Vec<TransactionTag>"
                    },
                    {
                      "name": "longevity",
                      "type": 9,
                      "typeName": "TransactionLongevity"
                    },
                    {
                      "name": "propagate",
                      "type": 28,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 799,
            "type": {
              "path": [
                "sp_consensus_slots",
                "SlotDuration"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 9,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 800,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 11
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 11
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 801,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 802
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 802
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 802,
            "type": {
              "def": {
                "sequence": {
                  "type": 803
                }
              }
            }
          },
          {
            "id": 803,
            "type": {
              "def": {
                "tuple": [
                  11,
                  414
                ]
              }
            }
          },
          {
            "id": 804,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "OpaqueKeyOwnershipProof"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 11,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 805,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 5
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 5
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 806,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 804
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 804
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 807,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "RuntimeDispatchInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 70
                },
                {
                  "name": "Weight",
                  "type": 7
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 7,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 21,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "partial_fee",
                      "type": 70,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 808,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "FeeDetails"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "inclusion_fee",
                      "type": 809,
                      "typeName": "Option<InclusionFee<Balance>>"
                    },
                    {
                      "name": "tip",
                      "type": 70,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 809,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 810
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 810
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 810,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "InclusionFee"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 70
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_fee",
                      "type": 70,
                      "typeName": "Balance"
                    },
                    {
                      "name": "len_fee",
                      "type": 70,
                      "typeName": "Balance"
                    },
                    {
                      "name": "adjusted_weight_fee",
                      "type": 70,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 811,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 5
                },
                {
                  "name": "E",
                  "type": 370
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 5
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 370
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 812,
            "type": {
              "path": [
                "state_chain_runtime",
                "RuntimeError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 384,
                          "typeName": "frame_system::Error<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Environment",
                      "fields": [
                        {
                          "type": 386,
                          "typeName": "pallet_cf_environment::Error<Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Flip",
                      "fields": [
                        {
                          "type": 388,
                          "typeName": "pallet_cf_flip::Error<Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Emissions",
                      "fields": [
                        {
                          "type": 389,
                          "typeName": "pallet_cf_emissions::Error<Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Funding",
                      "fields": [
                        {
                          "type": 394,
                          "typeName": "pallet_cf_funding::Error<Runtime>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "AccountRoles",
                      "fields": [
                        {
                          "type": 398,
                          "typeName": "pallet_cf_account_roles::Error<Runtime>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Witnesser",
                      "fields": [
                        {
                          "type": 404,
                          "typeName": "pallet_cf_witnesser::Error<Runtime>"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Validator",
                      "fields": [
                        {
                          "type": 410,
                          "typeName": "pallet_cf_validator::Error<Runtime>"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "type": 415,
                          "typeName": "pallet_session::Error<Runtime>"
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "type": 422,
                          "typeName": "pallet_grandpa::Error<Runtime>"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Governance",
                      "fields": [
                        {
                          "type": 428,
                          "typeName": "pallet_cf_governance::Error<Runtime>"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "TokenholderGovernance",
                      "fields": [
                        {
                          "type": 432,
                          "typeName": "pallet_cf_tokenholder_governance::Error<Runtime>"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Reputation",
                      "fields": [
                        {
                          "type": 437,
                          "typeName": "pallet_cf_reputation::Error<Runtime>"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "EthereumChainTracking",
                      "fields": [
                        {
                          "type": 438,
                          "typeName": "pallet_cf_chain_tracking::Error<Runtime, pallet_cf_chain_tracking::\nInstance1>"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "PolkadotChainTracking",
                      "fields": [
                        {
                          "type": 439,
                          "typeName": "pallet_cf_chain_tracking::Error<Runtime, pallet_cf_chain_tracking::\nInstance2>"
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "BitcoinChainTracking",
                      "fields": [
                        {
                          "type": 440,
                          "typeName": "pallet_cf_chain_tracking::Error<Runtime, pallet_cf_chain_tracking::\nInstance3>"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "EthereumVault",
                      "fields": [
                        {
                          "type": 442,
                          "typeName": "pallet_cf_vaults::Error<Runtime, pallet_cf_vaults::Instance1>"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "PolkadotVault",
                      "fields": [
                        {
                          "type": 444,
                          "typeName": "pallet_cf_vaults::Error<Runtime, pallet_cf_vaults::Instance2>"
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "BitcoinVault",
                      "fields": [
                        {
                          "type": 446,
                          "typeName": "pallet_cf_vaults::Error<Runtime, pallet_cf_vaults::Instance3>"
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "EvmThresholdSigner",
                      "fields": [
                        {
                          "type": 463,
                          "typeName": "pallet_cf_threshold_signature::Error<Runtime,\npallet_cf_threshold_signature::Instance16>"
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "PolkadotThresholdSigner",
                      "fields": [
                        {
                          "type": 476,
                          "typeName": "pallet_cf_threshold_signature::Error<Runtime,\npallet_cf_threshold_signature::Instance2>"
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "BitcoinThresholdSigner",
                      "fields": [
                        {
                          "type": 489,
                          "typeName": "pallet_cf_threshold_signature::Error<Runtime,\npallet_cf_threshold_signature::Instance3>"
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "EthereumBroadcaster",
                      "fields": [
                        {
                          "type": 496,
                          "typeName": "pallet_cf_broadcast::Error<Runtime, pallet_cf_broadcast::Instance1>"
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "PolkadotBroadcaster",
                      "fields": [
                        {
                          "type": 499,
                          "typeName": "pallet_cf_broadcast::Error<Runtime, pallet_cf_broadcast::Instance2>"
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "BitcoinBroadcaster",
                      "fields": [
                        {
                          "type": 502,
                          "typeName": "pallet_cf_broadcast::Error<Runtime, pallet_cf_broadcast::Instance3>"
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Swapping",
                      "fields": [
                        {
                          "type": 508,
                          "typeName": "pallet_cf_swapping::Error<Runtime>"
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "LiquidityProvider",
                      "fields": [
                        {
                          "type": 510,
                          "typeName": "pallet_cf_lp::Error<Runtime>"
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "EthereumIngressEgress",
                      "fields": [
                        {
                          "type": 547,
                          "typeName": "pallet_cf_ingress_egress::Error<Runtime, pallet_cf_ingress_egress::\nInstance1>"
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "PolkadotIngressEgress",
                      "fields": [
                        {
                          "type": 572,
                          "typeName": "pallet_cf_ingress_egress::Error<Runtime, pallet_cf_ingress_egress::\nInstance2>"
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "BitcoinIngressEgress",
                      "fields": [
                        {
                          "type": 598,
                          "typeName": "pallet_cf_ingress_egress::Error<Runtime, pallet_cf_ingress_egress::\nInstance3>"
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "LiquidityPools",
                      "fields": [
                        {
                          "type": 642,
                          "typeName": "pallet_cf_pools::Error<Runtime>"
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "ArbitrumChainTracking",
                      "fields": [
                        {
                          "type": 654,
                          "typeName": "pallet_cf_chain_tracking::Error<Runtime, pallet_cf_chain_tracking::\nInstance4>"
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "ArbitrumVault",
                      "fields": [
                        {
                          "type": 656,
                          "typeName": "pallet_cf_vaults::Error<Runtime, pallet_cf_vaults::Instance4>"
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "ArbitrumBroadcaster",
                      "fields": [
                        {
                          "type": 659,
                          "typeName": "pallet_cf_broadcast::Error<Runtime, pallet_cf_broadcast::Instance4>"
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "ArbitrumIngressEgress",
                      "fields": [
                        {
                          "type": 681,
                          "typeName": "pallet_cf_ingress_egress::Error<Runtime, pallet_cf_ingress_egress::\nInstance4>"
                        }
                      ],
                      "index": 40
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "entries": [
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The full account information for a particular account ID."
                ]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total extrinsics count for the current block."
                ]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current weight for the block."
                ]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 10
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Map of block numbers to block hashes."
                ]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 11
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "ty": {
                  "Plain": 10
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Hash of the previous block."
                ]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "ty": {
                  "Plain": 12
                },
                "default": [
                  0
                ],
                "docs": [
                  " Digest of the current block, also part of the block header."
                ]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "ty": {
                  "Plain": 16
                },
                "default": [
                  0
                ],
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of events in the `Events<T>` list."
                ]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 10,
                    "value": 368
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 369
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 28
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 28
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "ty": {
                  "Plain": 366
                },
                "default": [
                  0
                ],
                "docs": [
                  " The execution phase of the block."
                ]
              },
              {
                "name": "AuthorizedUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 371
                },
                "default": [
                  0
                ],
                "docs": [
                  " `Some` if a code upgrade has been authorized."
                ]
              }
            ]
          },
          "calls": {
            "ty": 83
          },
          "event": {
            "ty": 19
          },
          "constants": [
            {
              "name": "BlockWeights",
              "ty": 372,
              "value": [
                2,
                91,
                31,
                93,
                0,
                11,
                0,
                32,
                74,
                169,
                209,
                1,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                194,
                160,
                169,
                29,
                0,
                1,
                7,
                208,
                215,
                76,
                60,
                186,
                19,
                102,
                102,
                102,
                102,
                102,
                102,
                102,
                102,
                1,
                7,
                0,
                16,
                165,
                212,
                232,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                127,
                1,
                0,
                0,
                194,
                160,
                169,
                29,
                0,
                1,
                11,
                208,
                231,
                241,
                16,
                163,
                1,
                19,
                102,
                102,
                102,
                102,
                102,
                102,
                102,
                230,
                1,
                11,
                0,
                32,
                74,
                169,
                209,
                1,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                1,
                7,
                0,
                16,
                165,
                212,
                232,
                19,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                128,
                194,
                160,
                169,
                29,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ]
            },
            {
              "name": "BlockLength",
              "ty": 376,
              "value": [
                0,
                0,
                40,
                0,
                0,
                0,
                80,
                0,
                0,
                0,
                80,
                0
              ],
              "docs": [
                " The maximum length of a block (in bytes)."
              ]
            },
            {
              "name": "BlockHashCount",
              "ty": 4,
              "value": [
                96,
                9,
                0,
                0
              ],
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ]
            },
            {
              "name": "DbWeight",
              "ty": 378,
              "value": [
                0,
                18,
                122,
                0,
                0,
                0,
                0,
                0,
                128,
                240,
                250,
                2,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ]
            },
            {
              "name": "Version",
              "ty": 379,
              "value": [
                56,
                99,
                104,
                97,
                105,
                110,
                102,
                108,
                105,
                112,
                45,
                110,
                111,
                100,
                101,
                56,
                99,
                104,
                97,
                105,
                110,
                102,
                108,
                105,
                112,
                45,
                110,
                111,
                100,
                101,
                1,
                0,
                0,
                0,
                142,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                52,
                183,
                251,
                48,
                219,
                157,
                150,
                112,
                58,
                1,
                0,
                0,
                0,
                223,
                106,
                203,
                104,
                153,
                7,
                96,
                155,
                4,
                0,
                0,
                0,
                55,
                227,
                151,
                252,
                124,
                145,
                245,
                228,
                2,
                0,
                0,
                0,
                64,
                254,
                58,
                212,
                1,
                248,
                149,
                154,
                6,
                0,
                0,
                0,
                210,
                188,
                152,
                151,
                238,
                208,
                143,
                21,
                3,
                0,
                0,
                0,
                247,
                139,
                39,
                139,
                229,
                63,
                69,
                76,
                2,
                0,
                0,
                0,
                221,
                113,
                141,
                92,
                197,
                50,
                98,
                212,
                1,
                0,
                0,
                0,
                171,
                60,
                5,
                114,
                41,
                31,
                235,
                139,
                1,
                0,
                0,
                0,
                237,
                153,
                197,
                172,
                178,
                94,
                237,
                245,
                3,
                0,
                0,
                0,
                188,
                157,
                137,
                144,
                79,
                91,
                146,
                63,
                1,
                0,
                0,
                0,
                55,
                200,
                187,
                19,
                80,
                169,
                162,
                168,
                4,
                0,
                0,
                0,
                243,
                255,
                20,
                213,
                171,
                82,
                112,
                89,
                3,
                0,
                0,
                0,
                251,
                197,
                119,
                185,
                215,
                71,
                239,
                214,
                1,
                0,
                0,
                0,
                12,
                0,
                0,
                0,
                1
              ],
              "docs": [
                " Get the chain's current version."
              ]
            },
            {
              "name": "SS58Prefix",
              "ty": 110,
              "value": [
                64,
                8
              ],
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "error": {
            "ty": 384
          },
          "index": 0,
          "docs": []
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "entries": [
              {
                "name": "Now",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current time for the current block."
                ]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "ty": {
                  "Plain": 28
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether the timestamp has been updated in this block.",
                  "",
                  " This value is updated to `true` upon successful submission of a timestamp by a node.",
                  " It is then checked at the end of each block execution in the `on_finalize` hook."
                ]
              }
            ]
          },
          "calls": {
            "ty": 87
          },
          "event": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "ty": 9,
              "value": [
                184,
                11,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum period between blocks.",
                "",
                " Be aware that this is different to the *expected* period that the block production",
                " apparatus provides. Your chosen consensus system will generally work with this to",
                " determine a sensible block time. For example, in the Aura pallet it will be double this",
                " period on default settings."
              ]
            }
          ],
          "error": null,
          "index": 1,
          "docs": []
        },
        {
          "name": "Environment",
          "storage": {
            "prefix": "Environment",
            "entries": [
              {
                "name": "EthereumSupportedAssets",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 30,
                    "value": 31
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Map of supported assets for ETH"
                ]
              },
              {
                "name": "EthereumStateChainGatewayAddress",
                "modifier": "Default",
                "ty": {
                  "Plain": 31
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The address of the ETH state chain gatweay contract"
                ]
              },
              {
                "name": "EthereumKeyManagerAddress",
                "modifier": "Default",
                "ty": {
                  "Plain": 31
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The address of the ETH key manager contract"
                ]
              },
              {
                "name": "EthereumVaultAddress",
                "modifier": "Default",
                "ty": {
                  "Plain": 31
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The address of the ETH vault contract"
                ]
              },
              {
                "name": "EthereumAddressCheckerAddress",
                "modifier": "Default",
                "ty": {
                  "Plain": 31
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The address of the Address Checker contract on ETH"
                ]
              },
              {
                "name": "EthereumChainId",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The ETH chain id"
                ]
              },
              {
                "name": "EthereumSignatureNonce",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "PolkadotGenesisHash",
                "modifier": "Default",
                "ty": {
                  "Plain": 10
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "PolkadotVaultAccountId",
                "modifier": "Optional",
                "ty": {
                  "Plain": 34
                },
                "default": [
                  0
                ],
                "docs": [
                  " The Polkadot Vault Anonymous Account"
                ]
              },
              {
                "name": "PolkadotProxyAccountNonce",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current Nonce of the current Polkadot Proxy Account"
                ]
              },
              {
                "name": "BitcoinAvailableUtxos",
                "modifier": "Default",
                "ty": {
                  "Plain": 58
                },
                "default": [
                  0
                ],
                "docs": [
                  " The set of available UTXOs available in our Bitcoin Vault."
                ]
              },
              {
                "name": "ConsolidationParameters",
                "modifier": "Default",
                "ty": {
                  "Plain": 57
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "ArbitrumSupportedAssets",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 33,
                    "value": 31
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Map of supported assets for ARB"
                ]
              },
              {
                "name": "ArbitrumKeyManagerAddress",
                "modifier": "Default",
                "ty": {
                  "Plain": 31
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The address of the ARB key manager contract"
                ]
              },
              {
                "name": "ArbitrumVaultAddress",
                "modifier": "Default",
                "ty": {
                  "Plain": 31
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The address of the ARB vault contract"
                ]
              },
              {
                "name": "ArbitrumAddressCheckerAddress",
                "modifier": "Default",
                "ty": {
                  "Plain": 31
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The address of the Address Checker contract on Arbitrum."
                ]
              },
              {
                "name": "ArbitrumChainId",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The ARB chain id"
                ]
              },
              {
                "name": "ArbitrumSignatureNonce",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "RuntimeSafeMode",
                "modifier": "Default",
                "ty": {
                  "Plain": 36
                },
                "default": [
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  0,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1,
                  1
                ],
                "docs": [
                  " Stores the current safe mode state for the runtime."
                ]
              },
              {
                "name": "CurrentReleaseVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 104
                },
                "default": [
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Always set to the current release version. We duplicate the `CurrentReleaseVersion` pallet",
                  " constant to allow querying the value by block hash."
                ]
              },
              {
                "name": "ChainflipNetworkEnvironment",
                "modifier": "Default",
                "ty": {
                  "Plain": 385
                },
                "default": [
                  2
                ],
                "docs": [
                  " Contains the network environment for this runtime."
                ]
              }
            ]
          },
          "calls": {
            "ty": 88
          },
          "event": {
            "ty": 29
          },
          "constants": [
            {
              "name": "CurrentReleaseVersion",
              "ty": 104,
              "value": [
                1,
                4,
                3
              ],
              "docs": [
                " Used to access the current Chainflip runtime's release version (distinct from the",
                " substrate RuntimeVersion)"
              ]
            }
          ],
          "error": {
            "ty": 386
          },
          "index": 2,
          "docs": []
        },
        {
          "name": "Flip",
          "storage": {
            "prefix": "Flip",
            "entries": [
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 387
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Funds belonging to on-chain accounts."
                ]
              },
              {
                "name": "Reserve",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 15,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Funds belonging to on-chain reserves."
                ]
              },
              {
                "name": "PendingRedemptionsReserve",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 70
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total number of tokens issued."
                ]
              },
              {
                "name": "SlashingRate",
                "modifier": "Default",
                "ty": {
                  "Plain": 71
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The per-day slashing rate expressed as a proportion of a validator's bond."
                ]
              },
              {
                "name": "OffchainFunds",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of tokens currently off-chain."
                ]
              }
            ]
          },
          "calls": {
            "ty": 92
          },
          "event": {
            "ty": 67
          },
          "constants": [
            {
              "name": "BlocksPerDay",
              "ty": 4,
              "value": [
                64,
                56,
                0,
                0
              ],
              "docs": [
                " Blocks per day."
              ]
            }
          ],
          "error": {
            "ty": 388
          },
          "index": 3,
          "docs": []
        },
        {
          "name": "Emissions",
          "storage": {
            "prefix": "Emissions",
            "entries": [
              {
                "name": "LastSupplyUpdateBlock",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The block number at which we last updated supply to the Eth Chain."
                ]
              },
              {
                "name": "CurrentAuthorityEmissionPerBlock",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The amount of Flip we mint to validators per block."
                ]
              },
              {
                "name": "BackupNodeEmissionPerBlock",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The amount of Flip we mint to backup nodes per block."
                ]
              },
              {
                "name": "CurrentAuthorityEmissionInflation",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Inflation per `COMPOUNDING_INTERVAL` set aside for current authorities in parts per billion."
                ]
              },
              {
                "name": "BackupNodeEmissionInflation",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Inflation per `COMPOUNDING_INTERVAL` set aside for *backup* nodes, in parts per billion."
                ]
              },
              {
                "name": "SupplyUpdateInterval",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Mint interval in blocks"
                ]
              }
            ]
          },
          "calls": {
            "ty": 93
          },
          "event": {
            "ty": 72
          },
          "constants": [
            {
              "name": "CompoundingInterval",
              "ty": 4,
              "value": [
                150,
                0,
                0,
                0
              ],
              "docs": [
                " The number of blocks for the time frame we would test liveliness within"
              ]
            }
          ],
          "error": {
            "ty": 389
          },
          "index": 4,
          "docs": []
        },
        {
          "name": "Funding",
          "storage": {
            "prefix": "Funding",
            "entries": [
              {
                "name": "PendingRedemptions",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 390
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " PendingRedemptions stores a Pending enum for the account until the redemption is executed",
                  " or the redemption expires."
                ]
              },
              {
                "name": "MinimumFunding",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The minimum amount a user can fund their account with, and therefore the minimum balance",
                  " they must have remaining after they redeem."
                ]
              },
              {
                "name": "RedemptionTTLSeconds",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " TTL for a redemption from the moment of issue."
                ]
              },
              {
                "name": "BoundExecutorAddress",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 31
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Registered addresses for an executor."
                ]
              },
              {
                "name": "RestrictedAddresses",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 31,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of restricted addresses"
                ]
              },
              {
                "name": "RestrictedBalances",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 391
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Map that bookkeeps the restricted balances for each address"
                ]
              },
              {
                "name": "BoundRedeemAddress",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 31
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Map of bound addresses for accounts."
                ]
              },
              {
                "name": "RedemptionTax",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fee levied for every redemption request. Can be updated by Governance."
                ]
              }
            ]
          },
          "calls": {
            "ty": 94
          },
          "event": {
            "ty": 75
          },
          "constants": [],
          "error": {
            "ty": 394
          },
          "index": 5,
          "docs": []
        },
        {
          "name": "AccountRoles",
          "storage": {
            "prefix": "AccountRoles",
            "entries": [
              {
                "name": "AccountRoles",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 0,
                    "value": 77
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "VanityNames",
                "modifier": "Default",
                "ty": {
                  "Plain": 395
                },
                "default": [
                  0
                ],
                "docs": [
                  " Vanity names of the validators stored as a Map with the current validator IDs as key."
                ]
              }
            ]
          },
          "calls": {
            "ty": 98
          },
          "event": {
            "ty": 76
          },
          "constants": [],
          "error": {
            "ty": 398
          },
          "index": 6,
          "docs": []
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "entries": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 141
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 399
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": null,
          "event": {
            "ty": 79
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "ty": 2,
              "value": [
                5
              ],
              "docs": [
                " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "error": null,
          "index": 7,
          "docs": []
        },
        {
          "name": "Witnesser",
          "storage": {
            "prefix": "Witnesser",
            "entries": [
              {
                "name": "Votes",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Identity"
                    ],
                    "key": 400,
                    "value": 11
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A lookup mapping (epoch, call_hash) to a bit mask representing the votes for each authority."
                ]
              },
              {
                "name": "ExtraCallData",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Identity"
                    ],
                    "key": 400,
                    "value": 86
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores extra call data for later recomposition."
                ]
              },
              {
                "name": "CallHashExecuted",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Identity"
                    ],
                    "key": 400,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A flag indicating that the CallHash has been executed."
                ]
              },
              {
                "name": "EpochsToCull",
                "modifier": "Default",
                "ty": {
                  "Plain": 231
                },
                "default": [
                  0
                ],
                "docs": [
                  " This stores (expired) epochs that needs to have its data culled."
                ]
              },
              {
                "name": "WitnessedCallsScheduledForDispatch",
                "modifier": "Default",
                "ty": {
                  "Plain": 401
                },
                "default": [
                  0
                ],
                "docs": [
                  " This stores Calls that have already been witnessed but not yet dispatched due to safe mode",
                  " being on."
                ]
              },
              {
                "name": "WitnessDeadline",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 403
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Deadline for witnessing a call. Nodes that did not witness are punished."
                ]
              }
            ]
          },
          "calls": {
            "ty": 99
          },
          "event": {
            "ty": 80
          },
          "constants": [
            {
              "name": "LateWitnessGracePeriod",
              "ty": 4,
              "value": [
                10,
                0,
                0,
                0
              ],
              "docs": [
                " Grace period to witness a call after it has been dispatched."
              ]
            }
          ],
          "error": {
            "ty": 404
          },
          "index": 8,
          "docs": []
        },
        {
          "name": "Validator",
          "storage": {
            "prefix": "Validator",
            "entries": [
              {
                "name": "RedemptionPeriodAsPercentage",
                "modifier": "Default",
                "ty": {
                  "Plain": 102
                },
                "default": [
                  0
                ],
                "docs": [
                  " Percentage of epoch we allow redemptions."
                ]
              },
              {
                "name": "CurrentEpochStartedAt",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The starting block number for the current epoch."
                ]
              },
              {
                "name": "BlocksPerEpoch",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The duration of an epoch in blocks."
                ]
              },
              {
                "name": "CurrentEpoch",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current epoch index."
                ]
              },
              {
                "name": "AuthorityIndex",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 405,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Defines a unique index for each authority for each epoch."
                ]
              },
              {
                "name": "CurrentRotationPhase",
                "modifier": "Default",
                "ty": {
                  "Plain": 308
                },
                "default": [
                  0
                ],
                "docs": [
                  " The rotation phase we are currently at."
                ]
              },
              {
                "name": "CurrentAuthorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0
                ],
                "docs": [
                  " A set of the current authorities."
                ]
              },
              {
                "name": "Bond",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The bond of the current epoch."
                ]
              },
              {
                "name": "AccountPeerMapping",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 406
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Account to Peer Mapping."
                ]
              },
              {
                "name": "MappedPeers",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 109,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Ed25519 public keys (aka peer ids) that are associated with account ids. (We keep track",
                  " of them to ensure they don't somehow get reused between different account ids.)"
                ]
              },
              {
                "name": "NodeCFEVersion",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 104
                  }
                },
                "default": [
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Node CFE version."
                ]
              },
              {
                "name": "LastExpiredEpoch",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The last expired epoch index."
                ]
              },
              {
                "name": "EpochExpiries",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map storing the expiry block numbers for old epochs."
                ]
              },
              {
                "name": "HistoricalAuthorities",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 128
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map between an epoch and the set of authorities (participating in this epoch)."
                ]
              },
              {
                "name": "HistoricalBonds",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A map between an epoch and the bonded balance (MAB)"
                ]
              },
              {
                "name": "HistoricalActiveEpochs",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 231
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map between an authority and a set of all the active epochs a node was an authority in"
                ]
              },
              {
                "name": "Backups",
                "modifier": "Default",
                "ty": {
                  "Plain": 407
                },
                "default": [
                  0
                ],
                "docs": [
                  " Backups, validator nodes who are not in the authority set."
                ]
              },
              {
                "name": "BackupRewardNodePercentage",
                "modifier": "Default",
                "ty": {
                  "Plain": 102
                },
                "default": [
                  0
                ],
                "docs": [
                  " Determines the number of backup nodes who receive rewards as a percentage",
                  " of the authority count."
                ]
              },
              {
                "name": "AuthoritySetMinSize",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The absolute minimum number of authority nodes for the next epoch."
                ]
              },
              {
                "name": "AuctionParameters",
                "modifier": "Default",
                "ty": {
                  "Plain": 103
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Auction parameters."
                ]
              },
              {
                "name": "RegistrationBondPercentage",
                "modifier": "Default",
                "ty": {
                  "Plain": 102
                },
                "default": [
                  0
                ],
                "docs": [
                  " An account's balance must be at least this percentage of the current bond in order to",
                  " register as a validator."
                ]
              },
              {
                "name": "AuctionBidCutoffPercentage",
                "modifier": "Default",
                "ty": {
                  "Plain": 102
                },
                "default": [
                  0
                ],
                "docs": [
                  " Auction losers whose bids are below this percentage of the MAB will not be excluded from",
                  " participating in Keygen."
                ]
              },
              {
                "name": "MinimumReportedCfeVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 104
                },
                "default": [
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Determines the minimum version that each CFE must report to be considered qualified",
                  " for Keygen."
                ]
              },
              {
                "name": "MaxAuthoritySetContractionPercentage",
                "modifier": "Default",
                "ty": {
                  "Plain": 102
                },
                "default": [
                  0
                ],
                "docs": [
                  " Determines the maximum allowed reduction of authority set size in percents between two",
                  " consecutive epochs."
                ]
              },
              {
                "name": "ActiveBidder",
                "modifier": "Default",
                "ty": {
                  "Plain": 127
                },
                "default": [
                  0
                ],
                "docs": [
                  " Store the list of accounts that are active bidders."
                ]
              }
            ]
          },
          "calls": {
            "ty": 100
          },
          "event": {
            "ty": 307
          },
          "constants": [],
          "error": {
            "ty": 410
          },
          "index": 9,
          "docs": []
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "entries": [
              {
                "name": "Validators",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current set of validators."
                ]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Current index of the session."
                ]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "ty": {
                  "Plain": 28
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "ty": {
                  "Plain": 411
                },
                "default": [
                  0
                ],
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "ty": {
                  "Plain": 231
                },
                "default": [
                  0
                ],
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 105
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The next session keys for a validator."
                ]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 413,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                ]
              }
            ]
          },
          "calls": {
            "ty": 113
          },
          "event": {
            "ty": 310
          },
          "constants": [],
          "error": {
            "ty": 415
          },
          "index": 10,
          "docs": []
        },
        {
          "name": "Historical",
          "storage": null,
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 11,
          "docs": []
        },
        {
          "name": "Aura",
          "storage": {
            "prefix": "Aura",
            "entries": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 416
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current authority set."
                ]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "ty": {
                  "Plain": 418
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current slot of this block.",
                  "",
                  " This will be set in `on_initialize`."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 12,
          "docs": []
        },
        {
          "name": "Authorship",
          "storage": {
            "prefix": "Authorship",
            "entries": [
              {
                "name": "Author",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " Author of current block."
                ]
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 13,
          "docs": []
        },
        {
          "name": "Grandpa",
          "storage": {
            "prefix": "Grandpa",
            "entries": [
              {
                "name": "State",
                "modifier": "Default",
                "ty": {
                  "Plain": 419
                },
                "default": [
                  0
                ],
                "docs": [
                  " State of the current authority set."
                ]
              },
              {
                "name": "PendingChange",
                "modifier": "Optional",
                "ty": {
                  "Plain": 420
                },
                "default": [
                  0
                ],
                "docs": [
                  " Pending change: (signaled at, scheduled change)."
                ]
              },
              {
                "name": "NextForced",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " next block number where we can force a change."
                ]
              },
              {
                "name": "Stalled",
                "modifier": "Optional",
                "ty": {
                  "Plain": 168
                },
                "default": [
                  0
                ],
                "docs": [
                  " `true` if we are currently stalled."
                ]
              },
              {
                "name": "CurrentSetId",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of changes (both in terms of keys and underlying economic responsibilities)",
                  " in the \"set\" of Grandpa validators from genesis."
                ]
              },
              {
                "name": "SetIdSession",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from grandpa set ID to the index of the *most recent* session for which its",
                  " members were responsible.",
                  "",
                  " This is only used for validating equivocation proofs. An equivocation proof must",
                  " contains a key-ownership proof for a given session, therefore we need a way to tie",
                  " together sessions and GRANDPA set ids, i.e. we need to validate that a validator",
                  " was the owner of a given key on a given session, and what the active set ID was",
                  " during that session.",
                  "",
                  " TWOX-NOTE: `SetId` is not under user control."
                ]
              },
              {
                "name": "Authorities",
                "modifier": "Default",
                "ty": {
                  "Plain": 421
                },
                "default": [
                  0
                ],
                "docs": [
                  " The current list of authorities."
                ]
              }
            ]
          },
          "calls": {
            "ty": 114
          },
          "event": {
            "ty": 311
          },
          "constants": [
            {
              "name": "MaxAuthorities",
              "ty": 4,
              "value": [
                150,
                0,
                0,
                0
              ],
              "docs": [
                " Max Authorities in use"
              ]
            },
            {
              "name": "MaxNominators",
              "ty": 4,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of nominators for each validator."
              ]
            },
            {
              "name": "MaxSetIdSessionEntries",
              "ty": 9,
              "value": [
                8,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of entries to keep in the set id to session index mapping.",
                "",
                " Since the `SetIdSession` map is only used for validating equivocations this",
                " value should relate to the bonding duration of whatever staking system is",
                " being used (if any). If equivocation handling is not enabled then this value",
                " can be zero."
              ]
            }
          ],
          "error": {
            "ty": 422
          },
          "index": 14,
          "docs": []
        },
        {
          "name": "Governance",
          "storage": {
            "prefix": "Governance",
            "entries": [
              {
                "name": "Proposals",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 423
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Proposals."
                ]
              },
              {
                "name": "ActiveProposals",
                "modifier": "Default",
                "ty": {
                  "Plain": 424
                },
                "default": [
                  0
                ],
                "docs": [
                  " Active proposals."
                ]
              },
              {
                "name": "GovKeyWhitelistedCallHash",
                "modifier": "Optional",
                "ty": {
                  "Plain": 1
                },
                "default": [
                  0
                ],
                "docs": [
                  " Call hash that has been committed to by the Governance Key."
                ]
              },
              {
                "name": "PreAuthorisedGovCalls",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 11
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Pre authorised governance calls."
                ]
              },
              {
                "name": "NextGovKeyCallHashNonce",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Any nonces before this have been consumed."
                ]
              },
              {
                "name": "ProposalIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Number of proposals that have been submitted."
                ]
              },
              {
                "name": "ExecutionPipeline",
                "modifier": "Default",
                "ty": {
                  "Plain": 426
                },
                "default": [
                  0
                ],
                "docs": [
                  " Pipeline of proposals which will get executed in the next block."
                ]
              },
              {
                "name": "ExpiryTime",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Time in seconds until a proposal expires."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "ty": {
                  "Plain": 127
                },
                "default": [
                  0
                ],
                "docs": [
                  " Accounts in the current governance set."
                ]
              }
            ]
          },
          "calls": {
            "ty": 125
          },
          "event": {
            "ty": 314
          },
          "constants": [],
          "error": {
            "ty": 428
          },
          "index": 15,
          "docs": [
            " Implements the functionality of the Chainflip governance."
          ]
        },
        {
          "name": "TokenholderGovernance",
          "storage": {
            "prefix": "TokenholderGovernance",
            "entries": [
              {
                "name": "Proposals",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 132
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " All unresolved proposals that are open for backing, indexed by the block at which the vote",
                  " will be resolved."
                ]
              },
              {
                "name": "Backers",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 132,
                    "value": 127
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The accounts currently backing each proposal."
                ]
              },
              {
                "name": "GovKeyUpdateAwaitingEnactment",
                "modifier": "Optional",
                "ty": {
                  "Plain": 429
                },
                "default": [
                  0
                ],
                "docs": [
                  " The Government key proposal currently awaiting enactment, if any. Indexed by the block",
                  " number we will attempt to enact this update."
                ]
              },
              {
                "name": "CommKeyUpdateAwaitingEnactment",
                "modifier": "Optional",
                "ty": {
                  "Plain": 431
                },
                "default": [
                  0
                ],
                "docs": [
                  " The Community key proposal currently awaiting enactment, if any. Indexed by the block number",
                  " we will attempt to enact this update."
                ]
              },
              {
                "name": "GovKeys",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 74,
                    "value": 11
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Current Governance keys for foreign chains."
                ]
              }
            ]
          },
          "calls": {
            "ty": 131
          },
          "event": {
            "ty": 315
          },
          "constants": [
            {
              "name": "VotingPeriod",
              "ty": 4,
              "value": [
                128,
                19,
                3,
                0
              ],
              "docs": [
                " Voting period of a proposal in blocks."
              ]
            },
            {
              "name": "ProposalFee",
              "ty": 70,
              "value": [
                0,
                0,
                160,
                222,
                197,
                173,
                201,
                53,
                54,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The cost of a proposal in FLIPPERINOS."
              ]
            },
            {
              "name": "EnactmentDelay",
              "ty": 4,
              "value": [
                192,
                137,
                1,
                0
              ],
              "docs": [
                " Delay in blocks after a successfully backed proposal gets executed."
              ]
            }
          ],
          "error": {
            "ty": 432
          },
          "index": 16,
          "docs": []
        },
        {
          "name": "Reputation",
          "storage": {
            "prefix": "Reputation",
            "entries": [
              {
                "name": "AccrualRatio",
                "modifier": "Default",
                "ty": {
                  "Plain": 433
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The ratio at which one accrues Reputation points for online blocks."
                ]
              },
              {
                "name": "Reputations",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 434
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Reputation trackers for each node"
                ]
              },
              {
                "name": "Suspensions",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 135,
                    "value": 435
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Suspension tracking storage for each offence."
                ]
              },
              {
                "name": "Penalties",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 135,
                    "value": 136
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The penalty to be applied for each offence."
                ]
              },
              {
                "name": "OffenceTimeSlotTracker",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 11,
                    "value": 11
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The time slot in which an offence has been reported. Only applies to offences that are",
                  " reported via the [ChainflipOffenceReportingAdapter]."
                ]
              },
              {
                "name": "LastHeartbeat",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The last block numbers at which validators submitted a heartbeat."
                ]
              }
            ]
          },
          "calls": {
            "ty": 133
          },
          "event": {
            "ty": 316
          },
          "constants": [
            {
              "name": "HeartbeatBlockInterval",
              "ty": 4,
              "value": [
                150,
                0,
                0,
                0
              ],
              "docs": [
                " The number of blocks for the time frame we would test liveliness within"
              ]
            },
            {
              "name": "ReputationPointFloorAndCeiling",
              "ty": 436,
              "value": [
                192,
                244,
                255,
                255,
                64,
                11,
                0,
                0
              ],
              "docs": [
                " The floor and ceiling values for a reputation score"
              ]
            },
            {
              "name": "MaximumAccruableReputation",
              "ty": 134,
              "value": [
                15,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of reputation points that can be accrued"
              ]
            }
          ],
          "error": {
            "ty": 437
          },
          "index": 17,
          "docs": []
        },
        {
          "name": "EthereumChainTracking",
          "storage": {
            "prefix": "EthereumChainTracking",
            "entries": [
              {
                "name": "CurrentChainState",
                "modifier": "Optional",
                "ty": {
                  "Plain": 138
                },
                "default": [
                  0
                ],
                "docs": [
                  " The tracked state of the external chain.",
                  " It is safe to unwrap() this value. We set it at genesis and it is only ever updated",
                  " by chain tracking, never removed. We use OptionQuery here so we don't need to",
                  " impl Default for ChainState."
                ]
              },
              {
                "name": "FeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 141
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fee multiplier value used when estimating ingress/egree fees"
                ]
              }
            ]
          },
          "calls": {
            "ty": 137
          },
          "event": {
            "ty": 317
          },
          "constants": [],
          "error": {
            "ty": 438
          },
          "index": 18,
          "docs": []
        },
        {
          "name": "PolkadotChainTracking",
          "storage": {
            "prefix": "PolkadotChainTracking",
            "entries": [
              {
                "name": "CurrentChainState",
                "modifier": "Optional",
                "ty": {
                  "Plain": 143
                },
                "default": [
                  0
                ],
                "docs": [
                  " The tracked state of the external chain.",
                  " It is safe to unwrap() this value. We set it at genesis and it is only ever updated",
                  " by chain tracking, never removed. We use OptionQuery here so we don't need to",
                  " impl Default for ChainState."
                ]
              },
              {
                "name": "FeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 141
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fee multiplier value used when estimating ingress/egree fees"
                ]
              }
            ]
          },
          "calls": {
            "ty": 142
          },
          "event": {
            "ty": 318
          },
          "constants": [],
          "error": {
            "ty": 439
          },
          "index": 19,
          "docs": []
        },
        {
          "name": "BitcoinChainTracking",
          "storage": {
            "prefix": "BitcoinChainTracking",
            "entries": [
              {
                "name": "CurrentChainState",
                "modifier": "Optional",
                "ty": {
                  "Plain": 148
                },
                "default": [
                  0
                ],
                "docs": [
                  " The tracked state of the external chain.",
                  " It is safe to unwrap() this value. We set it at genesis and it is only ever updated",
                  " by chain tracking, never removed. We use OptionQuery here so we don't need to",
                  " impl Default for ChainState."
                ]
              },
              {
                "name": "FeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 141
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fee multiplier value used when estimating ingress/egree fees"
                ]
              }
            ]
          },
          "calls": {
            "ty": 147
          },
          "event": {
            "ty": 319
          },
          "constants": [],
          "error": {
            "ty": 440
          },
          "index": 20,
          "docs": []
        },
        {
          "name": "EthereumVault",
          "storage": {
            "prefix": "EthereumVault",
            "entries": [
              {
                "name": "VaultStartBlockNumbers",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 9
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map of starting block number of vaults by epoch."
                ]
              },
              {
                "name": "PendingVaultActivation",
                "modifier": "Optional",
                "ty": {
                  "Plain": 441
                },
                "default": [
                  0
                ],
                "docs": [
                  " Vault activation status for the current epoch rotation."
                ]
              },
              {
                "name": "ChainInitialized",
                "modifier": "Default",
                "ty": {
                  "Plain": 28
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether this chain is initialized."
                ]
              }
            ]
          },
          "calls": {
            "ty": 152
          },
          "event": {
            "ty": 320
          },
          "constants": [],
          "error": {
            "ty": 442
          },
          "index": 21,
          "docs": []
        },
        {
          "name": "PolkadotVault",
          "storage": {
            "prefix": "PolkadotVault",
            "entries": [
              {
                "name": "VaultStartBlockNumbers",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map of starting block number of vaults by epoch."
                ]
              },
              {
                "name": "PendingVaultActivation",
                "modifier": "Optional",
                "ty": {
                  "Plain": 443
                },
                "default": [
                  0
                ],
                "docs": [
                  " Vault activation status for the current epoch rotation."
                ]
              },
              {
                "name": "ChainInitialized",
                "modifier": "Default",
                "ty": {
                  "Plain": 28
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether this chain is initialized."
                ]
              }
            ]
          },
          "calls": {
            "ty": 155
          },
          "event": {
            "ty": 321
          },
          "constants": [],
          "error": {
            "ty": 444
          },
          "index": 22,
          "docs": []
        },
        {
          "name": "BitcoinVault",
          "storage": {
            "prefix": "BitcoinVault",
            "entries": [
              {
                "name": "VaultStartBlockNumbers",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 9
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map of starting block number of vaults by epoch."
                ]
              },
              {
                "name": "PendingVaultActivation",
                "modifier": "Optional",
                "ty": {
                  "Plain": 445
                },
                "default": [
                  0
                ],
                "docs": [
                  " Vault activation status for the current epoch rotation."
                ]
              },
              {
                "name": "ChainInitialized",
                "modifier": "Default",
                "ty": {
                  "Plain": 28
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether this chain is initialized."
                ]
              }
            ]
          },
          "calls": {
            "ty": 156
          },
          "event": {
            "ty": 322
          },
          "constants": [],
          "error": {
            "ty": 446
          },
          "index": 23,
          "docs": []
        },
        {
          "name": "EvmThresholdSigner",
          "storage": {
            "prefix": "EvmThresholdSigner",
            "entries": [
              {
                "name": "ThresholdSignatureRequestIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A counter to generate fresh request ids."
                ]
              },
              {
                "name": "PendingCeremonies",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 447
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the context required for processing live ceremonies."
                ]
              },
              {
                "name": "PendingRequestInstructions",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 453
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "RequestCallback",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when a request is fulfilled."
                ]
              },
              {
                "name": "Signature",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 455
                  }
                },
                "default": [
                  2
                ],
                "docs": [
                  " State of the threshold signature requested."
                ]
              },
              {
                "name": "CeremonyRetryQueues",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 349
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map containing lists of ceremony ids that should be retried at the block stored in the",
                  " key."
                ]
              },
              {
                "name": "RequestRetryQueue",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 231
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "ThresholdSignatureResponseTimeout",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  10,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Maximum duration of a threshold signing ceremony before it is timed out and retried"
                ]
              },
              {
                "name": "CurrentKeyEpoch",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " The epoch whose authorities control the current key."
                ]
              },
              {
                "name": "Keys",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 153
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The map of all keys by epoch."
                ]
              },
              {
                "name": "PendingKeyRotation",
                "modifier": "Optional",
                "ty": {
                  "Plain": 457
                },
                "default": [
                  0
                ],
                "docs": [
                  " Key rotation statuses for the current epoch rotation."
                ]
              },
              {
                "name": "KeygenSuccessVoters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 153,
                    "value": 128
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for success for a particular agg key rotation"
                ]
              },
              {
                "name": "KeygenFailureVoters",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for failure for a particular agg key rotation"
                ]
              },
              {
                "name": "KeyHandoverSuccessVoters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 153,
                    "value": 128
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for success for a particular key handover ceremony"
                ]
              },
              {
                "name": "KeyHandoverFailureVoters",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for failure for a particular key handover ceremony"
                ]
              },
              {
                "name": "KeygenResolutionPendingSince",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The block since which we have been waiting for keygen to be resolved."
                ]
              },
              {
                "name": "KeyHandoverResolutionPendingSince",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The block since which we have been waiting for key handover to be resolved."
                ]
              },
              {
                "name": "KeygenResponseTimeout",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  90,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "KeygenSlashAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The amount of FLIP that is slashed for an agreed reported party expressed in Flipperinos",
                  " (2/3 must agree the node was an offender) on keygen failure."
                ]
              },
              {
                "name": "CeremonyIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Counter for generating unique ceremony ids."
                ]
              }
            ]
          },
          "calls": {
            "ty": 157
          },
          "event": {
            "ty": 323
          },
          "constants": [
            {
              "name": "CeremonyRetryDelay",
              "ty": 4,
              "value": [
                1,
                0,
                0,
                0
              ],
              "docs": [
                " In case not enough live nodes were available to begin a threshold signing ceremony: The",
                " number of blocks to wait before retrying with a new set."
              ]
            }
          ],
          "error": {
            "ty": 463
          },
          "index": 24,
          "docs": []
        },
        {
          "name": "PolkadotThresholdSigner",
          "storage": {
            "prefix": "PolkadotThresholdSigner",
            "entries": [
              {
                "name": "ThresholdSignatureRequestIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A counter to generate fresh request ids."
                ]
              },
              {
                "name": "PendingCeremonies",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 464
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the context required for processing live ceremonies."
                ]
              },
              {
                "name": "PendingRequestInstructions",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 466
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "RequestCallback",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when a request is fulfilled."
                ]
              },
              {
                "name": "Signature",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 468
                  }
                },
                "default": [
                  2
                ],
                "docs": [
                  " State of the threshold signature requested."
                ]
              },
              {
                "name": "CeremonyRetryQueues",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 349
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map containing lists of ceremony ids that should be retried at the block stored in the",
                  " key."
                ]
              },
              {
                "name": "RequestRetryQueue",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 231
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "ThresholdSignatureResponseTimeout",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  10,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Maximum duration of a threshold signing ceremony before it is timed out and retried"
                ]
              },
              {
                "name": "CurrentKeyEpoch",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " The epoch whose authorities control the current key."
                ]
              },
              {
                "name": "Keys",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 34
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The map of all keys by epoch."
                ]
              },
              {
                "name": "PendingKeyRotation",
                "modifier": "Optional",
                "ty": {
                  "Plain": 470
                },
                "default": [
                  0
                ],
                "docs": [
                  " Key rotation statuses for the current epoch rotation."
                ]
              },
              {
                "name": "KeygenSuccessVoters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 34,
                    "value": 128
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for success for a particular agg key rotation"
                ]
              },
              {
                "name": "KeygenFailureVoters",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for failure for a particular agg key rotation"
                ]
              },
              {
                "name": "KeyHandoverSuccessVoters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 34,
                    "value": 128
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for success for a particular key handover ceremony"
                ]
              },
              {
                "name": "KeyHandoverFailureVoters",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for failure for a particular key handover ceremony"
                ]
              },
              {
                "name": "KeygenResolutionPendingSince",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The block since which we have been waiting for keygen to be resolved."
                ]
              },
              {
                "name": "KeyHandoverResolutionPendingSince",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The block since which we have been waiting for key handover to be resolved."
                ]
              },
              {
                "name": "KeygenResponseTimeout",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  90,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "KeygenSlashAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The amount of FLIP that is slashed for an agreed reported party expressed in Flipperinos",
                  " (2/3 must agree the node was an offender) on keygen failure."
                ]
              },
              {
                "name": "CeremonyIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Counter for generating unique ceremony ids."
                ]
              }
            ]
          },
          "calls": {
            "ty": 160
          },
          "event": {
            "ty": 325
          },
          "constants": [
            {
              "name": "CeremonyRetryDelay",
              "ty": 4,
              "value": [
                1,
                0,
                0,
                0
              ],
              "docs": [
                " In case not enough live nodes were available to begin a threshold signing ceremony: The",
                " number of blocks to wait before retrying with a new set."
              ]
            }
          ],
          "error": {
            "ty": 476
          },
          "index": 25,
          "docs": []
        },
        {
          "name": "BitcoinThresholdSigner",
          "storage": {
            "prefix": "BitcoinThresholdSigner",
            "entries": [
              {
                "name": "ThresholdSignatureRequestIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A counter to generate fresh request ids."
                ]
              },
              {
                "name": "PendingCeremonies",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 477
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the context required for processing live ceremonies."
                ]
              },
              {
                "name": "PendingRequestInstructions",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 479
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "RequestCallback",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when a request is fulfilled."
                ]
              },
              {
                "name": "Signature",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 481
                  }
                },
                "default": [
                  2
                ],
                "docs": [
                  " State of the threshold signature requested."
                ]
              },
              {
                "name": "CeremonyRetryQueues",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 349
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map containing lists of ceremony ids that should be retried at the block stored in the",
                  " key."
                ]
              },
              {
                "name": "RequestRetryQueue",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 231
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "ThresholdSignatureResponseTimeout",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  10,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Maximum duration of a threshold signing ceremony before it is timed out and retried"
                ]
              },
              {
                "name": "CurrentKeyEpoch",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " The epoch whose authorities control the current key."
                ]
              },
              {
                "name": "Keys",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 90
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The map of all keys by epoch."
                ]
              },
              {
                "name": "PendingKeyRotation",
                "modifier": "Optional",
                "ty": {
                  "Plain": 483
                },
                "default": [
                  0
                ],
                "docs": [
                  " Key rotation statuses for the current epoch rotation."
                ]
              },
              {
                "name": "KeygenSuccessVoters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 90,
                    "value": 128
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for success for a particular agg key rotation"
                ]
              },
              {
                "name": "KeygenFailureVoters",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for failure for a particular agg key rotation"
                ]
              },
              {
                "name": "KeyHandoverSuccessVoters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 90,
                    "value": 128
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for success for a particular key handover ceremony"
                ]
              },
              {
                "name": "KeyHandoverFailureVoters",
                "modifier": "Default",
                "ty": {
                  "Plain": 128
                },
                "default": [
                  0
                ],
                "docs": [
                  " The voters who voted for failure for a particular key handover ceremony"
                ]
              },
              {
                "name": "KeygenResolutionPendingSince",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The block since which we have been waiting for keygen to be resolved."
                ]
              },
              {
                "name": "KeyHandoverResolutionPendingSince",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The block since which we have been waiting for key handover to be resolved."
                ]
              },
              {
                "name": "KeygenResponseTimeout",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  90,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "KeygenSlashAmount",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The amount of FLIP that is slashed for an agreed reported party expressed in Flipperinos",
                  " (2/3 must agree the node was an offender) on keygen failure."
                ]
              },
              {
                "name": "CeremonyIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Counter for generating unique ceremony ids."
                ]
              }
            ]
          },
          "calls": {
            "ty": 164
          },
          "event": {
            "ty": 326
          },
          "constants": [
            {
              "name": "CeremonyRetryDelay",
              "ty": 4,
              "value": [
                1,
                0,
                0,
                0
              ],
              "docs": [
                " In case not enough live nodes were available to begin a threshold signing ceremony: The",
                " number of blocks to wait before retrying with a new set."
              ]
            }
          ],
          "error": {
            "ty": 489
          },
          "index": 26,
          "docs": []
        },
        {
          "name": "EthereumBroadcaster",
          "storage": {
            "prefix": "EthereumBroadcaster",
            "entries": [
              {
                "name": "BroadcastIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A counter for incrementing the broadcast id."
                ]
              },
              {
                "name": "RequestSuccessCallbacks",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when the SignatureAccepted event has been witnessed."
                ]
              },
              {
                "name": "RequestFailureCallbacks",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when a broadcast failure has been witnessed."
                ]
              },
              {
                "name": "FailedBroadcasters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 127
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Contains a Set of the authorities that have failed to sign a particular broadcast."
                ]
              },
              {
                "name": "AwaitingBroadcast",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 490
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Live transaction broadcast requests."
                ]
              },
              {
                "name": "TransactionOutIdToBroadcastId",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 158,
                    "value": 492
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup table between TransactionOutId -> Broadcast.",
                  " This storage item is used by the CFE to track which broadcasts/egresses it needs to",
                  " witness."
                ]
              },
              {
                "name": "DelayedBroadcastRetryQueue",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 493
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The list of failed broadcasts that will be retried in some future block."
                ]
              },
              {
                "name": "Timeouts",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 494
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from block number to a list of broadcasts that expire at that",
                  " block number."
                ]
              },
              {
                "name": "ThresholdSignatureData",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 495
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores all needed information to be able to re-request the signature"
                ]
              },
              {
                "name": "TransactionMetadata",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 199
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores metadata related to a transaction."
                ]
              },
              {
                "name": "TransactionFeeDeficit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 31,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Tracks how much a signer id is owed for paying transaction fees."
                ]
              },
              {
                "name": "BroadcastBarriers",
                "modifier": "Default",
                "ty": {
                  "Plain": 493
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether or not broadcasts are paused for broadcast ids greater than the given broadcast id."
                ]
              },
              {
                "name": "PendingBroadcasts",
                "modifier": "Default",
                "ty": {
                  "Plain": 493
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of broadcasts that are initiated but not witnessed on the external chain."
                ]
              },
              {
                "name": "AbortedBroadcasts",
                "modifier": "Default",
                "ty": {
                  "Plain": 231
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of broadcasts that have been aborted because they were unsuccessful to be broadcast",
                  " after many retries."
                ]
              }
            ]
          },
          "calls": {
            "ty": 167
          },
          "event": {
            "ty": 327
          },
          "constants": [
            {
              "name": "BroadcastTimeout",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The timeout duration for the broadcast, measured in number of blocks."
              ]
            }
          ],
          "error": {
            "ty": 496
          },
          "index": 27,
          "docs": []
        },
        {
          "name": "PolkadotBroadcaster",
          "storage": {
            "prefix": "PolkadotBroadcaster",
            "entries": [
              {
                "name": "BroadcastIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A counter for incrementing the broadcast id."
                ]
              },
              {
                "name": "RequestSuccessCallbacks",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when the SignatureAccepted event has been witnessed."
                ]
              },
              {
                "name": "RequestFailureCallbacks",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when a broadcast failure has been witnessed."
                ]
              },
              {
                "name": "FailedBroadcasters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 127
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Contains a Set of the authorities that have failed to sign a particular broadcast."
                ]
              },
              {
                "name": "AwaitingBroadcast",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 497
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Live transaction broadcast requests."
                ]
              },
              {
                "name": "TransactionOutIdToBroadcastId",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 161,
                    "value": 168
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup table between TransactionOutId -> Broadcast.",
                  " This storage item is used by the CFE to track which broadcasts/egresses it needs to",
                  " witness."
                ]
              },
              {
                "name": "DelayedBroadcastRetryQueue",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 493
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The list of failed broadcasts that will be retried in some future block."
                ]
              },
              {
                "name": "Timeouts",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 494
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from block number to a list of broadcasts that expire at that",
                  " block number."
                ]
              },
              {
                "name": "ThresholdSignatureData",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 498
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores all needed information to be able to re-request the signature"
                ]
              },
              {
                "name": "TransactionMetadata",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores metadata related to a transaction."
                ]
              },
              {
                "name": "TransactionFeeDeficit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 34,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Tracks how much a signer id is owed for paying transaction fees."
                ]
              },
              {
                "name": "BroadcastBarriers",
                "modifier": "Default",
                "ty": {
                  "Plain": 493
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether or not broadcasts are paused for broadcast ids greater than the given broadcast id."
                ]
              },
              {
                "name": "PendingBroadcasts",
                "modifier": "Default",
                "ty": {
                  "Plain": 493
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of broadcasts that are initiated but not witnessed on the external chain."
                ]
              },
              {
                "name": "AbortedBroadcasts",
                "modifier": "Default",
                "ty": {
                  "Plain": 231
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of broadcasts that have been aborted because they were unsuccessful to be broadcast",
                  " after many retries."
                ]
              }
            ]
          },
          "calls": {
            "ty": 201
          },
          "event": {
            "ty": 329
          },
          "constants": [
            {
              "name": "BroadcastTimeout",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The timeout duration for the broadcast, measured in number of blocks."
              ]
            }
          ],
          "error": {
            "ty": 499
          },
          "index": 28,
          "docs": []
        },
        {
          "name": "BitcoinBroadcaster",
          "storage": {
            "prefix": "BitcoinBroadcaster",
            "entries": [
              {
                "name": "BroadcastIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A counter for incrementing the broadcast id."
                ]
              },
              {
                "name": "RequestSuccessCallbacks",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when the SignatureAccepted event has been witnessed."
                ]
              },
              {
                "name": "RequestFailureCallbacks",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when a broadcast failure has been witnessed."
                ]
              },
              {
                "name": "FailedBroadcasters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 127
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Contains a Set of the authorities that have failed to sign a particular broadcast."
                ]
              },
              {
                "name": "AwaitingBroadcast",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 500
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Live transaction broadcast requests."
                ]
              },
              {
                "name": "TransactionOutIdToBroadcastId",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 10,
                    "value": 492
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup table between TransactionOutId -> Broadcast.",
                  " This storage item is used by the CFE to track which broadcasts/egresses it needs to",
                  " witness."
                ]
              },
              {
                "name": "DelayedBroadcastRetryQueue",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 493
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The list of failed broadcasts that will be retried in some future block."
                ]
              },
              {
                "name": "Timeouts",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 494
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from block number to a list of broadcasts that expire at that",
                  " block number."
                ]
              },
              {
                "name": "ThresholdSignatureData",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 501
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores all needed information to be able to re-request the signature"
                ]
              },
              {
                "name": "TransactionMetadata",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores metadata related to a transaction."
                ]
              },
              {
                "name": "TransactionFeeDeficit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 229,
                    "value": 9
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Tracks how much a signer id is owed for paying transaction fees."
                ]
              },
              {
                "name": "BroadcastBarriers",
                "modifier": "Default",
                "ty": {
                  "Plain": 493
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether or not broadcasts are paused for broadcast ids greater than the given broadcast id."
                ]
              },
              {
                "name": "PendingBroadcasts",
                "modifier": "Default",
                "ty": {
                  "Plain": 493
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of broadcasts that are initiated but not witnessed on the external chain."
                ]
              },
              {
                "name": "AbortedBroadcasts",
                "modifier": "Default",
                "ty": {
                  "Plain": 231
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of broadcasts that have been aborted because they were unsuccessful to be broadcast",
                  " after many retries."
                ]
              }
            ]
          },
          "calls": {
            "ty": 220
          },
          "event": {
            "ty": 331
          },
          "constants": [
            {
              "name": "BroadcastTimeout",
              "ty": 4,
              "value": [
                132,
                3,
                0,
                0
              ],
              "docs": [
                " The timeout duration for the broadcast, measured in number of blocks."
              ]
            }
          ],
          "error": {
            "ty": 502
          },
          "index": 29,
          "docs": []
        },
        {
          "name": "Swapping",
          "storage": {
            "prefix": "Swapping",
            "entries": [
              {
                "name": "SwapQueue",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 503
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled Swaps"
                ]
              },
              {
                "name": "FirstUnprocessedBlock",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The first block for which swaps haven't yet been processed"
                ]
              },
              {
                "name": "SwapIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " SwapId Counter"
                ]
              },
              {
                "name": "EarnedBrokerFees",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity",
                      "Twox64Concat"
                    ],
                    "key": 505,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Earned Fees by Brokers"
                ]
              },
              {
                "name": "CcmIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Cross chain messages Counter"
                ]
              },
              {
                "name": "PendingCcms",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 506
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage for storing CCMs pending assets to be swapped."
                ]
              },
              {
                "name": "CcmOutputs",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 507
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Tracks the outputs of Ccm swaps."
                ]
              },
              {
                "name": "CollectedRejectedFunds",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 233,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Fund accrued from rejected swap and CCM calls."
                ]
              },
              {
                "name": "MaximumSwapAmount",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 233,
                    "value": 70
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Maximum amount allowed to be put into a swap. Excess amounts are confiscated."
                ]
              },
              {
                "name": "FlipToBurn",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " FLIP ready to be burned."
                ]
              }
            ]
          },
          "calls": {
            "ty": 232
          },
          "event": {
            "ty": 333
          },
          "constants": [],
          "error": {
            "ty": 508
          },
          "index": 30,
          "docs": []
        },
        {
          "name": "LiquidityProvider",
          "storage": {
            "prefix": "LiquidityProvider",
            "entries": [
              {
                "name": "FreeBalances",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Identity"
                    ],
                    "key": 505,
                    "value": 70
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Storage for user's free balances/ DoubleMap: (AccountId, Asset) => Balance"
                ]
              },
              {
                "name": "HistoricalEarnedFees",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity",
                      "Twox64Concat"
                    ],
                    "key": 505,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Historical earned fees for an account."
                ]
              },
              {
                "name": "LiquidityRefundAddress",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity",
                      "Twox64Concat"
                    ],
                    "key": 509,
                    "value": 241
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the registered energency withdrawal address for an Account"
                ]
              }
            ]
          },
          "calls": {
            "ty": 249
          },
          "event": {
            "ty": 339
          },
          "constants": [],
          "error": {
            "ty": 510
          },
          "index": 31,
          "docs": []
        },
        {
          "name": "EthereumIngressEgress",
          "storage": {
            "prefix": "EthereumIngressEgress",
            "entries": [
              {
                "name": "DepositChannelLookup",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 31,
                    "value": 511
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup table for addresses to corresponding deposit channels."
                ]
              },
              {
                "name": "BoostPools",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 518,
                    "value": 519
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "ChannelIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest channel id used to generate an address."
                ]
              },
              {
                "name": "EgressIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest egress id used to generate an address."
                ]
              },
              {
                "name": "ScheduledEgressFetchOrTransfer",
                "modifier": "Default",
                "ty": {
                  "Plain": 534
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled fetch and egress for the Ethereum chain."
                ]
              },
              {
                "name": "ScheduledEgressCcm",
                "modifier": "Default",
                "ty": {
                  "Plain": 538
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled cross chain messages for the Ethereum chain."
                ]
              },
              {
                "name": "DisabledEgressAssets",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 30,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the list of assets that are not allowed to be egressed."
                ]
              },
              {
                "name": "DepositChannelPool",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 512
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores address ready for use."
                ]
              },
              {
                "name": "MinimumDeposit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 30,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Defines the minimum amount of Deposit allowed for each asset."
                ]
              },
              {
                "name": "EgressDustLimit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 30,
                    "value": 70
                  }
                },
                "default": [
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Defines the minimum amount aka. dust limit for a single egress i.e. *not* of a batch, but",
                  " the outputs of each individual egress within that batch. If not set, defaults to 1.",
                  "",
                  " This is required for bitcoin, for example, where any amount below 600 satoshis is considered",
                  " dust and will be rejected by miners."
                ]
              },
              {
                "name": "DepositChannelLifetime",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "FailedForeignChainCalls",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 540
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores information about Calls to external chains that have failed to be broadcasted.",
                  " These calls are signed and stored on-chain so that the user can broadcast the call",
                  " themselves. These messages will be re-threshold-signed once during the next epoch, and",
                  " removed from storage in the epoch after that.",
                  " Hashmap: last_signed_epoch -> Vec<FailedForeignChainCall>"
                ]
              },
              {
                "name": "DepositBalances",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 30,
                    "value": 542
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "DepositChannelRecycleBlocks",
                "modifier": "Default",
                "ty": {
                  "Plain": 543
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "WitnessSafetyMargin",
                "modifier": "Optional",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "WithheldTransactionFees",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 30,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Tracks fees withheld from ingresses and egresses."
                ]
              },
              {
                "name": "ChannelOpeningFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fixed fee charged for opening a channel, in Flipperinos."
                ]
              },
              {
                "name": "PrewitnessedDepositIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest prewitnessed deposit id used."
                ]
              },
              {
                "name": "PrewitnessedDeposits",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 545,
                    "value": 546
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores all deposits that have been prewitnessed but not yet finalised."
                ]
              }
            ]
          },
          "calls": {
            "ty": 250
          },
          "event": {
            "ty": 340
          },
          "constants": [],
          "error": {
            "ty": 547
          },
          "index": 32,
          "docs": []
        },
        {
          "name": "PolkadotIngressEgress",
          "storage": {
            "prefix": "PolkadotIngressEgress",
            "entries": [
              {
                "name": "DepositChannelLookup",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 34,
                    "value": 548
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup table for addresses to corresponding deposit channels."
                ]
              },
              {
                "name": "BoostPools",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 551,
                    "value": 552
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "ChannelIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest channel id used to generate an address."
                ]
              },
              {
                "name": "EgressIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest egress id used to generate an address."
                ]
              },
              {
                "name": "ScheduledEgressFetchOrTransfer",
                "modifier": "Default",
                "ty": {
                  "Plain": 564
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled fetch and egress for the Ethereum chain."
                ]
              },
              {
                "name": "ScheduledEgressCcm",
                "modifier": "Default",
                "ty": {
                  "Plain": 566
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled cross chain messages for the Ethereum chain."
                ]
              },
              {
                "name": "DisabledEgressAssets",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 260,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the list of assets that are not allowed to be egressed."
                ]
              },
              {
                "name": "DepositChannelPool",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 549
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores address ready for use."
                ]
              },
              {
                "name": "MinimumDeposit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 260,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Defines the minimum amount of Deposit allowed for each asset."
                ]
              },
              {
                "name": "EgressDustLimit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 260,
                    "value": 70
                  }
                },
                "default": [
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Defines the minimum amount aka. dust limit for a single egress i.e. *not* of a batch, but",
                  " the outputs of each individual egress within that batch. If not set, defaults to 1.",
                  "",
                  " This is required for bitcoin, for example, where any amount below 600 satoshis is considered",
                  " dust and will be rejected by miners."
                ]
              },
              {
                "name": "DepositChannelLifetime",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "FailedForeignChainCalls",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 540
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores information about Calls to external chains that have failed to be broadcasted.",
                  " These calls are signed and stored on-chain so that the user can broadcast the call",
                  " themselves. These messages will be re-threshold-signed once during the next epoch, and",
                  " removed from storage in the epoch after that.",
                  " Hashmap: last_signed_epoch -> Vec<FailedForeignChainCall>"
                ]
              },
              {
                "name": "DepositBalances",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 260,
                    "value": 568
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "DepositChannelRecycleBlocks",
                "modifier": "Default",
                "ty": {
                  "Plain": 569
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "WitnessSafetyMargin",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "WithheldTransactionFees",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 260,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Tracks fees withheld from ingresses and egresses."
                ]
              },
              {
                "name": "ChannelOpeningFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fixed fee charged for opening a channel, in Flipperinos."
                ]
              },
              {
                "name": "PrewitnessedDepositIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest prewitnessed deposit id used."
                ]
              },
              {
                "name": "PrewitnessedDeposits",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 545,
                    "value": 571
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores all deposits that have been prewitnessed but not yet finalised."
                ]
              }
            ]
          },
          "calls": {
            "ty": 258
          },
          "event": {
            "ty": 350
          },
          "constants": [],
          "error": {
            "ty": 572
          },
          "index": 33,
          "docs": []
        },
        {
          "name": "BitcoinIngressEgress",
          "storage": {
            "prefix": "BitcoinIngressEgress",
            "entries": [
              {
                "name": "DepositChannelLookup",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 229,
                    "value": 573
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup table for addresses to corresponding deposit channels."
                ]
              },
              {
                "name": "BoostPools",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 575,
                    "value": 576
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "ChannelIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest channel id used to generate an address."
                ]
              },
              {
                "name": "EgressIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest egress id used to generate an address."
                ]
              },
              {
                "name": "ScheduledEgressFetchOrTransfer",
                "modifier": "Default",
                "ty": {
                  "Plain": 588
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled fetch and egress for the Ethereum chain."
                ]
              },
              {
                "name": "ScheduledEgressCcm",
                "modifier": "Default",
                "ty": {
                  "Plain": 592
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled cross chain messages for the Ethereum chain."
                ]
              },
              {
                "name": "DisabledEgressAssets",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 270,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the list of assets that are not allowed to be egressed."
                ]
              },
              {
                "name": "DepositChannelPool",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 574
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores address ready for use."
                ]
              },
              {
                "name": "MinimumDeposit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 270,
                    "value": 9
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Defines the minimum amount of Deposit allowed for each asset."
                ]
              },
              {
                "name": "EgressDustLimit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 270,
                    "value": 70
                  }
                },
                "default": [
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Defines the minimum amount aka. dust limit for a single egress i.e. *not* of a batch, but",
                  " the outputs of each individual egress within that batch. If not set, defaults to 1.",
                  "",
                  " This is required for bitcoin, for example, where any amount below 600 satoshis is considered",
                  " dust and will be rejected by miners."
                ]
              },
              {
                "name": "DepositChannelLifetime",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "FailedForeignChainCalls",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 540
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores information about Calls to external chains that have failed to be broadcasted.",
                  " These calls are signed and stored on-chain so that the user can broadcast the call",
                  " themselves. These messages will be re-threshold-signed once during the next epoch, and",
                  " removed from storage in the epoch after that.",
                  " Hashmap: last_signed_epoch -> Vec<FailedForeignChainCall>"
                ]
              },
              {
                "name": "DepositBalances",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 270,
                    "value": 594
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "DepositChannelRecycleBlocks",
                "modifier": "Default",
                "ty": {
                  "Plain": 595
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "WitnessSafetyMargin",
                "modifier": "Optional",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "WithheldTransactionFees",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 270,
                    "value": 9
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Tracks fees withheld from ingresses and egresses."
                ]
              },
              {
                "name": "ChannelOpeningFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fixed fee charged for opening a channel, in Flipperinos."
                ]
              },
              {
                "name": "PrewitnessedDepositIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest prewitnessed deposit id used."
                ]
              },
              {
                "name": "PrewitnessedDeposits",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 545,
                    "value": 597
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores all deposits that have been prewitnessed but not yet finalised."
                ]
              }
            ]
          },
          "calls": {
            "ty": 268
          },
          "event": {
            "ty": 351
          },
          "constants": [],
          "error": {
            "ty": 598
          },
          "index": 34,
          "docs": []
        },
        {
          "name": "LiquidityPools",
          "storage": {
            "prefix": "LiquidityPools",
            "entries": [
              {
                "name": "Pools",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 360,
                    "value": 599
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " All the available pools."
                ]
              },
              {
                "name": "FlipBuyInterval",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Interval at which we buy FLIP in order to burn it."
                ]
              },
              {
                "name": "CollectedNetworkFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Network fees, in USDC terms, that have been collected and are ready to be converted to FLIP."
                ]
              },
              {
                "name": "ScheduledLimitOrderUpdates",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 640
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Queue of limit orders, indexed by block number waiting to get minted or burned."
                ]
              },
              {
                "name": "MaximumPriceImpact",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 360,
                    "value": 4
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Maximum price impact for a single swap, measured in number of ticks. Configurable",
                  " for each pool."
                ]
              }
            ]
          },
          "calls": {
            "ty": 278
          },
          "event": {
            "ty": 355
          },
          "constants": [
            {
              "name": "NetworkFee",
              "ty": 71,
              "value": [
                232,
                3,
                0,
                0
              ],
              "docs": []
            }
          ],
          "error": {
            "ty": 642
          },
          "index": 35,
          "docs": []
        },
        {
          "name": "CfeInterface",
          "storage": {
            "prefix": "CfeInterface",
            "entries": [
              {
                "name": "CfeEvents",
                "modifier": "Default",
                "ty": {
                  "Plain": 643
                },
                "default": [
                  0
                ],
                "docs": []
              }
            ]
          },
          "calls": null,
          "event": null,
          "constants": [],
          "error": null,
          "index": 36,
          "docs": []
        },
        {
          "name": "ArbitrumChainTracking",
          "storage": {
            "prefix": "ArbitrumChainTracking",
            "entries": [
              {
                "name": "CurrentChainState",
                "modifier": "Optional",
                "ty": {
                  "Plain": 292
                },
                "default": [
                  0
                ],
                "docs": [
                  " The tracked state of the external chain.",
                  " It is safe to unwrap() this value. We set it at genesis and it is only ever updated",
                  " by chain tracking, never removed. We use OptionQuery here so we don't need to",
                  " impl Default for ChainState."
                ]
              },
              {
                "name": "FeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 141
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fee multiplier value used when estimating ingress/egree fees"
                ]
              }
            ]
          },
          "calls": {
            "ty": 291
          },
          "event": {
            "ty": 362
          },
          "constants": [],
          "error": {
            "ty": 654
          },
          "index": 37,
          "docs": []
        },
        {
          "name": "ArbitrumVault",
          "storage": {
            "prefix": "ArbitrumVault",
            "entries": [
              {
                "name": "VaultStartBlockNumbers",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 9
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A map of starting block number of vaults by epoch."
                ]
              },
              {
                "name": "PendingVaultActivation",
                "modifier": "Optional",
                "ty": {
                  "Plain": 655
                },
                "default": [
                  0
                ],
                "docs": [
                  " Vault activation status for the current epoch rotation."
                ]
              },
              {
                "name": "ChainInitialized",
                "modifier": "Default",
                "ty": {
                  "Plain": 28
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether this chain is initialized."
                ]
              }
            ]
          },
          "calls": {
            "ty": 296
          },
          "event": {
            "ty": 363
          },
          "constants": [],
          "error": {
            "ty": 656
          },
          "index": 38,
          "docs": []
        },
        {
          "name": "ArbitrumBroadcaster",
          "storage": {
            "prefix": "ArbitrumBroadcaster",
            "entries": [
              {
                "name": "BroadcastIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A counter for incrementing the broadcast id."
                ]
              },
              {
                "name": "RequestSuccessCallbacks",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when the SignatureAccepted event has been witnessed."
                ]
              },
              {
                "name": "RequestFailureCallbacks",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 82
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Callbacks to be dispatched when a broadcast failure has been witnessed."
                ]
              },
              {
                "name": "FailedBroadcasters",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 127
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Contains a Set of the authorities that have failed to sign a particular broadcast."
                ]
              },
              {
                "name": "AwaitingBroadcast",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 657
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Live transaction broadcast requests."
                ]
              },
              {
                "name": "TransactionOutIdToBroadcastId",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 158,
                    "value": 492
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup table between TransactionOutId -> Broadcast.",
                  " This storage item is used by the CFE to track which broadcasts/egresses it needs to",
                  " witness."
                ]
              },
              {
                "name": "DelayedBroadcastRetryQueue",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 493
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The list of failed broadcasts that will be retried in some future block."
                ]
              },
              {
                "name": "Timeouts",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 494
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from block number to a list of broadcasts that expire at that",
                  " block number."
                ]
              },
              {
                "name": "ThresholdSignatureData",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 658
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores all needed information to be able to re-request the signature"
                ]
              },
              {
                "name": "TransactionMetadata",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 199
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores metadata related to a transaction."
                ]
              },
              {
                "name": "TransactionFeeDeficit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 31,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Tracks how much a signer id is owed for paying transaction fees."
                ]
              },
              {
                "name": "BroadcastBarriers",
                "modifier": "Default",
                "ty": {
                  "Plain": 493
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether or not broadcasts are paused for broadcast ids greater than the given broadcast id."
                ]
              },
              {
                "name": "PendingBroadcasts",
                "modifier": "Default",
                "ty": {
                  "Plain": 493
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of broadcasts that are initiated but not witnessed on the external chain."
                ]
              },
              {
                "name": "AbortedBroadcasts",
                "modifier": "Default",
                "ty": {
                  "Plain": 231
                },
                "default": [
                  0
                ],
                "docs": [
                  " List of broadcasts that have been aborted because they were unsuccessful to be broadcast",
                  " after many retries."
                ]
              }
            ]
          },
          "calls": {
            "ty": 297
          },
          "event": {
            "ty": 364
          },
          "constants": [
            {
              "name": "BroadcastTimeout",
              "ty": 4,
              "value": [
                132,
                3,
                0,
                0
              ],
              "docs": [
                " The timeout duration for the broadcast, measured in number of blocks."
              ]
            }
          ],
          "error": {
            "ty": 659
          },
          "index": 39,
          "docs": []
        },
        {
          "name": "ArbitrumIngressEgress",
          "storage": {
            "prefix": "ArbitrumIngressEgress",
            "entries": [
              {
                "name": "DepositChannelLookup",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 31,
                    "value": 660
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Lookup table for addresses to corresponding deposit channels."
                ]
              },
              {
                "name": "BoostPools",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 662,
                    "value": 663
                  }
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "ChannelIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest channel id used to generate an address."
                ]
              },
              {
                "name": "EgressIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest egress id used to generate an address."
                ]
              },
              {
                "name": "ScheduledEgressFetchOrTransfer",
                "modifier": "Default",
                "ty": {
                  "Plain": 675
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled fetch and egress for the Ethereum chain."
                ]
              },
              {
                "name": "ScheduledEgressCcm",
                "modifier": "Default",
                "ty": {
                  "Plain": 677
                },
                "default": [
                  0
                ],
                "docs": [
                  " Scheduled cross chain messages for the Ethereum chain."
                ]
              },
              {
                "name": "DisabledEgressAssets",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 33,
                    "value": 5
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the list of assets that are not allowed to be egressed."
                ]
              },
              {
                "name": "DepositChannelPool",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 9,
                    "value": 661
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores address ready for use."
                ]
              },
              {
                "name": "MinimumDeposit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 33,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Defines the minimum amount of Deposit allowed for each asset."
                ]
              },
              {
                "name": "EgressDustLimit",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 33,
                    "value": 70
                  }
                },
                "default": [
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Defines the minimum amount aka. dust limit for a single egress i.e. *not* of a batch, but",
                  " the outputs of each individual egress within that batch. If not set, defaults to 1.",
                  "",
                  " This is required for bitcoin, for example, where any amount below 600 satoshis is considered",
                  " dust and will be rejected by miners."
                ]
              },
              {
                "name": "DepositChannelLifetime",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "FailedForeignChainCalls",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 540
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores information about Calls to external chains that have failed to be broadcasted.",
                  " These calls are signed and stored on-chain so that the user can broadcast the call",
                  " themselves. These messages will be re-threshold-signed once during the next epoch, and",
                  " removed from storage in the epoch after that.",
                  " Hashmap: last_signed_epoch -> Vec<FailedForeignChainCall>"
                ]
              },
              {
                "name": "DepositBalances",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 33,
                    "value": 679
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": []
              },
              {
                "name": "DepositChannelRecycleBlocks",
                "modifier": "Default",
                "ty": {
                  "Plain": 543
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "WitnessSafetyMargin",
                "modifier": "Optional",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0
                ],
                "docs": []
              },
              {
                "name": "WithheldTransactionFees",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 33,
                    "value": 70
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Tracks fees withheld from ingresses and egresses."
                ]
              },
              {
                "name": "ChannelOpeningFee",
                "modifier": "Default",
                "ty": {
                  "Plain": 70
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The fixed fee charged for opening a channel, in Flipperinos."
                ]
              },
              {
                "name": "PrewitnessedDepositIdCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Stores the latest prewitnessed deposit id used."
                ]
              },
              {
                "name": "PrewitnessedDeposits",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 545,
                    "value": 680
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores all deposits that have been prewitnessed but not yet finalised."
                ]
              }
            ]
          },
          "calls": {
            "ty": 299
          },
          "event": {
            "ty": 365
          },
          "constants": [],
          "error": {
            "ty": 681
          },
          "index": 40,
          "docs": []
        }
      ],
      "extrinsic": {
        "version": 4,
        "address_ty": 682,
        "call_ty": 82,
        "signature_ty": 683,
        "extra_ty": 686,
        "signed_extensions": [
          {
            "identifier": "CheckNonZeroSender",
            "ty": 687,
            "additional_signed": 5
          },
          {
            "identifier": "CheckSpecVersion",
            "ty": 688,
            "additional_signed": 4
          },
          {
            "identifier": "CheckTxVersion",
            "ty": 689,
            "additional_signed": 4
          },
          {
            "identifier": "CheckGenesis",
            "ty": 690,
            "additional_signed": 10
          },
          {
            "identifier": "CheckMortality",
            "ty": 691,
            "additional_signed": 10
          },
          {
            "identifier": "CheckNonce",
            "ty": 693,
            "additional_signed": 5
          },
          {
            "identifier": "CheckWeight",
            "ty": 694,
            "additional_signed": 5
          },
          {
            "identifier": "ChargeTransactionPayment",
            "ty": 695,
            "additional_signed": 5
          }
        ]
      },
      "ty": 696,
      "apis": [
        {
          "name": "CustomRuntimeApi",
          "methods": [
            {
              "name": "cf_is_auction_phase",
              "inputs": [],
              "output": 28,
              "docs": [
                " Returns true if the current phase is the auction phase."
              ]
            },
            {
              "name": "cf_eth_flip_token_address",
              "inputs": [],
              "output": 31,
              "docs": []
            },
            {
              "name": "cf_eth_state_chain_gateway_address",
              "inputs": [],
              "output": 31,
              "docs": []
            },
            {
              "name": "cf_eth_key_manager_address",
              "inputs": [],
              "output": 31,
              "docs": []
            },
            {
              "name": "cf_eth_chain_id",
              "inputs": [],
              "output": 9,
              "docs": []
            },
            {
              "name": "cf_eth_vault",
              "inputs": [],
              "output": 697,
              "docs": [
                " Returns the eth vault in the form [agg_key, active_from_eth_block]"
              ]
            },
            {
              "name": "cf_auction_parameters",
              "inputs": [],
              "output": 168,
              "docs": [
                " Returns the Auction params in the form [min_set_size, max_set_size]"
              ]
            },
            {
              "name": "cf_min_funding",
              "inputs": [],
              "output": 70,
              "docs": []
            },
            {
              "name": "cf_current_epoch",
              "inputs": [],
              "output": 4,
              "docs": []
            },
            {
              "name": "cf_current_compatibility_version",
              "inputs": [],
              "output": 104,
              "docs": []
            },
            {
              "name": "cf_epoch_duration",
              "inputs": [],
              "output": 4,
              "docs": []
            },
            {
              "name": "cf_current_epoch_started_at",
              "inputs": [],
              "output": 4,
              "docs": []
            },
            {
              "name": "cf_authority_emission_per_block",
              "inputs": [],
              "output": 70,
              "docs": []
            },
            {
              "name": "cf_backup_emission_per_block",
              "inputs": [],
              "output": 70,
              "docs": []
            },
            {
              "name": "cf_flip_supply",
              "inputs": [],
              "output": 698,
              "docs": [
                " Returns the flip supply in the form [total_issuance, offchain_funds]"
              ]
            },
            {
              "name": "cf_accounts",
              "inputs": [],
              "output": 699,
              "docs": []
            },
            {
              "name": "cf_account_flip_balance",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 70,
              "docs": []
            },
            {
              "name": "cf_validator_info",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 701,
              "docs": []
            },
            {
              "name": "cf_penalties",
              "inputs": [],
              "output": 702,
              "docs": []
            },
            {
              "name": "cf_suspensions",
              "inputs": [],
              "output": 705,
              "docs": []
            },
            {
              "name": "cf_generate_gov_key_call_hash",
              "inputs": [
                {
                  "name": "call",
                  "ty": 11
                }
              ],
              "output": 1,
              "docs": []
            },
            {
              "name": "cf_auction_state",
              "inputs": [],
              "output": 707,
              "docs": []
            },
            {
              "name": "cf_pool_price",
              "inputs": [
                {
                  "name": "from",
                  "ty": 233
                },
                {
                  "name": "to",
                  "ty": 233
                }
              ],
              "output": 708,
              "docs": []
            },
            {
              "name": "cf_pool_price_v2",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                }
              ],
              "output": 710,
              "docs": []
            },
            {
              "name": "cf_pool_simulate_swap",
              "inputs": [
                {
                  "name": "from",
                  "ty": 233
                },
                {
                  "name": "to",
                  "ty": 233
                },
                {
                  "name": "amount",
                  "ty": 70
                },
                {
                  "name": "additional_limit_orders",
                  "ty": 713
                }
              ],
              "output": 716,
              "docs": []
            },
            {
              "name": "cf_pool_info",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                }
              ],
              "output": 718,
              "docs": []
            },
            {
              "name": "cf_pool_depth",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                },
                {
                  "name": "tick_range",
                  "ty": 280
                }
              ],
              "output": 720,
              "docs": []
            },
            {
              "name": "cf_pool_liquidity",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                }
              ],
              "output": 724,
              "docs": []
            },
            {
              "name": "cf_required_asset_ratio_for_range_order",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                },
                {
                  "name": "tick_range",
                  "ty": 280
                }
              ],
              "output": 731,
              "docs": []
            },
            {
              "name": "cf_pool_orderbook",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                },
                {
                  "name": "orders",
                  "ty": 4
                }
              ],
              "output": 732,
              "docs": []
            },
            {
              "name": "cf_pool_orders",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                },
                {
                  "name": "lp",
                  "ty": 491
                }
              ],
              "output": 736,
              "docs": []
            },
            {
              "name": "cf_pool_range_order_liquidity_value",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                },
                {
                  "name": "tick_range",
                  "ty": 280
                },
                {
                  "name": "liquidity",
                  "ty": 70
                }
              ],
              "output": 731,
              "docs": []
            },
            {
              "name": "cf_max_swap_amount",
              "inputs": [
                {
                  "name": "asset",
                  "ty": 233
                }
              ],
              "output": 244,
              "docs": []
            },
            {
              "name": "cf_min_deposit_amount",
              "inputs": [
                {
                  "name": "asset",
                  "ty": 233
                }
              ],
              "output": 70,
              "docs": []
            },
            {
              "name": "cf_egress_dust_limit",
              "inputs": [
                {
                  "name": "asset",
                  "ty": 233
                }
              ],
              "output": 70,
              "docs": []
            },
            {
              "name": "cf_prewitness_swaps",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                },
                {
                  "name": "side",
                  "ty": 284
                }
              ],
              "output": 743,
              "docs": []
            },
            {
              "name": "cf_scheduled_swaps",
              "inputs": [
                {
                  "name": "base_asset",
                  "ty": 233
                },
                {
                  "name": "quote_asset",
                  "ty": 233
                }
              ],
              "output": 744,
              "docs": []
            },
            {
              "name": "cf_liquidity_provider_info",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 748,
              "docs": []
            },
            {
              "name": "cf_broker_info",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 758,
              "docs": []
            },
            {
              "name": "cf_account_role",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 759,
              "docs": []
            },
            {
              "name": "cf_asset_balances",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 760,
              "docs": []
            },
            {
              "name": "cf_redemption_tax",
              "inputs": [],
              "output": 70,
              "docs": []
            },
            {
              "name": "cf_network_environment",
              "inputs": [],
              "output": 385,
              "docs": []
            },
            {
              "name": "cf_failed_call_ethereum",
              "inputs": [
                {
                  "name": "broadcast_id",
                  "ty": 4
                }
              ],
              "output": 761,
              "docs": []
            },
            {
              "name": "cf_failed_call_arbitrum",
              "inputs": [
                {
                  "name": "broadcast_id",
                  "ty": 4
                }
              ],
              "output": 761,
              "docs": []
            },
            {
              "name": "cf_ingress_fee",
              "inputs": [
                {
                  "name": "asset",
                  "ty": 233
                }
              ],
              "output": 244,
              "docs": []
            },
            {
              "name": "cf_egress_fee",
              "inputs": [
                {
                  "name": "asset",
                  "ty": 233
                }
              ],
              "output": 244,
              "docs": []
            },
            {
              "name": "cf_witness_count",
              "inputs": [
                {
                  "name": "hash",
                  "ty": 81
                }
              ],
              "output": 762,
              "docs": []
            },
            {
              "name": "cf_witness_safety_margin",
              "inputs": [
                {
                  "name": "chain",
                  "ty": 74
                }
              ],
              "output": 337,
              "docs": []
            },
            {
              "name": "cf_channel_opening_fee",
              "inputs": [
                {
                  "name": "chain",
                  "ty": 74
                }
              ],
              "output": 70,
              "docs": []
            },
            {
              "name": "cf_get_events",
              "inputs": [
                {
                  "name": "filter",
                  "ty": 766
                }
              ],
              "output": 767,
              "docs": []
            },
            {
              "name": "cf_boost_pools_depth",
              "inputs": [],
              "output": 768,
              "docs": []
            },
            {
              "name": "cf_boost_pool_details",
              "inputs": [
                {
                  "name": "asset",
                  "ty": 233
                }
              ],
              "output": 770,
              "docs": []
            }
          ],
          "docs": [
            " Definition for all runtime API interfaces."
          ]
        },
        {
          "name": "Core",
          "methods": [
            {
              "name": "version",
              "inputs": [],
              "output": 379,
              "docs": [
                " Returns the version of the runtime."
              ]
            },
            {
              "name": "execute_block",
              "inputs": [
                {
                  "name": "block",
                  "ty": 781
                }
              ],
              "output": 5,
              "docs": [
                " Execute the given block."
              ]
            },
            {
              "name": "initialize_block",
              "inputs": [
                {
                  "name": "header",
                  "ty": 782
                }
              ],
              "output": 5,
              "docs": [
                " Initialize a block with the given header."
              ]
            }
          ],
          "docs": [
            " The `Core` runtime api that every Substrate runtime needs to implement."
          ]
        },
        {
          "name": "Metadata",
          "methods": [
            {
              "name": "metadata",
              "inputs": [],
              "output": 785,
              "docs": [
                " Returns the metadata of a runtime."
              ]
            },
            {
              "name": "metadata_at_version",
              "inputs": [
                {
                  "name": "version",
                  "ty": 4
                }
              ],
              "output": 786,
              "docs": [
                " Returns the metadata at a given version.",
                "",
                " If the given `version` isn't supported, this will return `None`.",
                " Use [`Self::metadata_versions`] to find out about supported metadata version of the runtime."
              ]
            },
            {
              "name": "metadata_versions",
              "inputs": [],
              "output": 231,
              "docs": [
                " Returns the supported metadata versions.",
                "",
                " This can be used to call `metadata_at_version`."
              ]
            }
          ],
          "docs": [
            " The `Metadata` api trait that returns metadata for the runtime."
          ]
        },
        {
          "name": "BlockBuilder",
          "methods": [
            {
              "name": "apply_extrinsic",
              "inputs": [
                {
                  "name": "extrinsic",
                  "ty": 783
                }
              ],
              "output": 787,
              "docs": [
                " Apply the given extrinsic.",
                "",
                " Returns an inclusion outcome which specifies if this extrinsic is included in",
                " this block or not."
              ]
            },
            {
              "name": "finalize_block",
              "inputs": [],
              "output": 782,
              "docs": [
                " Finish the current block."
              ]
            },
            {
              "name": "inherent_extrinsics",
              "inputs": [
                {
                  "name": "inherent",
                  "ty": 791
                }
              ],
              "output": 784,
              "docs": [
                " Generate inherent extrinsics. The inherent data will vary from chain to chain."
              ]
            },
            {
              "name": "check_inherents",
              "inputs": [
                {
                  "name": "block",
                  "ty": 781
                },
                {
                  "name": "data",
                  "ty": 791
                }
              ],
              "output": 795,
              "docs": [
                " Check that the inherents are valid. The inherent data will vary from chain to chain."
              ]
            }
          ],
          "docs": [
            " The `BlockBuilder` api trait that provides the required functionality for building a block."
          ]
        },
        {
          "name": "TaggedTransactionQueue",
          "methods": [
            {
              "name": "validate_transaction",
              "inputs": [
                {
                  "name": "source",
                  "ty": 796
                },
                {
                  "name": "tx",
                  "ty": 783
                },
                {
                  "name": "block_hash",
                  "ty": 10
                }
              ],
              "output": 797,
              "docs": [
                " Validate the transaction.",
                "",
                " This method is invoked by the transaction pool to learn details about given transaction.",
                " The implementation should make sure to verify the correctness of the transaction",
                " against current state. The given `block_hash` corresponds to the hash of the block",
                " that is used as current state.",
                "",
                " Note that this call may be performed by the pool multiple times and transactions",
                " might be verified in any possible order."
              ]
            }
          ],
          "docs": [
            " The `TaggedTransactionQueue` api trait for interfering with the transaction queue."
          ]
        },
        {
          "name": "OffchainWorkerApi",
          "methods": [
            {
              "name": "offchain_worker",
              "inputs": [
                {
                  "name": "header",
                  "ty": 782
                }
              ],
              "output": 5,
              "docs": [
                " Starts the off-chain task for given block header."
              ]
            }
          ],
          "docs": [
            " The offchain worker api."
          ]
        },
        {
          "name": "AuraApi",
          "methods": [
            {
              "name": "slot_duration",
              "inputs": [],
              "output": 799,
              "docs": [
                " Returns the slot duration for Aura.",
                "",
                " Currently, only the value provided by this type at genesis will be used."
              ]
            },
            {
              "name": "authorities",
              "inputs": [],
              "output": 417,
              "docs": [
                " Return the current set of authorities."
              ]
            }
          ],
          "docs": [
            " API necessary for block authorship with aura."
          ]
        },
        {
          "name": "SessionKeys",
          "methods": [
            {
              "name": "generate_session_keys",
              "inputs": [
                {
                  "name": "seed",
                  "ty": 800
                }
              ],
              "output": 11,
              "docs": [
                " Generate a set of session keys with optionally using the given seed.",
                " The keys should be stored within the keystore exposed via runtime",
                " externalities.",
                "",
                " The seed needs to be a valid `utf8` string.",
                "",
                " Returns the concatenated SCALE encoded public keys."
              ]
            },
            {
              "name": "decode_session_keys",
              "inputs": [
                {
                  "name": "encoded",
                  "ty": 11
                }
              ],
              "output": 801,
              "docs": [
                " Decode the given public session keys.",
                "",
                " Returns the list of public raw public keys + key type."
              ]
            }
          ],
          "docs": [
            " Session keys runtime api."
          ]
        },
        {
          "name": "GrandpaApi",
          "methods": [
            {
              "name": "grandpa_authorities",
              "inputs": [],
              "output": 312,
              "docs": [
                " Get the current GRANDPA authorities and weights. This should not change except",
                " for when changes are scheduled and the corresponding delay has passed.",
                "",
                " When called at block B, it will return the set of authorities that should be",
                " used to finalize descendants of this block (B+1, B+2, ...). The block B itself",
                " is finalized by the authorities from block B-1."
              ]
            },
            {
              "name": "submit_report_equivocation_unsigned_extrinsic",
              "inputs": [
                {
                  "name": "equivocation_proof",
                  "ty": 115
                },
                {
                  "name": "key_owner_proof",
                  "ty": 804
                }
              ],
              "output": 805,
              "docs": [
                " Submits an unsigned extrinsic to report an equivocation. The caller",
                " must provide the equivocation proof and a key ownership proof",
                " (should be obtained using `generate_key_ownership_proof`). The",
                " extrinsic will be unsigned and should only be accepted for local",
                " authorship (not to be broadcast to the network). This method returns",
                " `None` when creation of the extrinsic fails, e.g. if equivocation",
                " reporting is disabled for the given runtime (i.e. this method is",
                " hardcoded to return `None`). Only useful in an offchain context."
              ]
            },
            {
              "name": "generate_key_ownership_proof",
              "inputs": [
                {
                  "name": "set_id",
                  "ty": 9
                },
                {
                  "name": "authority_id",
                  "ty": 108
                }
              ],
              "output": 806,
              "docs": [
                " Generates a proof of key ownership for the given authority in the",
                " given set. An example usage of this module is coupled with the",
                " session historical module to prove that a given authority key is",
                " tied to a given staking identity during a specific session. Proofs",
                " of key ownership are necessary for submitting equivocation reports.",
                " NOTE: even though the API takes a `set_id` as parameter the current",
                " implementations ignore this parameter and instead rely on this",
                " method being called at the correct block height, i.e. any point at",
                " which the given set id is live on-chain. Future implementations will",
                " instead use indexed data through an offchain worker, not requiring",
                " older states to be available."
              ]
            },
            {
              "name": "current_set_id",
              "inputs": [],
              "output": 9,
              "docs": [
                " Get current GRANDPA authority set id."
              ]
            }
          ],
          "docs": [
            " APIs for integrating the GRANDPA finality gadget into runtimes.",
            " This should be implemented on the runtime side.",
            "",
            " This is primarily used for negotiating authority-set changes for the",
            " gadget. GRANDPA uses a signaling model of changing authority sets:",
            " changes should be signaled with a delay of N blocks, and then automatically",
            " applied in the runtime after those N blocks have passed.",
            "",
            " The consensus protocol will coordinate the handoff externally."
          ]
        },
        {
          "name": "AccountNonceApi",
          "methods": [
            {
              "name": "account_nonce",
              "inputs": [
                {
                  "name": "account",
                  "ty": 0
                }
              ],
              "output": 4,
              "docs": [
                " Get current account nonce of given `AccountId`."
              ]
            }
          ],
          "docs": [
            " The API to query account nonce."
          ]
        },
        {
          "name": "TransactionPaymentApi",
          "methods": [
            {
              "name": "query_info",
              "inputs": [
                {
                  "name": "uxt",
                  "ty": 783
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 807,
              "docs": []
            },
            {
              "name": "query_fee_details",
              "inputs": [
                {
                  "name": "uxt",
                  "ty": 783
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 808,
              "docs": []
            },
            {
              "name": "query_weight_to_fee",
              "inputs": [
                {
                  "name": "weight",
                  "ty": 7
                }
              ],
              "output": 70,
              "docs": []
            },
            {
              "name": "query_length_to_fee",
              "inputs": [
                {
                  "name": "length",
                  "ty": 4
                }
              ],
              "output": 70,
              "docs": []
            }
          ],
          "docs": []
        },
        {
          "name": "TransactionPaymentCallApi",
          "methods": [
            {
              "name": "query_call_info",
              "inputs": [
                {
                  "name": "call",
                  "ty": 82
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 807,
              "docs": [
                " Query information of a dispatch class, weight, and fee of a given encoded `Call`."
              ]
            },
            {
              "name": "query_call_fee_details",
              "inputs": [
                {
                  "name": "call",
                  "ty": 82
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 808,
              "docs": [
                " Query fee details of a given encoded `Call`."
              ]
            },
            {
              "name": "query_weight_to_fee",
              "inputs": [
                {
                  "name": "weight",
                  "ty": 7
                }
              ],
              "output": 70,
              "docs": [
                " Query the output of the current `WeightToFee` given some input."
              ]
            },
            {
              "name": "query_length_to_fee",
              "inputs": [
                {
                  "name": "length",
                  "ty": 4
                }
              ],
              "output": 70,
              "docs": [
                " Query the output of the current `LengthToFee` given some input."
              ]
            }
          ],
          "docs": []
        },
        {
          "name": "GenesisBuilder",
          "methods": [
            {
              "name": "create_default_config",
              "inputs": [],
              "output": 11,
              "docs": [
                " Creates the default `GenesisConfig` and returns it as a JSON blob.",
                "",
                " This function instantiates the default `GenesisConfig` struct for the runtime and serializes it into a JSON",
                " blob. It returns a `Vec<u8>` containing the JSON representation of the default `GenesisConfig`."
              ]
            },
            {
              "name": "build_config",
              "inputs": [
                {
                  "name": "json",
                  "ty": 11
                }
              ],
              "output": 811,
              "docs": [
                " Build `GenesisConfig` from a JSON blob not using any defaults and store it in the storage.",
                "",
                " This function deserializes the full `GenesisConfig` from the given JSON blob and puts it into the storage.",
                " If the provided JSON blob is incorrect or incomplete or the deserialization fails, an error is returned.",
                " It is recommended to log any errors encountered during the process.",
                "",
                " Please note that provided json blob must contain all `GenesisConfig` fields, no defaults will be used."
              ]
            }
          ],
          "docs": [
            " API to interact with GenesisConfig for the runtime"
          ]
        }
      ],
      "outer_enums": {
        "call_enum_ty": 82,
        "event_enum_ty": 18,
        "error_enum_ty": 812
      },
      "custom": {
        "map": {}
      }
    }
  }
]